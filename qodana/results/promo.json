{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Assignment issues",
  "type": "Assignment can be replaced with operator assignment",
  "severity": "High",
  "comment": "'tokenIndex = tokenIndex - 1' could be simplified to 'tokenIndex -= 1'",
  "detailsInfo": "Reports assignment operations which can be replaced by operator-assignment.\n\nCode using operator assignment is shorter and may be clearer.\n\n**Example:**\n\n      x = x + 3;\n      x = x / 3;\n\nAfter the quick fix is applied:\n\n      x += 3;\n      x /= 3;\n\n\nUse the **Ignore conditional operators** option to ignore `&&`\nand `||`. Replacing conditional operators with operator\nassignment would change the evaluation from lazy to eager, which may change the semantics of the expression.\n\n\nUse the **Ignore obscure operators** option to ignore `^` and `%`, which are less known.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/utils/Trees.java",
      "language": "JAVA",
      "line": 232,
      "offset": 9,
      "length": 27,
      "code": {
        "startLine": 230,
        "length": 27,
        "offset": 105,
        "surroundingCode": "      if (token.getChannel() != Token.DEFAULT_CHANNEL\n        || token.getType() != tokenType) {\n        tokenIndex = tokenIndex - 1;\n        continue;\n      }"
      }
    }
  ],
  "attributes": {
    "module": "bsl-language-server.main",
    "inspectionName": "ReplaceAssignmentWithOperatorAssignment"
  },
  "hash": "f4bd83a063e59f31387e978a3302f082c80bc6929306d567c47a3970b0df596c"
},{
  "tool": "Code Inspection",
  "category": "Assignment issues",
  "type": "Assignment can be replaced with operator assignment",
  "severity": "High",
  "comment": "'tokenIndex = tokenIndex - 1' could be simplified to 'tokenIndex -= 1'",
  "detailsInfo": "Reports assignment operations which can be replaced by operator-assignment.\n\nCode using operator assignment is shorter and may be clearer.\n\n**Example:**\n\n      x = x + 3;\n      x = x / 3;\n\nAfter the quick fix is applied:\n\n      x += 3;\n      x /= 3;\n\n\nUse the **Ignore conditional operators** option to ignore `&&`\nand `||`. Replacing conditional operators with operator\nassignment would change the evaluation from lazy to eager, which may change the semantics of the expression.\n\n\nUse the **Ignore obscure operators** option to ignore `^` and `%`, which are less known.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/utils/Trees.java",
      "language": "JAVA",
      "line": 252,
      "offset": 9,
      "length": 27,
      "code": {
        "startLine": 250,
        "length": 27,
        "offset": 107,
        "surroundingCode": "      var token = tokens.get(tokenIndex);\n      if (token.getChannel() != Token.DEFAULT_CHANNEL) {\n        tokenIndex = tokenIndex - 1;\n        continue;\n      }"
      }
    }
  ],
  "attributes": {
    "module": "bsl-language-server.main",
    "inspectionName": "ReplaceAssignmentWithOperatorAssignment"
  },
  "hash": "349992b006daad04f92a658b5dd0edbb3e9066b9ae179835e2167f891e185136"
}]}