{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Declaration redundancy",
  "type": "'protected' member in 'final' class",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Class member declared `protected` in 'final' class",
  "detailsInfo": "Reports `protected` members in `final`classes.\n\nSince `final` classes cannot be inherited, marking the method as `protected`\nmay be confusing. It is better to declare such members as `private` or package-visible instead.\n\n**Example:**\n\n    record Bar(int a, int b) {\n      protected int sum() { \n         return a + b;\n      }\n    }\n\nAfter the quick-fix is applied:\n\n    record Bar(int a, int b) {\n      int sum() { \n         return a + b;\n      }\n    }\n\nAs shown in the example, a class can be marked as `final` explicitly or implicitly.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/utils/expressiontree/TernaryOperatorNode.java",
      "language": "JAVA",
      "line": 40,
      "offset": 3,
      "length": 9,
      "code": {
        "startLine": 38,
        "length": 9,
        "offset": 30,
        "surroundingCode": "  BslExpression falsePart;\n\n  protected TernaryOperatorNode(BslExpression condition, BslExpression truePart, BslExpression falsePart) {\n    super(ExpressionNodeType.TERNARY_OP);\n    this.condition = condition;"
      }
    }
  ],
  "attributes": {
    "module": "bsl-language-server.main",
    "inspectionName": "ProtectedMemberInFinalClass"
  },
  "hash": "d9c993d92b4291aaeef7c252b06070217bdf419d186aff75c238630e051b7199"
},{
  "tool": "Code Inspection",
  "category": "Imports",
  "type": "Unused import",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Unused import `import org.slf4j.Logger;`",
  "detailsInfo": "Reports redundant `import` statements.\n\nRegular `import` statements are unnecessary when not using imported classes and packages in the source file.\nThe same applies to imported `static` fields and methods that aren't used in the source file.\n\n**Example:**\n\n\n      import java.util.ArrayList;\n      public class Example {\n        public static void main(String[] args) {\n          System.out.println(\"Hello World!\");\n        }\n      }\n\nAfter the quick fix is applied:\n\n\n      public class Example {\n        public static void main(String[] args) {\n          System.out.println(\"Hello World!\");\n        }\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/codelenses/AbstractRunTestsCodeLensSupplier.java",
      "language": "JAVA",
      "line": 34,
      "offset": 1,
      "length": 24,
      "code": {
        "startLine": 32,
        "length": 24,
        "offset": 80,
        "surroundingCode": "import org.eclipse.lsp4j.ClientInfo;\nimport org.eclipse.lsp4j.InitializeParams;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.cache.annotation.CacheConfig;"
      }
    }
  ],
  "attributes": {
    "module": "bsl-language-server.main",
    "inspectionName": "UNUSED_IMPORT"
  },
  "hash": "67e292f072d318e38c809a4e8215440cdd69fe9431a46d89620457ab9f611238"
},{
  "tool": "Code Inspection",
  "category": "Imports",
  "type": "Unused import",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Unused import `import org.slf4j.LoggerFactory;`",
  "detailsInfo": "Reports redundant `import` statements.\n\nRegular `import` statements are unnecessary when not using imported classes and packages in the source file.\nThe same applies to imported `static` fields and methods that aren't used in the source file.\n\n**Example:**\n\n\n      import java.util.ArrayList;\n      public class Example {\n        public static void main(String[] args) {\n          System.out.println(\"Hello World!\");\n        }\n      }\n\nAfter the quick fix is applied:\n\n\n      public class Example {\n        public static void main(String[] args) {\n          System.out.println(\"Hello World!\");\n        }\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/codelenses/AbstractRunTestsCodeLensSupplier.java",
      "language": "JAVA",
      "line": 35,
      "offset": 1,
      "length": 31,
      "code": {
        "startLine": 33,
        "length": 31,
        "offset": 68,
        "surroundingCode": "import org.eclipse.lsp4j.InitializeParams;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.cache.annotation.CacheConfig;\nimport org.springframework.cache.annotation.CacheEvict;"
      }
    }
  ],
  "attributes": {
    "module": "bsl-language-server.main",
    "inspectionName": "UNUSED_IMPORT"
  },
  "hash": "d82dd19bc6a71e2a5db97388aed7d4c8166ea8f22a7b523251b6d29d1e22bdcb"
}]}