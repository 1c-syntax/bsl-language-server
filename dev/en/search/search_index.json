{"config":{"lang":["en","ru"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"BSL Language Server","text":"<p>Language Server Protocol implementation for 1C (BSL) - 1C:Enterprise 8 and OneScript languages.</p> <ul> <li>Contributing guidelines</li> <li>Capabilities</li> <li>Run from command line</li> <li>Run in analyzer mode</li> <li>Run in formatter mode</li> <li>Configuration file</li> <li>Reporters</li> <li>Diagnostics</li> <li>Features</li> <li>Frequently asked questions</li> <li>System requirements</li> <li>Acknowledgments</li> </ul> <p></p> <p>Perfomance measurement - SSL 3.1</p>"},{"location":"#Capabilities","title":"Capabilities","text":"<ul> <li>File formatting</li> <li>Selected region formatting</li> <li>Symbol definition for current file (regions, procedures, functions, variables, defined via <code>Var</code> keyword)</li> <li>Folding regions definition <code>#Region</code>, <code>#If</code>, procedures and functions, code blocks, queries</li> <li>Methods \"Cognitive Complexity\" and \"Cyclomatic Complexity\" scores</li> <li>Tooltip on local methods and methods of common / manager modules</li> <li>Go to method definitions</li> <li>Finding places to use methods</li> <li>Method call hierarchy</li> <li>Expand selection</li> <li>Display color representation and convert between <code>Color</code> and <code>WebColors</code></li> <li>Diagnostics</li> <li>Quick fixes for several diagnostics</li> <li>Run diagnostics engine from command line</li> <li>Run formatter engine from command line</li> <li>Rename symbol</li> </ul>"},{"location":"#Supported-protocol-operations","title":"Supported protocol operations","text":"Workspace Operation Supported Comment didChangeWorkspaceFolders didChangeConfiguration with restrictions, see #1431 didChangeWatchedFiles symbol executeCommand applyEdit willCreateFiles Text Synchronization Opertaion Supported Comment didOpen didChange textDocumentSyncKind = Full didClose didSave willSave willSaveWaitUntil Textdocument Operation Supported Comment Configurable? publishDiagnostics tagSupport = trueversionSupport = true\u0441\u043f\u0438\u0441\u043e\u043a \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a yes completion resolveProvider = false completionItem/resolve hover contentFormat = MarkupContent signatureHelp declaration not applicable in 1C:Enterprise definition linkSupport = true typeDefinition implementation not applicable in 1C:Enterprise references documentHighlight documentSymbol hierarchicalDocumentSymbolSupport = true codeAction codeActionKinds = ? (see #1433)isPreferredSupport = true yes codeAction/resolve codeLens resolveProvider = false \u0434\u0430 codeLens/resolve codeLens/refresh documentLink Displaying hyperlinks to diagnostics documentation.tooltipSupport = trueresolveProvider = false yes documentLink/resolve documentColor colorPresentation formatting rangeFormatting onTypeFormatting rename prepareRename foldingRange selectionRange prepareCallHierarchy callHierarchy/incomingCalls callHierarchy/outgoingCalls semanticTokens linkedEditingRange moniker"},{"location":"#Run-from-command-line","title":"Run from command line","text":"<p>jar-files run through <code>java -jar path/to/file.jar</code>.</p> <pre><code>java -jar bsl-language-server.jar --help\n\nBSL language server\nUsage: bsl-language-server [-h] [-c=&lt;path&gt;] [COMMAND [ARGS]]\n-c, --configuration=&lt;path&gt;\n               Path to language server configuration file\n  -h, --help   Show this help message and exit\nCommands:\n  analyze, -a, --analyze  Run analysis and get diagnostic info\n  format, -f, --format    Format files in source directory\n  version, -v, --version  Print version\n  lsp, --lsp              LSP server mode (default)\n</code></pre> <p>Starting BSL Language Server in standard mode will run the Language Server communicating via LSP. stdin and stdout are used for communication.</p> <p>By default diagnostics texts are displayed in Russian. To switch the diagnostics text language you need to set parameter <code>language</code> in configuration file or raise an event <code>workspace/didChangeConfiguration</code>:</p> <p></p>"},{"location":"#Run-in-analyzer-mode","title":"Run in analyzer mode","text":"<p>To run in analyzer mode use parameter <code>--analyze</code> (short <code>-a</code>).</p> <pre><code>Usage: bsl-language-server analyze [-hq] [-c=&lt;path&gt;] [-o=&lt;path&gt;] [-s=&lt;path&gt;]\n[-r=&lt;keys&gt;]...\nRun analysis and get diagnostic info\n  -c, --configuration=&lt;path&gt;\n                           Path to language server configuration file\n  -h, --help               Show this help message and exit\n-o, --outputDir=&lt;path&gt;   Output report directory\n  -q, --silent             Silent mode\n  -r, --reporter=&lt;keys&gt;    Reporter key (console, junit, json, tslint, generic)\n-s, --srcDir=&lt;path&gt;      Source directory\n  -w, --workspaceDir=&lt;path&gt; Workspace directory\n</code></pre> <p>To set source code folder for analysis use parameter <code>--srcDir</code> (short <code>-s</code>) followed by the path (relative or absolute) to the source code folder.  To generate an analysis report you need to specify one or more reporters. To specify reporter use parameter <code>--reporter</code> or <code>-r</code>, followed by reporter key. You may specify several reporters. The list of reporters see in section  Reporters.</p> <p>Command line example to run analysis:</p> <pre><code>java -jar bsl-language-server.jar --analyze --srcDir ./src/cf --reporter json\n</code></pre> <p>When run analysis for large code base it is recommended to set parameter {code0}-Xmx{/code0} to set maximum limit of  memory being allocated to java process. The size of allocated memory depends on the size of code base for analysis.</p> <pre><code>java -Xmx4g -jar bsl-language-server.jar ... other parameters\n</code></pre> <p></p>"},{"location":"#Run-in-formatter-mode","title":"Run in formatter mode","text":"<p>To run in formatter mode use parameter <code>--format</code> (short <code>-f</code>).</p> <pre><code>Usage: bsl-language-server format [-hq] [-s=&lt;path&gt;]\nFormat files in source directory\n  -h, --help            Show this help message and exit\n-q, --silent          Silent mode\n  -s, --src=&lt;path&gt;      Source directory or file\n</code></pre> <p>To set source code folder (or source file) for formatting use parameter <code>--src</code> (short <code>-s</code>) followed by the path (relative or absolute) to the source code folder (or file).</p> <p>Command line example to run formatting:</p> <pre><code>java -jar bsl-language-server.jar --format --src ./src/cf\n</code></pre> <p></p>"},{"location":"#Configuration-file","title":"Configuration file","text":"<p>A detailed description of the configuration file is given on this page</p> <p></p>"},{"location":"#Special-thanks","title":"Special thanks","text":"<p>Many thanks to all contributors to the project, to all who participated in the discussions, who helped with the testing.</p> <p>You are awesome!</p> <p>Thanks to companies supporting open source projects, and especially to those who supported us:</p> <p> </p> <p>YourKit, LLC is the creator of innovative and intelligent tools for profiling <code>Java</code> and <code>.NET</code> applications. YourKit has offered an open source license YourKit Java Profiler for <code>BSL Language Server</code> to improve its performance.</p> <p>With <code>YourKit Java Profiler</code> we profile and improve project performance.</p> <p></p> <p>JetBrains is the creator of professional software for development. JetBrains has offered an open source license for his products, including <code>IntelliJ IDEA Ultimate</code>.</p> <p><code>IntelliJ IDEA Ultimate</code> is one of the best tools in its class.</p> <p></p> <p>Digilabs - authors of <code>Alkir</code> - a software package for monitoring the performance of systems based on 1C:Enterprise 8. Digilabs provides us with server facilities for continuous performance testing of the BSL Language Server.</p>"},{"location":"faq/","title":"Frequently asked questions","text":"<p>This section contains the most frequently asked questions and answers.</p>"},{"location":"faq/#How-to-change-the-language-of-diagnostic-messages","title":"How to change the language of diagnostic messages?","text":"<p>To change the language of displayed messages from Russian (default) to English, you can use the configuration file. The configuration options can be found in the description of configuration file.</p>"},{"location":"faq/#How-to-increase-the-maximum-line-length-in-diagnostics-Line-length-limit","title":"How to increase the maximum line length in diagnostics <code>Line length limit</code>?","text":"<p>All diagnostics has a page with a description in the <code>Diagnostics</code> section, for example, Line length limit. If the diagnosis can change its behavior, then on the description page there will be parameters with a description of what they affect. In this case, the <code>maxLineLength</code> parameter is responsible for the maximum line length.</p>"},{"location":"faq/#How-to-disable-Lens-on-cognitive-complexity","title":"How to disable Lens on cognitive complexity?","text":"<p>To disable the <code>lens</code> with information about cognitive complexity, you should use the configuration file in which <code>showCognitiveComplexity</code> set to <code>false</code>. The configuration options can be found in the description of the configuration file.</p>"},{"location":"faq/#I-think-that-the-diagnosis-does-not-work-correctly-What-to-do","title":"I think that the diagnosis does not work correctly. What to do?","text":"<p>In case of doubt (or confidence) that the diagnosis is not working correctly, there are two ways</p> <ul> <li>contact the telegram chat and describe situation, maybe still there is no error</li> <li>create issue (issue) in the project repository of the appropriate type, where to attach the error description and, it is very desirable, code examples where the diagnosis does not work correctly.</li> </ul>"},{"location":"faq/#BSL-Language-Server-and-SonarQube-plugin-are-the-same-things","title":"<code>BSL Language Server</code> and <code>SonarQube</code> plugin are the same things?","text":"<p><code>BSL Language Server</code> is a stand-alone application, the implementation of the server side of the LSP protocol. The plugin for <code>SonarQube</code> uses the <code>BSL Language Server</code> to analyze the BSL source code (1C configurations, 1Script and 1Script.Web scripts).</p> <p><code>BSL Language Server</code> can be used with any application that has an LSP client implementation. Verified connections:</p> <ul> <li>plugin for VS code;</li> <li>additional utility for 1C:Enterprise in DESIGNER mode Phoenix BSL;</li> <li>plugin for Sublime Text.</li> </ul> <p>Also through direct import <code>BSL Language Server</code> work:</p> <ul> <li>plugin for 1C: Enterprise development tools (own implementation, without LSP);</li> <li>plugin for SonarQube;</li> </ul>"},{"location":"systemRequirements/","title":"System requirements","text":"<p>Using <code>BSL Language Server</code> has some limitations, listed bellow</p>"},{"location":"systemRequirements/#Supported-Java-Versions","title":"Supported Java Versions","text":"<p><code>BSL Language Server</code> is a console Java application and requires the presence of a Java virtual machine on the computer.</p> <p>The minimum supported version is Java 11, but as part of the build pipelines, a health check is performed when using more recent versions. Java versions 11 and 17 are currently supported.</p> <p>JDK vendor is also interesting. Due to the changed licensing policy of Oracle, it is recommended to use open implementations of the <code>OpenJDK</code> virtual machine: AdoptOpenJDK, Liberica JDK.</p>"},{"location":"systemRequirements/#Supported-OS","title":"Supported OS","text":"<p><code>BSL Language Server</code> should work on all systems running modern desktop and server operating systems which supported Java. The most popular environments are tested as part of the build pipelines:</p> <ul> <li>Windows 7/10, Windows server 2012 and higher supported</li> <li>latest Linux OS supported.</li> <li>latest MacOS supported</li> </ul>"},{"location":"contributing/","title":"Contributor's Guide","text":"<p>This section contains articles containing information for developers of diagnostics and kernel functionality.</p>"},{"location":"contributing/#Instructions","title":"Instructions","text":"<ul> <li>Start<ul> <li>Setting environment</li> <li>Quick start</li> <li>Style guide</li> <li>JavaDoc</li> </ul> </li> <li>Diagnostics development<ul> <li>Diagnostic development workflow</li> <li>Diagnostic development example</li> <li>Diagnostic structure, purpose and content of files</li> <li>Diagnostic type and severity description</li> <li>Diagnostic tags</li> <li>Add parameters to Diagnostic</li> <li>Add QuickFix to Diagnostic</li> </ul> </li> <li>General mechanisms<ul> <li>Events subsystem</li> <li>Performance measurement</li> </ul> </li> </ul>"},{"location":"contributing/DiagnostcAddSettings/","title":"Adding parameters for diagnostic","text":"<p>Some diagnostics may have parameters that allow end users to customize the algorithm. For example: the parameter can be the maximum string length for diagnostics for long strings or a list of numeric constants that are not magic numbers.</p>"},{"location":"contributing/DiagnostcAddSettings/#Diagnostic-parameter-implementation","title":"Diagnostic parameter implementation","text":"<p>To implement the diagnostic parameter, you need to make changes to the diagnostic files.</p>"},{"location":"contributing/DiagnostcAddSettings/#Diagnostic-class-change","title":"Diagnostic class change","text":"<p>Add a constant field to the diagnostic class, in which the default value of the parameter will be saved. For example <code>private static final String DEFAULT_COMMENTS_ANNOTATION = \"//@\";</code>.</p> <p>It is necessary to add a private field in which the parameter value will be stored. The field needs to be annotated <code>@DiagnosticParameter</code> In the annotation, you must specify the type of the parameter and the default value (the value is always a string type). For example</p> <pre><code>@DiagnosticParameter(\ntype = String.class,\ndefaultValue = \"\" + DEFAULT_COMMENTS_ANNOTATION\n)\nprivate String commentsAnnotation = DEFAULT_COMMENTS_ANNOTATION;\n</code></pre> <p>If the parameter is primitive or of type String and it is set by a simple setter, then that's it. If the parameter is \"hard\", for example, a pattern string for a regular expression that must be evaluated before setting, then you need to implement a method for setting parameter values <code>configure</code>.</p> <p>For example, there are two parameters:</p> <ul> <li><code>commentAsCode</code> - recognize comments as code, type boolean</li> <li><code>excludeMethods</code> - \u043cmethods that do not need to be checked, type ArrayList</li> </ul> <p>Then the method of setting the parameter values will look:</p> <pre><code> @Override\npublic void configure(Map&lt;String, Object&gt; configuration) {\n// to set \"simple properties\" including \"commentAsCode\"\nsuper.configure(configuration);\n\n// setting the \"hard\" property \"excludeMethods\"\nString excludeMethodsString =\n(String) configuration.getOrDefault(\"excludeMethods\", EXCLUDE_METHODS_DEFAULT);\nthis.excludeMethods = new ArrayList&lt;&gt;(Arrays.asList(excludeMethodsString.split(\",\")));\n}\n</code></pre>"},{"location":"contributing/DiagnostcAddSettings/#Test-change","title":"Test change","text":"<p>It is necessary to add a test to change the diagnostic settings. The test is added to the diagnostic test class (a separate method for each combination of diagnostic setting options). At the beginning of the test, you need to set the value of the diagnostic parameter, the subsequent steps are similar to the general rules for writing tests. To set a diagnostic parameter from a test, you need to get the default diagnostic configuration using the method <code>getDefaultConfiguration()</code> from the metadata of the current diagnostic <code>diagnosticInstance.getInfo()</code>. The next step is to change the parameter value by adding to the configuration collection, and then reconfigure using the method <code>configure</code>. Example</p> <pre><code>// get current configuration\nMap&lt;String, Object&gt; configuration = diagnosticInstance.getInfo().getDefaultConfiguration();\n\n// setting the new value\nconfiguration.put(\"commentsAnnotation\", \"//(\u0441)\");\n\n// reconfiguring\ndiagnosticInstance.configure(configuration);\n</code></pre>"},{"location":"contributing/DiagnostcAddSettings/#Adding-a-Parameter-Description","title":"Adding a Parameter Description","text":"<p>For correct operation, it is necessary to add a parameter description for each language in the diagnostic resource files. Diagnostic resources are located in files <code>resources/com/github/_1c_syntax/bsl/languageserver/diagnostics/&lt;DIAGNOSTIC_KEY&gt;_en.properties</code> and <code>resources/com/github/_1c_syntax/bsl/languageserver/diagnostics/&lt;DIAGNOSTIC_KEY&gt;_ru.properties</code>. In each file, add a new line with the parameter name and description</p> <pre><code>commentsAnnotation=Skip annotation comments starting with the specified substrings. A comma separated list. For example: //@,//(c)\n</code></pre>"},{"location":"contributing/DiagnostcAddSettings/#Documentation-change","title":"Documentation change","text":"<p>Adding information about diagnostic parameters to the documentation occurs automatically during build.</p>"},{"location":"contributing/DiagnosticDevWorkFlow/","title":"Diagnostic development workflow","text":"<ol> <li>Go to the section issues and select your task from the list. It is necessary to choose tasks that do not have an executor, i.e. <code>Assignees</code> is not specified (the block is on the right, almost under the heading).</li> <li>If there is no task for diagnostics, then you need to create it by clicking the <code>New issue</code> button</li> <li>Write in the comments to the task to the maintainers that you want to take the task to work. After your nickname appears in the task in the <code>Assignees</code> block, you can proceed.</li> <li>You need to create a fork of the repository in <code>GitHub</code>, clone the repository to your computer and create a new feature branch (development by git flow).</li> <li>If the fork has already been created earlier, then you need to update the <code>develop</code> branch from the primary repository. The easiest way to do this is as follows<ol> <li>The local repository has two remote repository addresses: yours and primary</li> <li>Get updates from both repositories <code>git fetch --progress \"--all\" --prune</code></li> <li>In the local repository, switch to the branch <code>develop</code></li> <li>Reset the branch state to the state of the primary repository (<code>git reset --hard</code>)</li> <li>Pushin the branch to your remote repository</li> </ol> </li> <li> <p>To create all the necessary files in the right places, you need to run the command <code>gradlew newDiagnostic --key=\"KeyDiagnostic\"</code>, instead <code>KeyDiagnostic</code> you must specify the key of your diagnostic. Details in help <code>gradlew -q help --task newDiagnostic</code>. Parameters:</p> </li> <li> <p><code>--key</code> - Diagnostic key</p> </li> <li><code>--nameRu</code> - Russian description</li> <li><code>--nameEn</code> - English description</li> </ol> <p>At startup, a list of available diagnostic tags is displayed. You must enter 1-3 tags from the space separated ones.</p> <ol> <li>To develop</li> <li> <p>After completion of the development of diagnostics: it is necessary to check the changes (after testing), and also perform a number of service tasks. To simplify, a special command has been created that can be run in the console <code>gradlew precommit</code> or from the Gradle taskbar <code>precommit</code>. Task includes subtasks Sub Commands</p> </li> <li> <p>check - checking and testing the entire project</p> </li> <li>licenseFormat - set license block in java source files</li> <li> <p>updateJsonSchema - update the json schema of the configuration file</p> </li> <li> <p>If everything is done correctly, you need to commit the changes and push to your remote repository.</p> </li> <li>You need to create <code>Pull request</code> from your feature branch to the <code>develop</code> branch of the primary repository and fill in the information in the description.</li> <li>Before closing the <code>pull request</code>, the maintainers will check the code and make comments. Bug fixes must be done in the same feature branch, github will automatically add the changes to the generated <code>pull request</code>.</li> <li>Closing a <code>pull request</code> confirms the completion of the task.</li> </ol>"},{"location":"contributing/DiagnosticExample/","title":"An example of creating a new diagnostic","text":"<p>Diagnostics is a class that analyzes the source code to identify a problem or error.</p>"},{"location":"contributing/DiagnosticExample/#Diagnostic-contents-briefly","title":"Diagnostic contents (briefly)","text":"<p>To implement diagnostics, you need to create several files</p> <ul> <li>Diagnostic implementation class</li> <li>Two resource files (for English and Russian) containing the name of the diagnostic and the error message</li> <li>BSL fixture file used for diagnostic testing</li> <li>Diagnostic test class</li> <li>Two files (for English and Russian) with diagnostic documentation</li> </ul> <p>A detailed description of the contents of the files and the rules of use can be found in article.</p>"},{"location":"contributing/DiagnosticExample/#Create-Diagnostic","title":"Create Diagnostic","text":"<p>Below is an example of creating diagnostics based on the already created one.</p>"},{"location":"contributing/DiagnosticExample/#Determining-the-purpose-of-diagnostic","title":"Determining the purpose of diagnostic","text":"<p>Before implementing a new diagnostic, you need to define its purpose - what error (or deficiency) you need to detect. As an example, we will write a diagnostic that checks for the presence of a semicolon <code>;</code> at the end of each expression. The next step is to come up with a unique diagnostic key, under which it will be added to the general list of diagnostics. Let's take the name <code>SemicolonPresence</code>.</p>"},{"location":"contributing/DiagnosticExample/#Diagnostic-implementation-class","title":"Diagnostic implementation class","text":"<p>In the directory <code>src/main/java</code> in the package <code>com.github._1c_syntax.bsl.languageserver.diagnostics</code>, create the <code>SemicolonPresenceDiagnostic.java</code> diagnostic class file. In the file, create the class of the same name, inherited from the <code>AbstractVisitorDiagnostic</code> class. The result will be</p> <pre><code>package com.github._1c_syntax.bsl.languageserver.diagnostics;\n\npublic class SemicolonPresenceDiagnostic extends AbstractVisitorDiagnostic {\n}\n</code></pre> <p>Each diagnostic must have a <code>@DiagnosticMetadata</code>, class annotation containing diagnostic metadata. Details on annotations in [article][DiagnosticStructure]. In the example, we implement diagnostics related to the quality of the code (<code>CODE_SMELL</code>), low priority (<code>MINOR</code>), which requires 1 minute to fix and related to the 1C standard. The resulting annotated class</p> <pre><code>package com.github._1c_syntax.bsl.languageserver.diagnostics;\n\n@DiagnosticMetadata(\ntype = DiagnosticType.CODE_SMELL,\nseverity = DiagnosticSeverity.MINOR,\nminutesToFix = 1,\ntag = {\nDiagnosticTag.STANDARD\n}\n)\npublic class SemicolonPresenceDiagnostic extends AbstractVisitorDiagnostic {\n}\n</code></pre>"},{"location":"contributing/DiagnosticExample/#Class-resources","title":"Class resources","text":"<p>In the directory <code>src/main/resources</code> in the package <code>com.github._1c_syntax.bsl.languageserver.diagnostics</code> create 2 diagnostic resource files. In our example, these will be files <code>SemicolonPresenceDiagnostic_ru.properties</code> and <code>SemicolonPresenceDiagnostic_en.properties</code>. Save the name (parameter <code>diagnosticName</code>) and message (<code>diagnosticMessage</code>) of the diagnostic in the created files. In our example, the contents of the files will be like this</p> <p>File <code>SemicolonPresenceDiagnostic_ru.properties</code></p> <pre><code>diagnosticMessage =Missing semicolon at end of expression\ndiagnosticName =Expression must end with \";\"\n</code></pre> <p>File <code>SemicolonPresenceDiagnostic_en.properties</code></p> <pre><code>diagnosticMessage=Missed semicolon at the end of statement\ndiagnosticName=Statement should end with \";\"\n</code></pre>"},{"location":"contributing/DiagnosticExample/#Test-fixtures","title":"Test fixtures","text":"<p>For testing purposes, let's add a file to the project containing examples of both erroneous and correct code. We will place the <code>SemicolonPresenceDiagnostic.bsl</code> file with fixtures in the <code>src/test/resources</code> resources directory in the <code>diagnostics</code> package. As data for testing, let's add the code to the file</p> <pre><code>A = 0;\nIf True Then\n  A = 0;\n  A = 0           // Diagnostics should work here\nEndIf             // and here\n</code></pre> <p>Attention! It is necessary to mark with comments the places where the diagnostics should work.</p>"},{"location":"contributing/DiagnosticExample/#Test-writing","title":"Test writing","text":"<p>In the directory <code>src/test/java</code> in the package <code>com.github._1c_syntax.bsl.languageserver.diagnostics</code> create a file <code>SemicolonPresenceDiagnosticTest.java</code> for the test diagnostic class. In the file, create a class of the same name inherited from the <code>AbstractDiagnosticTest</code> class for the created diagnostic class.  As a result, we get</p> <pre><code>package com.github._1c_syntax.bsl.languageserver.diagnostics;\n\nclass SemicolonPresenceDiagnosticTest extends AbstractDiagnosticTest&lt;SemicolonPresenceDiagnostic&gt;{\nSemicolonPresenceDiagnosticTest() {\nsuper(SemicolonPresenceDiagnostic.class);\n}\n}\n</code></pre> <p>Simplified basic test consists of the steps</p> <ul> <li>getting a list of diagnostics</li> <li>checking the number of items found</li> <li>checking the location of detected items</li> </ul> <p>Without going into detail, remember that</p> <ul> <li>To get diagnostics for a fixture, use the <code>getDiagnostics()</code> method implemented in the abstract class <code>AbstractDiagnosticTest</code>. It returns a list of encountered errors of the current type.</li> <li>To check the number of errors, use the <code>hasSize</code>, assertion, the parameter of which will be the number of expected elements.</li> <li>To check for each error, it is necessary to compare the error range with the expected range.</li> </ul> <p>The resulting test class</p> <pre><code>class SemicolonPresenceDiagnosticTest extends AbstractDiagnosticTest&lt;SemicolonPresenceDiagnostic&gt; {\n\nSemicolonPresenceDiagnosticTest() {\nsuper(SemicolonPresenceDiagnostic.class);\n}\n\n@Test\nvoid test() {\nList&lt;Diagnostic&gt; diagnostics = getDiagnostics();\n\nassertThat(diagnostics).hasSize(2);\nassertThat(diagnostics, true)\n.hasRange(4, 0, 4, 9)\n.hasRange(3, 6, 3, 7);\n}\n}\n</code></pre>"},{"location":"contributing/DiagnosticExample/#Diagnostic-algorithm-implementation","title":"Diagnostic algorithm implementation","text":"<p>According to the rules of the grammar of the language, described in the project BSLParser, for our example, it is necessary to analyze nodes with the type <code>statement</code>. Need to use visitor <code>visitStatement</code>. Each selected node of the AST-tree must contain an ending \"semicolon\" represented by node <code>SEMICOLON</code>.</p> <p>Thus, the check will be to find the <code>SEMICOLON</code> token in each <code>statement</code> node. If the token is not found, then an error must be added. After implementation of the check, the file will take the form</p> <pre><code>package com.github._1c_syntax.bsl.languageserver.diagnostics;\n\n@DiagnosticMetadata(\ntype = DiagnosticType.CODE_SMELL,\nseverity = DiagnosticSeverity.MINOR,\nminutesToFix = 1,\ntag = {\nDiagnosticTag.STANDARD\n}\n)\npublic class SemicolonPresenceDiagnostic extends AbstractVisitorDiagnostic {\n@Override\npublic ParseTree visitStatement(BSLParser.StatementContext ctx) { // selected visitor\nif (ctx.SEMICOLON() == null) {                                // getting child node SEMICOLON\ndiagnosticStorage.addDiagnostic(ctx);                     // adding error\n}\n// For non-terminal expressions, the super method must be\n//  called as the return value.\nreturn super.visitStatement(ctx);\n}\n}\n</code></pre> <p>It is necessary to run a diagnostic test and make sure that it works correctly.</p>"},{"location":"contributing/DiagnosticExample/#Creating-a-diagnostic-description","title":"Creating a diagnostic description","text":"<p>To describe the created diagnostics, create two files <code>SemicolonPresence.md</code>: in catalog<code>docs/diagnostics</code> in Russian, in catalog <code>docs/en/diagnostics</code> in English.</p>"},{"location":"contributing/DiagnosticExample/#Completion","title":"Completion","text":"<p>The help index is updated automatically when the documentation site is built, so you don't have to do anything by hand.</p> <p>Before finishing development, you need to run <code>gradlew precommit</code> from the command line or <code>precommit</code> from the Gradle taskbar in the IDE.</p>"},{"location":"contributing/DiagnosticQuickFix/","title":"Adding \"Quick Fixes\"","text":"<p>\"Quick fix\" is an action on the code that modifies the text in the editor according to the selected menu item. For example: \u201cDelete commented-out code\u201d allows one-click removal of the code found by the diagnostics \u201cModules should not contain commented-out code\u201d.</p>"},{"location":"contributing/DiagnosticQuickFix/#Developing","title":"Developing","text":"<p>Quick fixes are provided by classes that implement the QuickFixProvider interface. Currently, only diagnostic classes can be such classes.</p> <p>To add a quick fix to any diagnostics, implement the QuickFixProvider interface in it. </p>"},{"location":"contributing/DiagnosticStructure/","title":"Diagnostics structure, files contents and purpose","text":"<p>This article contains rules of diagnostics usage, creation and information about content templates.</p> <ul> <li>Diagnostics structure, files contents and purpose</li> <li>Diagnostics structure</li> <li>Diagnostics implementation class<ul> <li>Diagnostics class, implements BSLDiagnostic interface</li> <li>Diagnostics class, inherits from AbstractDiagnostic</li> <li>Diagnostics class, inherits from AbstractVisitorDiagnostic</li> <li>Diagnostics class, inherits from AbstractListenerDiagnostic (Work in Progress)</li> </ul> </li> <li>Diagnostics test class<ul> <li>Diagnostics test</li> <li>Test of configuration method for parameterized diagnostics</li> <li>Quick fixes test (Work in progress)</li> </ul> </li> <li>Diagnostics resources</li> <li>Diagnostics test resources</li> <li>Diagnostics description</li> </ul>"},{"location":"contributing/DiagnosticStructure/#Diagnostics-structure","title":"Diagnostics structure","text":"<p>Diagnostics consists of a set of files, which are described in detail in the sections below. The required set of files as part of the diagnostics at the time of this writing and the rules for their naming</p> <ul> <li>Diagnostic implementation class.                 The file name is formed according to the principle <code>% Diagnostic Key%</code> + <code>Diagnosctic.java</code></li> <li>Diagnostics test class.                      The file name is generated according to the principle <code>%DiagnosticKey%</code> + <code>DiagnoscticTest.java</code></li> <li>Diagnostic resource file in Russian.    The file name is formed according to the principle <code>%DiagnosticKey%</code> + <code>Diagnosctic_en.properties</code></li> <li>Diagnostic resource file in English. The file name is formed according to the principle <code>%DiagnosticKey%</code> + <code>Diagnosctic_en.properties</code></li> <li>Resource file (fixture) test.                The file name is formed according to the principle <code>%DiagnosticKey%</code> + <code>Diagnosctic.bsl</code></li> <li>Diagnostic description file in Russian.   The file name is formed according to the principle <code>%DiagnosticKey%</code> + <code>.md</code></li> <li>Diagnostic resource file in English. The file name is formed according to the principle <code>%DiagnosticKey%</code> + <code>.md</code></li> </ul> <p>Note: To create necessary files in right places, should run command <code>gradlew newDiagnostic --key=\"KeyDiagnostic\"</code>, where <code>KeyDiagnostic</code> should be replaced with your own diagnostics key. Details in help <code>gradlew -q help --task newDiagnostic</code>.</p>"},{"location":"contributing/DiagnosticStructure/#Diagnostics-implementation-class","title":"Diagnostics implementation class","text":"<p>Diagnostics is implemented by adding a java class to the <code>com.github._1c_syntax.bsl.languageserver.diagnostics</code> package in the <code>src/main/java</code> directory.</p> <p>In the body of the file, you need to specify the package to which the class and the import block are added (when using ide, the import list is updated automatically). It is necessary to ensure that only is imported that is necessary for implementation, everything unused should be removed (if settings are correct, then ide will do everything automatically).</p> <p>Each diagnostic must have a <code>@DiagnosticMetadata</code>, class annotation containing diagnostic metadata. The actual content can always be obtained by examining the file.</p> <p>At the time of this writing, the following properties are available:</p> <ul> <li>The type of diagnostics is <code>type</code> and its importance is <code>severity</code>, for each diagnostics it is necessary to define them. In order to choose the correct type and importance of diagnostics, you can refer to article.</li> <li>Time to fix issue <code>minutesToFix</code> (default 0). This value is used when calculating the total technical debt of the project in labor costs to correct all comments (the sum of time to correct for all detected comments). It is worth indicating the time, as realistic as possible, that the developer should spend on fixing.</li> <li>A set of diagnostics tags <code>tag</code> that indicate the group to which it belongs. Read more about tags in the article.</li> <li>Applicability limit <code>scope</code> (by default <code>ALL</code>, i.e. no limit). BSL LS supports multiple languages (oscript and bsl) and diagnostics can be applied to one specific language or to all at once.</li> <li>Default diagnostic active <code>activatedByDefault</code> (default <code>True</code>). When developing experimental, controversial, or not applicable in most projects, it is worth turning off diagnostics by default, the activation will be performed by the end user of the solution.</li> <li>Compatibility mode <code>compatibilityMode</code>, by which diagnostics are filtered when using metadata. The default is <code>UNDEFINED</code>.</li> </ul> <p>The last two can be omitted.</p> <p>Annotation example</p> <pre><code>@DiagnosticMetadata(\ntype = DiagnosticType.CODE_SMELL,\nseverity = DiagnosticSeverity.MINOR,\nminutesToFix = 1,\nactivatedByDefault = false,          // Deactivated by default\nscope = DiagnosticScope.BSL,         // Applicable only for BSL\ncompatibilityMode = DiagnosticCompatibilityMode.COMPATIBILITY_MODE_8_3_3, // 8.3.3 compatibility mode\ntags = {\nDiagnosticTag.STANDARD             // This is a diagnosis for violation of the 1C standard\n}\n)\n</code></pre> <p>Class should implement the interface <code>BSLDiagnostic</code>. If diagnostic bases on AST, that class should extends at one of classes, that implement <code>BSLDiagnostic</code> below:</p> <ul> <li>for simple diagnostics (module context checking) it is worth using inheritance <code>AbstractVisitor</code> with the implementation of a single <code>check</code> method</li> <li>if you need to analyze a visit to a node / sequence of nodes, use the <code>listener</code> strategy, you need to inherit the class from <code>AbstractListenerDiagnostic</code></li> <li>in other cases, you need to use the strategy <code>visitor</code> and</li> <li><code>AbstractVisitorDiagnostic</code> for diagnostics of 1C code</li> <li><code>AbstractSDBLVisitorDiagnostic</code> for diagnostics of 1C query</li> </ul> <p>Examples</p> <pre><code>public class TemplateDiagnostic implements BSLDiagnostic\n</code></pre> <pre><code>public class TemplateDiagnostic extends AbstractDiagnostic\n</code></pre> <pre><code>public class TemplateDiagnostic extends AbstractVisitorDiagnostic\n</code></pre> <pre><code>public class TemplateDiagnostic extends AbstractListenerDiagnostic\n</code></pre> <pre><code>public class TemplateDiagnostic extends AbstractSDBLVisitorDiagnostic\n</code></pre> <pre><code>public class TemplateDiagnostic extends AbstractSDBLListenerDiagnostic\n</code></pre> <p>Diagnostic may provide so-called <code>quick fixes</code>. In order to provide quick fixes the diagnostic class must implement <code>QuickFixProvider</code> interface. See this article on adding a <code>quick fix</code> to diagnostic.</p> <p>Examples</p> <pre><code>public class TemplateDiagnostic implements BSLDiagnostic, QuickFixProvider\n</code></pre> <pre><code>public class TemplateDiagnostic extends AbstractDiagnostic implements QuickFixProvider\n</code></pre> <pre><code>public class TemplateDiagnostic extends AbstractVisitorDiagnostic implements QuickFixProvider\n</code></pre> <pre><code>public class TemplateDiagnostic extends AbstractListenerDiagnostic implements QuickFixProvider\n</code></pre> <pre><code>public class TemplateDiagnostic extends AbstractSDBLVisitorDiagnostic implements QuickFixProvider\n</code></pre> <pre><code>public class TemplateDiagnostic extends AbstractSDBLListenerDiagnostic implements QuickFixProvider\n</code></pre> <p>After the declaration of the class, a block with their parameters is located for parameterizable diagnostics. For details on the diagnostic parameters, see the article.</p> <p>Below are the differences in the implementation of diagnostic classes.</p>"},{"location":"contributing/DiagnosticStructure/#Diagnostics-class-implements-BSLDiagnostic-interface","title":"Diagnostics class, implements BSLDiagnostic interface","text":"<p>In the class, you need to define a private field <code>diagnosticStorage</code> of type <code>DiagnosticStorage</code> to store detected diagnostics, and a private property <code>info</code> of type <code>DiagnosticInfo</code>, for access to diagnostic data.</p> <pre><code> private DiagnosticStorage diagnosticStorage = new DiagnosticStorage(this);\nprivate final DiagnosticInfo info;\n</code></pre> <p>In the class, you need to implement:</p> <ul> <li>method <code>getDiagnostics</code> accepting the context of the file being analyzed and returning a list of detected diagnostics <code>List&lt;Diagnostic&gt;</code></li> <li>getter <code>getInfo</code></li> <li>setter <code>setInfo</code></li> </ul> <p>Method structure <code>getDiagnostics</code></p> <pre><code>  @Override\npublic List&lt;Diagnostic&gt; getDiagnostics(DocumentContext documentContext) {\n// Clearing diagnostics storage\ndiagnosticStorage.clearDiagnostics();\n\ndocumentContext.getComments()  // Getting the collection of tokens, here comments\n.parallelStream()\n.filter((Token t) -&gt;         // Search for \"necessary\" - those that the diagnostics is aimed at detecting\n!goodCommentPattern.matcher(t.getText()).matches())\n.sequential()\n.forEach((Token t) -&gt;        // Adding errors, here for each token a separate error\ndiagnosticStorage.addDiagnostic(t));\n\n// Return of found\nreturn diagnosticStorage.getDiagnostics();\n}\n</code></pre>"},{"location":"contributing/DiagnosticStructure/#Diagnostics-class-inherits-from-AbstractDiagnostic","title":"Diagnostics class, inherits from AbstractDiagnostic","text":"<p>For simple diagnostics, you should inherit your class from the AbstractDiagnostic class. In the diagnostic class, you need to implement the <code>check</code> method. The method should analyze the context of the document and, if noted, add diagnostics to <code>diagnosticStorage</code>.</p> <p>Example:</p> <pre><code>  @Override\nprotected void check() {\ndocumentContext.getTokensFromDefaultChannel()\n.parallelStream()\n.filter((Token t) -&gt;\nt.getType() == BSLParser.IDENTIFIER &amp;&amp;\nt.getText().toUpperCase(Locale.ENGLISH).contains(\"\u0401\"))\n.forEach(token -&gt; diagnosticStorage.addDiagnostic(token));\n}\n</code></pre>"},{"location":"contributing/DiagnosticStructure/#Diagnostics-class-inherits-from-AbstractVisitorDiagnostic","title":"Diagnostics class, inherits from AbstractVisitorDiagnostic","text":"<p>In the diagnostic class, it is necessary to implement the methods of all necessary <code>AST visitors</code>, in accordance with the language grammar described in the  BSLParser  project.  A complete list of existing visitor methods can be found in the <code>BSLParserBaseVisitor</code> class. Please note: for simplicity, <code>generalized</code> visitors have been created, for example, instead of two <code>visitFunction</code> for a function and <code>visitProcedure</code> for a procedure, you can use <code>visitSub</code>.</p> <p>As a parameter, an AST node of the corresponding type is passed to each method of the visitor. In the body of the method, it is necessary to analyze the node and / or its child nodes and decide if there is an error. When a problem is found, it must be added to <code>diagnosticStorage</code> (the field is already defined in the abstract class). An error note can be attached to the passed node or to its child or parent nodes, to the desired block of code.</p> <p>Method structure</p> <pre><code>  @Override\npublic ParseTree visitModuleVar(BSLParser.ModuleVarContext ctx) {                 // Visitor for module variables\nif(Trees.findAllRuleNodes(ctx, BSLParser.RULE_compilerDirective).size() &gt; 1) {  // Finding child nodes\ndiagnosticStorage.addDiagnostic(ctx);                                         // Adding a error to the entire site\n}\nreturn ctx;\n}\n</code></pre> <p>If the diagnostics does not provide analysis of nested nodes, then it must return the passed input node, otherwise it is necessary to call the <code>super-method</code> of the same name.  This rule will save application resources without making a meaningless call.</p> <p>Examples:</p> <ul> <li>Diagnostics for a method or file must immediately return a value, because nested methods/files do not exist</li> <li>Diagnostics for a condition or region block must call the <code>super-method</code>, as they exist and are used (e.g. <code>return super.visitSub(ctx)</code> for methods)</li> </ul>"},{"location":"contributing/DiagnosticStructure/#Diagnostics-class-inherits-from-AbstractSDBLVisitorDiagnostic","title":"Diagnostics class, inherits from AbstractSDBLVisitorDiagnostic","text":"<p>The diagnostic class implements the necessary <code>AST visitors</code>, according to the grammar of the query language (see BSLParser). The complete list of visitor methods is in the <code>SDBLParserBaseVisitor</code> class.</p> <p>The rest of the rules are identical to <code>AbstractVisitorDiagnostic</code>.</p>"},{"location":"contributing/DiagnosticStructure/#Diagnostics-class-inherits-from-AbstractListenerDiagnostic-Work-in-Progress","title":"Diagnostics class, inherits from AbstractListenerDiagnostic (Work in Progress)","text":"<p>"},{"location":"contributing/DiagnosticStructure/#Diagnostics-test-class","title":"Diagnostics test class","text":"<p>The tests use the JUnit5 framework and the AssertJ assertion library providing a fluent interface \"expectations\", like the familiar asserts library for OneScript.</p> <p>A test is a java class added to the <code>com.github._1c_syntax.bsl.languageserver.diagnostics</code> package in the <code>src/test/java</code> directory.</p> <p>In the file, you need to specify the package in which the class and the import block (similar to the diagnostic implementation class) are added, then you need to create a class of the same name to the file, inherited from the <code>AbstractDiagnosticTest</code> class for the created diagnostic class.</p> <p>Test class example</p> <pre><code>package com.github._1c_syntax.bsl.languageserver.diagnostics;\n\nimport org.eclipse.lsp4j.Diagnostic;\nimport com.github._1c_syntax.bsl.languageserver.utils.Ranges;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.List;\n\nimport static org.assertj.core.api.Assertions.assertThat;\n\nclass TemplateDiagnosticTest extends AbstractDiagnosticTest&lt;TemplateDiagnostic&gt; {\n\nTemplateDiagnosticTest() {\nsuper(TemplateDiagnostic.class);\n}\n}\n</code></pre> <p>To add a new test to the created class, you need to add a method with the <code>@Test</code> annotation.</p> <p>The test class must contain methods for testing.</p> <ul> <li>diagnostic test itself</li> <li>test of configuration method for parameterized diagnostics</li> <li>test \"quick fixes\" if available</li> </ul>"},{"location":"contributing/DiagnosticStructure/#Diagnostics-test","title":"Diagnostics test","text":"<p>Simplified, the diagnostic test contains the steps</p> <ul> <li>getting a list of diagnostics</li> <li>checking the number of items found</li> <li>checking the location of detected items</li> </ul> <p>The first step is to get the list of notes by calling the <code>getDiagnostics()</code> method (implemented in the <code>AbstractDiagnosticTest</code> class). Calling this method will parse the diagnostics resource file and return a list of remarks in it. The next step is to use the <code>hasSize()</code> statement to make sure that the number of diagnostics is fixed as much as allowed in the fixtures. After that, you need to make sure that the diagnostics are detected correctly. To do this, you need to compare the diagnostic area obtained by the <code>getRange()</code> method with the expected area (you should use the <code>RangeHelper</code> class to simplify the formation of control values). If the text of the error is templated, then it is necessary to check it in the test by getting the text of the error message using the <code>getMessage()</code> method of diagnostics.</p> <p>Test method example</p> <pre><code>    @Test\nvoid test() {\nList&lt;Diagnostic&gt; diagnostics = getDiagnostics();   // getting a list of diagnostics\n\nassertThat(diagnostics).hasSize(2);                // checking the number of errors found\n\n// verification of special cases\nassertThat(diagnostics)\n.anyMatch(diagnostic -&gt; diagnostic.getRange().equals(Ranges.create(27, 4, 27, 29)))\n.anyMatch(diagnostic -&gt; diagnostic.getRange().equals(Ranges.create(40, 4, 40, 29)));\n}\n</code></pre> <p>To reduce the amount of test code, you can use the <code>util.Assertions.assertThat</code> helper, then the example above will look like this:</p> <pre><code>    @Test\nvoid test() {\nList&lt;Diagnostic&gt; diagnostics = getDiagnostics();   // getting a list of diagnostics\n\nassertThat(diagnostics).hasSize(2);                // checking the number of errors found\n\n// verification of special cases\nassertThat(diagnostics, true)\n.hasRange(27, 4, 27, 29)\n.hasRange(40, 4, 40, 29);\n}\n</code></pre>"},{"location":"contributing/DiagnosticStructure/#Test-of-configuration-method-for-parameterized-diagnostics","title":"Test of configuration method for parameterized diagnostics","text":"<p>Tests for the configuration method should cover all possible settings and their combinations. The test has almost the same structure as the diagnostic test. Before setting new values \u200b\u200bfor diagnostic parameters, you must get the default diagnostic settings using the <code>getDefaultDiagnosticConfiguration()</code> method using the information of the current diagnostic object <code>diagnosticInstance.getInfo()</code>. The result is a map in which the <code>put</code> method needs to change the values \u200b\u200bof the required parameters. To apply the changed settings, you need to call the <code>configure()</code> method of the current diagnostic object <code>diagnosticInstance</code>.</p> <p>Test method example</p> <pre><code>    @Test\nvoid testConfigure() {\n// getting default diagnostic settings\nMap&lt;String, Object&gt; configuration = diagnosticInstance.getInfo().getDefaultDiagnosticConfiguration();\n\nconfiguration.put(\"templateParem\", \"newValue\");     // setting \"templateParem\" to \"newValue\"\ndiagnosticInstance.configure(configuration);        // applying settings\n\nList&lt;Diagnostic&gt; diagnostics = getDiagnostics();    // getting a list of diagnostics\n\nassertThat(diagnostics).hasSize(2);                 // checking the number of detected\n\n// special case check\nassertThat(diagnostics, true)\n.hasRange(27, 4, 27, 29)\n.hasRange(40, 4, 40, 29);\n}\n</code></pre>"},{"location":"contributing/DiagnosticStructure/#Quick-fixes-test-Work-in-progress","title":"Quick fixes test (Work in progress)","text":"<p>"},{"location":"contributing/DiagnosticStructure/#Diagnostics-resources","title":"Diagnostics resources","text":"<p>BSL LS supports two languages \u200b\u200bin diagnostics: Russian and English, so the diagnostics includes two resource files located in the <code>src/main/resources</code> directory in the <code>com.github._1c_syntax.bsl.languageserver.diagnostics</code> package, one for each language. The file structure is the same: it is a text file in UTF-8 encoding, each line of which contains a \"Key=Value\" pair.</p> <p>Required parameters used when adding diagnostics using the <code>diagnosticStorage.addDiagnostic</code> method</p> <ul> <li>diagnosticMessage - diagnostic message. Value supports parameterization (see <code>String.format</code>)</li> <li>diagnosticName - Diagnostic name, human-readable</li> </ul> <p>For <code>quick fixes</code>, the <code>quickFixMessage</code> parameter is used, which contains a description of the fix action.</p>"},{"location":"contributing/DiagnosticStructure/#Diagnostics-test-resources","title":"Diagnostics test resources","text":"<p>The fixtures are the contents of the test resource file located in the <code>src/test/resources</code> directory in the <code>diagnostics</code> package. The file must contain the necessary code examples in 1C language (or oscript language). </p> <p>It is necessary to add both erroneous and correct code, marking the places of errors with comments. It is best if the test cases are <code>real</code>, from practice, and not synthetic, invented <code>for diagnostics</code>.</p>"},{"location":"contributing/DiagnosticStructure/#Diagnostics-description","title":"Diagnostics description","text":"<p>The diagnostic description is created in the Markdown format in two versions - for Russian and English. The files are located in the <code>docs/diagnostics</code> directory for Russian, for English in <code>docs/en/diagnostics</code>.  The file has the structure</p> <ul> <li>Header equal to the value of <code>diagnosticName</code> from the corresponding language's diagnostic resource file</li> <li>A block with a description of the diagnostics, indicating \"why it is so bad\"</li> <li>List of exceptions that diagnostics do not detect</li> <li>Examples of good and bad code</li> <li>The diagnostic algorithm, if it is not obvious</li> <li>If diagnostics is an implementation of the standard, then links to sources (for example, to ITS).</li> </ul>"},{"location":"contributing/DiagnosticTag/","title":"Diagnostic Tags","text":"<p>Each diagnostic has a set of tags. They are groups in which diagnostics are included. For the correct tag selection, their detailed description is given below.</p> <p>ATTENTION: diagnostic can have from 1 to 3 tags</p>"},{"location":"contributing/DiagnosticTag/#Tag-Description","title":"Tag Description","text":"<ul> <li><code>STANDARD</code> - Used in diagnosing violations of 1C COMPANY standards</li> <li><code>LOCKINOS</code> - Feature may not work in other OS</li> <li><code>SQL</code> - Used in diagnosing any problems with 1C queries</li> <li><code>PERFORMANCE</code> - Performance issue detected</li> <li><code>BRAINOVERLOAD</code> - Difficult to understand code</li> <li><code>BADPRACTICE</code> - Found use of bad programming practices</li> <li><code>CLUMSY</code> - Used when detecting unnecessary algorithmic constructs or actions</li> <li><code>DESIGN</code> - Errors in solution design, architectural problems</li> <li><code>SUSPICIOUS</code> - Used to diagnose strange code that needs attention</li> <li><code>UNPREDICTABLE</code> - Must be used when detecting working code that can behave unpredictably</li> <li><code>DEPRECATED</code> - For diagnostics that detect the use of legacy functions, methods, method names, etc.</li> <li><code>ERROR</code> - Used when detecting code errors (using non-existent language constructs, methods, etc.).</li> <li><code>LOCALIZE</code> - For errors and possible problems when localizing the application in other languages</li> </ul>"},{"location":"contributing/DiagnosticTypeAndSeverity/","title":"Diagnostics types and severity","text":"<p>Each diagnostic is of a specific type and has a specific importance.  In order to select the type and importance for the generated diagnostics, a detailed semantic description is given below.</p>"},{"location":"contributing/DiagnosticTypeAndSeverity/#Severity","title":"Severity","text":"<p>The severity of diagnostics is set in the annotation <code>@DiagnosticMetadata</code> by the <code>severity</code> parameter and takes values \u200b\u200bof the <code>DiagnosticSeverity</code> type.</p> <p>Possible use cases (basic cases, unless otherwise stated):</p>"},{"location":"contributing/DiagnosticTypeAndSeverity/#Blocker-BLOCKER","title":"Blocker (BLOCKER)","text":"<p>Errors that render the application inoperable. Used only for <code>Errors</code> and <code>Vulnerabilities</code>.</p>"},{"location":"contributing/DiagnosticTypeAndSeverity/#Critical-CRITICAL","title":"Critical (CRITICAL)","text":"<p>Incorrectly working key business logic, errors in the security system, problems leading to the temporary inoperability of the application or its components. Used only for <code>Errors</code> and <code>Vulnerabilities</code>.</p>"},{"location":"contributing/DiagnosticTypeAndSeverity/#Important-MAJOR","title":"Important (MAJOR)","text":"<p>Some of the core business logic doesn't work correctly, but there are workarounds; poor quality code that leads to poor performance, efficiency, floating bugs. Used only for <code>Errors</code> and <code>Code Defects</code>.</p>"},{"location":"contributing/DiagnosticTypeAndSeverity/#Minor-MINOR","title":"Minor (MINOR)","text":"<p>The business logic of the application is not violated, a floating error, low-quality, poorly supported code, bugs in rarely used functionality. Used only for <code>Errors</code> and <code>Code Defects</code>.</p>"},{"location":"contributing/DiagnosticTypeAndSeverity/#Information-INFO","title":"Information (INFO)","text":"<p>A trivial error not related to the business logic of the application; poorly reproducible problem; unobtrusive, having no effect on the overall quality of the product. Used only for <code>Code Defects</code>.</p>"},{"location":"contributing/DiagnosticTypeAndSeverity/#Diagnostics-type","title":"Diagnostics type","text":"<p>The severity of diagnostics is set in the annotation <code>@DiagnosticMetadata</code> by the <code>type</code> parameter and takes values \u200b\u200bof the <code>DiagnosticType</code> type.</p>"},{"location":"contributing/DiagnosticTypeAndSeverity/#Vulnerability-VULNERABILITY","title":"Vulnerability (VULNERABILITY)","text":"<p>This type of diagnostics includes security errors. They should always be of severity <code>Blocker</code> if there is a known compromise, or <code>Critical</code> if there is none or the value of the leak is not high.  Examples</p> <ul> <li>the compromise of personal data is a blocking vulnerability, since in addition to violation of the law, the information obtained can be used in various illegal actions.</li> <li>compromise of user reporting settings is a critical vulnerability, since can tell an attacker how to collect an important report, but does not give access to fulfill the request.</li> </ul>"},{"location":"contributing/DiagnosticTypeAndSeverity/#Potential-vulnerability-SECURITY_HOTSPOT","title":"Potential vulnerability (SECURITY_HOTSPOT)","text":"<p>Diagnostics of this type highlight security-sensitive code fragments that require additional manual analysis. After the analysis, either the problem that needs to be corrected will be confirmed, or a decision is made that there is no problem. Diagnostics with this type should always have severity <code>Critical</code>.</p> <p>Examples</p> <ul> <li>Accessing the parameters of the user's computer operating system is not always a vulnerability. For example, the version of the OS architecture can be used to load the correct version of the library included with the application.</li> <li>User privilege escalation can occur in a planned manner while the operation is being performed in accordance with the business process, which is not a vulnerability. In other situations, disabling user access control is completely a vulnerability.</li> </ul>"},{"location":"contributing/DiagnosticTypeAndSeverity/#Code-defect-CODE_SMELL","title":"Code defect (CODE_SMELL)","text":"<p><code>Code defect</code> does not lead to errors in the program, but complicates further development, the ability to adapt and extend functionality. Can be of any importance except <code>Blocker</code> and <code>Critical</code>. Needs fixing as important in the refactoring process.</p>"},{"location":"contributing/DiagnosticTypeAndSeverity/#Error-ERROR","title":"Error (ERROR)","text":"<p>This category includes real errors during the user's work. They can be of any importance, except <code>Info</code>, while:</p> <ul> <li><code>Blocker</code> means there is no workaround, urgently needs to be fixed. An example is uncompiled code or calling a method that does not exist.</li> <li><code>Critical</code> means there is a known workaround (for example, disabling functionality with an error), but requiring the fastest possible fix.</li> </ul>"},{"location":"contributing/EnvironmentSetting/","title":"Environment requirements","text":"<p>Development is underway using IntelliJ IDEA Community Edition.</p>"},{"location":"contributing/EnvironmentSetting/#Required-Software","title":"Required Software","text":"<ul> <li>Java Development Kit 11</li> <li>IntelliJ IDEA Community Edition</li> <li>Plugins IntelliJ IDEA<ul> <li>Lombok Plugin</li> <li>EditorConfig Plugin</li> </ul> </li> </ul> <p>Please note that plugins do not have to be installed - if you have Internet access, they will be installed automatically when you import the project.</p>"},{"location":"contributing/EnvironmentSetting/#IntelliJ-IDEA-Settings","title":"IntelliJ IDEA Settings","text":"<ul> <li>Configure Java SDK \u043d\u0430 JDK11</li> <li>Enable annotation processing: <code>File -&gt; Settings -&gt; Build, Execution, Deployment -&gt; Compiler -&gt; Annotation Processors -&gt; Enable annotation processing</code></li> <li>Configure auto import settings, details in the article. Pay special attention to import optimization.<ul> <li>There is no need to start optimization of imports of the entire project, this is followed by maintainers. If, after optimizing imports, changed files appeared that did not change during the development process, you should notify the maintainers and roll back these changes.</li> </ul> </li> </ul>"},{"location":"contributing/EventsApi/","title":"Events subsystem","text":"<p>Events can occur in an application that require the response of loosely coupled objects.</p> <p>For example: BSL Language Server configuration file (<code>.bsl-language-server.json</code>) has a <code>traceLog</code> field. In it, you can specify the path to the file to display a detailed log of the interaction between the server and the client. When a configuration is changed, a \"server configuration changed\" event is generated, and all components can reread it and reconfigure themselves if this event is important to them. In this example, the log output component changes the path to the output file.</p> <p>The subsystem consists of three components:</p> <ul> <li>events;</li> <li>post events;</li> <li>event subscription.</li> </ul> <p>The main difference from Spring Events is the transfer of event publishing from application code to an isolated layer using aspect-oriented programming.</p> <p>A summary of Spring Events in the article https://www.baeldung.com/spring-events.</p>"},{"location":"contributing/EventsApi/#Events","title":"Events","text":"<p>All events are children of <code>ApplicationEvent</code>. The event class must be placed in the <code>events</code> subpackage of the package whose object can generate this event.</p> <p>For example, change event <code>com.github._1c_syntax.bsl.languageserver.configuration.LanguageServerConfiguration</code>  is located in the package <code>com.github._1c_syntax.bsl.languageserver.configuration.events</code> and and has the name <code>LanguageServerConfigurationChangedEvent</code>.</p> <p>In the event class it is recommended:</p> <ul> <li>declare a constructor that takes the \"source\" of the event (the object on which the event fired) and calls the <code>super</code> constructor;</li> <li>override the <code>getSource</code> method, returning <code>source</code> cast to the source type.</li> </ul> <pre><code>/**\n * Configuration change event.\n * &lt;p&gt;\n * Contains a link to the configuration as an event source.\n */\npublic class LanguageServerConfigurationChangedEvent extends ApplicationEvent {\npublic LanguageServerConfigurationChangedEvent(LanguageServerConfiguration configuration) {\nsuper(configuration);\n}\n\n@Override\npublic LanguageServerConfiguration getSource() {\nreturn (LanguageServerConfiguration) super.getSource();\n}\n}\n</code></pre>"},{"location":"contributing/EventsApi/#Events-publication","title":"Events publication","text":"<p>The <code>EventPublisherAspect</code> aspect of the <code>com.github._1c_syntax.bsl.languageserver.aop</code> package is used to publish events</p> <p>Brief information about aspect-oriented programming you can find in page https://www.baeldung.com/aspectj.</p> <p>To intercept events in an aspect, advice can be declared to intercept method calls and/or accesses to object properties.  An event object must be created in the advice body and published via <code>ApplicationEventPublisher</code>.</p> <p>To form a pointcut expression, you need to use templates in the <code>Pointcuts</code> class of the <code>com.github._1c_syntax.bsl.languageserver.aop</code> package</p> <p>An example of intercepting the server configuration update event:</p> <pre><code>@Aspect\npublic class EventPublisherAspect {\n@AfterReturning(\"Pointcuts.isLanguageServerConfiguration() &amp;&amp; (Pointcuts.isResetCall() || Pointcuts.isUpdateCall())\")\npublic void languageServerConfigurationUpdated(JoinPoint joinPoint) {\nvar configuration = (LanguageServerConfiguration) joinPoint.getThis();\napplicationEventPublisher.publishEvent(new LanguageServerConfigurationChangedEvent(configuration));\n}\n}\n</code></pre>"},{"location":"contributing/EventsApi/#Events-subscriptions","title":"Events subscriptions","text":"<p>To subscribe to an event, a component can implement the <code>ApplicationListener</code> interface or declare a public method annotated with <code>@EventListener</code> and taking a specific event class as a parameter.</p> <p>Below is an example of handling the <code>LanguageServerConfigurationChangedEvent</code> event via annotations:</p> <pre><code>@Component\npublic class FileAwarePrintWriter {\n/**\n   * \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441\u043e\u0431\u044b\u0442\u0438\u044f {@link LanguageServerConfigurationChangedEvent}.\n   *\n   * @param event \u0421\u043e\u0431\u044b\u0442\u0438\u0435\n   */\n@EventListener\npublic void handleEvent(LanguageServerConfigurationChangedEvent event) {\nsetFile(event.getSource().getTraceLog());\n}\n}\n</code></pre>"},{"location":"contributing/FastStart/","title":"Quick start","text":"<p>The following describes the steps to get started quickly</p>"},{"location":"contributing/FastStart/#Create-new-diagnostics","title":"Create new diagnostics","text":"<ol> <li>Create project directory <code>bsl-language-server</code></li> <li>Clone the project repository to the created directory <code>https://github.com/1c-syntax/bsl-language-server.git</code></li> <li>Set up the environment according to the instructions</li> <li>Execute commands to ignore changes in service files</li> <li><code>git update-index --assume-unchanged ./.idea/compiler.xml</code></li> <li><code>git update-index --assume-unchanged ./.idea/encodings.xml</code></li> <li><code>git update-index --assume-unchanged ./.idea/misc.xml</code></li> <li>Open the <code>build.gradle.kts</code> file from the project directory, agree to import the dependencies, wait for them to download</li> <li>Run (from context menu or ide console) command <code>gradlew test</code>, if passed then all settings are correct</li> <li>Make yourself familiar with diagnostics development example, structure and files purpose description, and other articles in the section for developers</li> </ol>"},{"location":"contributing/FastStart/#Using-the-AST-Debugger","title":"Using the AST Debugger","text":"<p>To analyze the AST tree when creating diagnostics, you may need to get a visual representation of the tree. To do this, follow these steps</p> <ul> <li>Create <code>bsl-parser</code> project directory</li> <li>Clone the project repository into the created directory <code>https://github.com/1c-syntax/bsl-parser.git</code></li> <li>Set up the environment according to the instruction (if not previously performed)</li> <li>Install <code>ANTLR v4 grammar plugin</code></li> <li> <p>restart IDEA</p> </li> <li> <p>Set up the plugin -  <code>File | Settings | Languages &amp; Frameworks | ANTLR v4 default project settings</code> <code>ANTLR v4 grammar plugin</code></p> </li> <li>Set up <code>Case transformation in the Preview window</code> in <code>Transform to uppercase when lexing</code></li> <li>Open the <code>build.gradle.kts</code> file from the project directory, agree to import the dependencies, wait for them to download</li> <li>After downloading:</li> <li>To analyze bsl files (1C code)<ul> <li>Open <code>src/main/antlr/BSLParser.g4</code></li> <li>Place the cursor on the line with the rule <code>file:</code> (the first rule in the file) and select the context menu item <code>Test Rule file</code></li> <li>In the opened window, select a bsl-file or paste text from the clipboard</li> </ul> </li> <li>To analyze sdbl files (1C queries)<ul> <li>Open <code>src/main/antlr/SDBLParser.g4</code></li> <li>Place the cursor on the line with the rule <code>queryPackage:</code> (the first rule in the file) and select the context menu item <code>Test Rule queryPackage</code></li> <li>In the opened window, select a sdbl-file or paste text from the clipboard</li> </ul> </li> </ul>"},{"location":"contributing/Measures/","title":"Performance measurement","text":"<p>The app has a built-in module for collecting performance metrics.</p> <p>By default, performance measurement is disabled. To enable measurements, you can use one of the following methods:</p> <ul> <li>specify in <code>application.properties</code> the setting <code>app.measures.enabled = true</code>;</li> <li>specify <code>--app.measures.enabled = true</code> parameter as command line argument when starting <code>java -jar</code> or <code>exe</code>;</li> <li>set environment variable <code>APP_MEASURES_ENABLED</code> with value <code>true</code>.</li> </ul> <p>The output of the performance measurement occurs after the <code>analyze</code> command finishes.</p>"},{"location":"contributing/Measures/#Implementation","title":"Implementation","text":"<p>Measurement logic implemented in aspect <code>com.github._1c_syntax.bsl.languageserver.aop.MeasuresAspect</code> and package <code>com.github._1c_syntax.bsl.languageserver.aop.measures</code>.</p> <p>Aspect <code>MeasuresAspect</code> intercepts and measures calls to <code>ServerContext</code>, various computers, and calls to calculate diagnostics.</p> <p><code>com.github._1c_syntax.bsl.languageserver.aop.measures.DocumentContextLazyDataMeasurer</code> handles the <code>DocumentContext</code> rebuild event and pre-calculates the cached data (parse tree, metrics, symbol tree, etc.) with measurement of each component.</p>"},{"location":"contributing/Measures/#Example","title":"Example","text":"<p>Fragment of measurement results:</p> <pre><code>c.g._.b.l.aop.measures.MeasureCollector  : diagnostic: NestedStatements - 4139\nc.g._.b.l.aop.measures.MeasureCollector  : diagnostic: UnreachableCode - 4555\nc.g._.b.l.aop.measures.MeasureCollector  : computer: DiagnosticIgnoranceComputer - 4704\nc.g._.b.l.aop.measures.MeasureCollector  : context: diagnosticIgnorance - 4750\nc.g._.b.l.aop.measures.MeasureCollector  : diagnostic: ParseError - 6383\nc.g._.b.l.aop.measures.MeasureCollector  : diagnostic: DeprecatedMethodCall - 6828\nc.g._.b.l.aop.measures.MeasureCollector  : diagnostic: LatinAndCyrillicSymbolInWord - 8164\nc.g._.b.l.aop.measures.MeasureCollector  : computer: QueryComputer - 8680\nc.g._.b.l.aop.measures.MeasureCollector  : computer: MethodSymbolComputer - 8829\nc.g._.b.l.aop.measures.MeasureCollector  : context: queries - 8933\nc.g._.b.l.aop.measures.MeasureCollector  : context: metrics - 9864\nc.g._.b.l.aop.measures.MeasureCollector  : diagnostic: UsingHardcodeNetworkAddress - 11995\n</code></pre>"},{"location":"contributing/StyleGuide/","title":"Code Style Guide","text":"<p>This document contains general guidelines for writing code in the BSL Language Server project.</p> <p>Try to stick to them and the code review process will be simple.</p>"},{"location":"contributing/StyleGuide/#Null-values","title":"Null values","text":"<p>If a method can legally return <code>null</code>, it is recommended that you return <code>Optional&lt;T&gt;</code> instead of explicitly returning <code>null</code>. Exceptions (eg. high frequency or performance functions) are negotiated separately.</p> <p>The description of the <code>package-info.java</code> package must indicate that the NonNull API is used by default in the package. To do this, the annotation <code>@DefaultAnnotation(NonNull.class)</code> is added above the package name</p> <p>Example: <pre><code>// ...license...\n@DefaultAnnotation(NonNull.class)\npackage com.github._1c_syntax.bsl.languageserver;\n\nimport edu.umd.cs.findbugs.annotations.DefaultAnnotation;\nimport edu.umd.cs.findbugs.annotations.NonNull;\n</code></pre></p> <p>To explicitly indicate that a method can accept or return <code>null</code>, use the annotation <code>@edu.umd.cs.findbugs.annotations.Nullable</code>.</p> <p>This avoids using the <code>@edu.umd.cs.findbugs.annotations.NonNull</code> annotation.</p> <p>The <code>null</code> control annotations from the <code>javax.annotations</code> or <code>jetbrains.annotations</code> packages are not allowed.</p>"},{"location":"contributing/StyleGuide/#Formatting","title":"Formatting","text":"<ol> <li>All code in the modules should be automatically formatted.</li> <li>Indents - spaces</li> <li>The indent size is 2 characters. Continuous indent are also two characters. IntelliJ IDEA sets indentation according to 2-2-2</li> </ol>"},{"location":"contributing/StyleGuide/#Class-Members-Location","title":"Class Members Location","text":"<ol> <li>The location of fields, methods, modifiers in general must comply with Oracle recommendations - File organization, and SonarSource - Modifiers should be declared in the correct order</li> <li>Methods are recommended to be placed in the following order:<ol> <li>public object methods</li> <li>protected/package private object methods</li> <li>private object methods</li> <li>public class methods</li> <li>protected/package private class methods</li> <li>private class methods</li> </ol> </li> </ol>"},{"location":"contributing/StyleGuide/#Static-analysis","title":"Static analysis","text":"<p>BSL Language Server code is automatically checked against coding standards on the SonarCloud service - project link.</p> <p>The list of activated rules and their settings can be viewed in the quality profile 1c-syntax way.</p> <p>Due to security restrictions, pull requests not from the repository <code>1c-syntax/bsl-language-server</code> are not checked for compliance. After accepting the pull request, it is recommended to go to the project page on SonarCloud and view the list of comments filtered by author. Pull-request with fixes is welcome.</p>"},{"location":"contributing/StyleGuide/#Linter","title":"Linter","text":"<p>To improve the quality of the code and preliminary check for compliance with standards, it is recommended to install plugin SonarLint in your IDE.</p> <p>To automatically download and parameterize rules in accordance with the settings on SonarCloud, it may be necessary to \"bind\" the local project to the SonarCloud project. If your IDE cannot find a matching project on SonarCloud, contact the project maintainers to add you to the \"Members\" list on SonarCloud.</p>"},{"location":"contributing/StyleGuide/#Logging","title":"Logging","text":"<p>Library <code>Slf4j</code> is used for logging. The use of output in <code>System.out</code> and <code>System.err</code> is allowed only in exceptional cases (for example, in cli command handlers).</p> <p>To simplify the creation of a logger instance, it is recommended to use the <code>@lombok.extern.slf4j.Slf4j</code> class annotation.</p>"},{"location":"contributing/StyleGuide/#Documentation","title":"Documentation","text":"<ol> <li>Every new class must have javadoc. Exception - classes that implement interfaces <code>BSLDiagnostic</code> or <code>QuickFixSupplier</code>.</li> <li>Every new package must have <code>package-info.java</code> with the javadoc of the package.</li> <li>Every new public method in the <code>utils</code> package, helper classes, or classes that already have a javadoc must have a method javadoc.</li> </ol>"},{"location":"contributing/StyleGuide/#External-dependencies","title":"External dependencies","text":"<ol> <li>Connecting new libraries to the implementation scope should be done carefully, with control over the increase in the size of the resulting jar file. If possible, \"unnecessary\" and unused sub-dependencies should be excluded through <code>exclude</code>.</li> <li>Explicit linking of the <code>com.google.guava</code>, <code>Google Collections</code> library or other parts of the Guava family of libraries is prohibited. If absolutely necessary, it is permissible to copy the implementation from <code>Guava</code> inside the BSL Language Server, subject to the terms of the Guava license. For everything else, there is Apache Commons.</li> <li>Import of <code>*.google.*</code> classes, as well as other parts of Guava libraries, is prohibited. With no exceptions.</li> <li>The <code>jsr305</code> package and its annotations should not be used in code. See section \"Null values\".</li> </ol> <p>In the process...</p>"},{"location":"diagnostics/","title":"Diagnostics","text":"<p>Used for code analysis to meet coding standards and search for possible errors.</p> <p>Some of diagnostics are disabled by default. Use configuration file to enable them.</p> <p>To escape individual sections of code or files from triggering diagnostics, you can use special comments of the form <code>// BSLLS:DiagnosticKey-off</code> . This functionality is described in more detail in Escaping sections of code .</p>"},{"location":"diagnostics/#Implemented-diagnostics","title":"Implemented diagnostics","text":"<p>Total: 165</p> <ul> <li>Security Hotspot: 6</li> <li>Vulnerability: 4</li> <li>Error: 55</li> <li>Code smell: 100</li> </ul> Key Name Enabled by default Severity Type Tags AllFunctionPathMustHaveReturn All execution paths of a function must have a Return statement Yes Major Code smell <code>unpredictable</code><code>badpractice</code><code>suspicious</code> AssignAliasFieldsInQuery Assigning aliases to selected fields in a query Yes Major Code smell <code>standard</code><code>sql</code><code>badpractice</code> BadWords Prohibited words No Major Code smell <code>design</code> BeginTransactionBeforeTryCatch Violating transaction rules for the 'BeginTransaction' method Yes Major Error <code>standard</code> CachedPublic Cached public methods Yes Major Code smell <code>standard</code><code>design</code> CanonicalSpellingKeywords Canonical keyword writing Yes Info Code smell <code>standard</code> CodeAfterAsyncCall Lines of code after the asynchronous method call No Major Code smell <code>suspicious</code> CodeBlockBeforeSub Method definitions must be placed before the module body operators Yes Blocker Error <code>error</code> CodeOutOfRegion Code out of region Yes Info Code smell <code>standard</code> CognitiveComplexity Cognitive complexity Yes Critical Code smell <code>brainoverload</code> CommandModuleExportMethods Export methods in command and general command modules Yes Info Code smell <code>standard</code><code>clumsy</code> CommentedCode Commented out code Yes Minor Code smell <code>standard</code><code>badpractice</code> CommitTransactionOutsideTryCatch Violating transaction rules for the 'CommitTransaction' method Yes Major Error <code>standard</code> CommonModuleAssign CommonModuleAssign Yes Blocker Error <code>error</code> CommonModuleInvalidType Common module invalid type Yes Major Error <code>standard</code><code>unpredictable</code><code>design</code> CommonModuleMissingAPI Common module should have a programming interface Yes Minor Code smell <code>brainoverload</code><code>suspicious</code> CommonModuleNameCached Missed postfix \"Cached\" Yes Major Code smell <code>standard</code><code>badpractice</code><code>unpredictable</code> CommonModuleNameClient Missed postfix \"Client\" Yes Minor Code smell <code>standard</code><code>badpractice</code><code>unpredictable</code> CommonModuleNameClientServer Missed postfix \"ClientServer\" Yes Major Code smell <code>standard</code><code>badpractice</code><code>unpredictable</code> CommonModuleNameFullAccess Missed postfix \"FullAccess\" Yes Major Security Hotspot <code>standard</code><code>badpractice</code><code>unpredictable</code> CommonModuleNameGlobal Missed postfix \"Global\" Yes Major Code smell <code>standard</code><code>badpractice</code><code>brainoverload</code> CommonModuleNameGlobalClient Global module with postfix \"Client\" Yes Major Code smell <code>standard</code> CommonModuleNameServerCall Missed postfix \"ServerCall\" Yes Minor Code smell <code>standard</code><code>badpractice</code><code>unpredictable</code> CommonModuleNameWords Unrecommended common module name Yes Info Code smell <code>standard</code> CompilationDirectiveLost Methods compilation directive Yes Major Code smell <code>standard</code><code>unpredictable</code> CompilationDirectiveNeedLess Needless compilation directive Yes Major Code smell <code>clumsy</code><code>standard</code><code>unpredictable</code> ConsecutiveEmptyLines Consecutive empty lines Yes Info Code smell <code>badpractice</code> CrazyMultilineString Crazy multiline literals Yes Major Code smell <code>badpractice</code><code>suspicious</code><code>unpredictable</code> CreateQueryInCycle Execution query on cycle Yes Critical Error <code>performance</code> CyclomaticComplexity Cyclomatic complexity Yes Critical Code smell <code>brainoverload</code> DataExchangeLoading There is no check for the attribute DataExchange.Load in the object's event handler Yes Critical Error <code>standard</code><code>badpractice</code><code>unpredictable</code> DeletingCollectionItem Deleting an item when iterating through collection using the operator \"For each ... In ... Do\" Yes Major Error <code>standard</code><code>error</code> DeprecatedAttributes8312 Deprecated 8.3.12 platform features. Yes Info Code smell <code>deprecated</code> DeprecatedCurrentDate Using of the deprecated method \"CurrentDate\" Yes Major Error <code>standard</code><code>deprecated</code><code>unpredictable</code> DeprecatedFind Using of the deprecated method \"Find\" Yes Minor Code smell <code>deprecated</code> DeprecatedMessage Restriction on the use of deprecated \"Message\" method Yes Minor Code smell <code>standard</code><code>deprecated</code> DeprecatedMethodCall Deprecated methods should not be used Yes Minor Code smell <code>deprecated</code><code>design</code> DeprecatedMethods8310 Deprecated client application method. Yes Info Code smell <code>deprecated</code> DeprecatedMethods8317 Using of deprecated platform 8.3.17 global methods Yes Info Code smell <code>deprecated</code> DeprecatedTypeManagedForm Deprecated ManagedForm type Yes Info Code smell <code>standard</code><code>deprecated</code> DuplicateRegion Duplicate regions Yes Info Code smell <code>standard</code> DuplicateStringLiteral Duplicate string literal Yes Minor Code smell <code>badpractice</code> DuplicatedInsertionIntoCollection Duplicate adding or pasting a value to a collection Yes Major Code smell <code>brainoverload</code><code>suspicious</code><code>badpractice</code> EmptyCodeBlock Empty code block Yes Major Code smell <code>badpractice</code><code>suspicious</code> EmptyRegion The region should not be empty Yes Info Code smell <code>standard</code> EmptyStatement Empty statement Yes Info Code smell <code>badpractice</code> ExcessiveAutoTestCheck Excessive AutoTest Check Yes Minor Code smell <code>standard</code><code>deprecated</code> ExecuteExternalCode Executing of external code on the server Yes Critical Vulnerability <code>error</code><code>standard</code> ExecuteExternalCodeInCommonModule Executing of external code in a common module on the server Yes Critical Security Hotspot <code>badpractice</code><code>standard</code> ExportVariables Ban export global module variables Yes Major Code smell <code>standard</code><code>design</code><code>unpredictable</code> ExtraCommas Commas without a parameter at the end of a method call Yes Major Code smell <code>standard</code><code>badpractice</code> FieldsFromJoinsWithoutIsNull No NULL checks for fields from joined tables No Critical Error <code>sql</code><code>suspicious</code><code>unpredictable</code> ForbiddenMetadataName Metadata object has a forbidden name Yes Blocker Error <code>standard</code><code>sql</code><code>design</code> FormDataToValue FormDataToValue method call Yes Info Code smell <code>badpractice</code> FullOuterJoinQuery Using of \"FULL OUTER JOIN\" in queries Yes Major Code smell <code>sql</code><code>standard</code><code>performance</code> FunctionNameStartsWithGet Function name shouldn't start with \"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\" No Info Code smell <code>standard</code> FunctionOutParameter Out function parameter No Major Code smell <code>design</code> FunctionReturnsSamePrimitive The function always returns the same primitive value Yes Major Error <code>design</code><code>badpractice</code> FunctionShouldHaveReturn The function should have return Yes Major Error <code>suspicious</code><code>unpredictable</code> GetFormMethod GetForm method call Yes Major Error <code>error</code> GlobalContextMethodCollision8312 Global context method names collision Yes Blocker Error <code>error</code><code>unpredictable</code> IdenticalExpressions There are identical sub-expressions to the left and to the right of the \"foo\" operator Yes Major Error <code>suspicious</code> IfConditionComplexity Usage of complex expressions in the \"If\" condition Yes Minor Code smell <code>brainoverload</code> IfElseDuplicatedCodeBlock Duplicated code blocks in If...Then...ElseIf... statements Yes Minor Code smell <code>suspicious</code> IfElseDuplicatedCondition Duplicated conditions in If...Then...ElseIf... statements Yes Major Code smell <code>suspicious</code> IfElseIfEndsWithElse Else...The...ElseIf... statement should end with Else branch Yes Major Code smell <code>badpractice</code> IncorrectLineBreak Incorrect expression line break Yes Info Code smell <code>standard</code><code>badpractice</code> IncorrectUseLikeInQuery Incorrect use of 'LIKE' Yes Major Error <code>standard</code><code>sql</code><code>unpredictable</code> IncorrectUseOfStrTemplate Incorrect use of \"StrTemplate\" Yes Blocker Error <code>brainoverload</code><code>suspicious</code><code>unpredictable</code> InvalidCharacterInFile Invalid character Yes Major Error <code>error</code><code>standard</code><code>unpredictable</code> IsInRoleMethod IsInRole global method call Yes Major Code smell <code>error</code> JoinWithSubQuery Join with sub queries Yes Major Code smell <code>sql</code><code>standard</code><code>performance</code> JoinWithVirtualTable Join with virtual table Yes Major Code smell <code>sql</code><code>standard</code><code>performance</code> LatinAndCyrillicSymbolInWord Mixing Latin and Cyrillic characters in one identifier Yes Minor Code smell <code>brainoverload</code><code>suspicious</code> LineLength Line Length limit Yes Minor Code smell <code>standard</code><code>badpractice</code> LogicalOrInTheWhereSectionOfQuery Using a logical \"OR\" in the \"WHERE\" section of a query Yes Major Code smell <code>sql</code><code>performance</code><code>standard</code> MagicDate Magic dates Yes Minor Code smell <code>badpractice</code><code>brainoverload</code> MagicNumber Magic numbers Yes Minor Code smell <code>badpractice</code> MetadataObjectNameLength Metadata object names must not exceed the allowed length Yes Major Error <code>standard</code> MethodSize Method size Yes Major Code smell <code>badpractice</code> MissedRequiredParameter Missed a required method parameter Yes Major Error <code>error</code> MissingCodeTryCatchEx Missing code in Raise block in \"Try ... Raise ... EndTry\" Yes Major Error <code>standard</code><code>badpractice</code> MissingCommonModuleMethod Referencing a missing common module method Yes Blocker Error <code>error</code> MissingEventSubscriptionHandler Event subscription handler missing Yes Blocker Error <code>error</code> MissingParameterDescription Method parameters description are missing Yes Major Code smell <code>standard</code><code>badpractice</code> MissingReturnedValueDescription Function returned values description is missing Yes Major Code smell <code>standard</code><code>badpractice</code> MissingSpace Missing spaces to the left or right of operators + - * / = % &lt; &gt; &lt;&gt; &lt;= &gt;=, keywords, and also to the right of , and ; Yes Info Code smell <code>badpractice</code> MissingTempStorageDeletion Missing temporary storage data deletion after using No Critical Code smell <code>standard</code><code>performance</code><code>badpractice</code> MissingTemporaryFileDeletion Missing temporary file deletion after using Yes Major Error <code>badpractice</code><code>standard</code> MissingVariablesDescription All variables declarations must have a description Yes Minor Code smell <code>standard</code> MultilineStringInQuery Multi-line literal in query Yes Critical Error <code>badpractice</code><code>suspicious</code><code>unpredictable</code> MultilingualStringHasAllDeclaredLanguages There is a localized text for all languages declared in the configuration Yes Minor Error <code>error</code><code>localize</code> MultilingualStringUsingWithTemplate Partially localized text is used in the StrTemplate function Yes Major Error <code>error</code><code>localize</code> NestedConstructorsInStructureDeclaration Nested constructors with parameters in structure declaration Yes Minor Code smell <code>badpractice</code><code>brainoverload</code> NestedFunctionInParameters Initialization of method and constructor parameters by calling nested methods Yes Minor Code smell <code>standard</code><code>brainoverload</code><code>badpractice</code> NestedStatements Control flow statements should not be nested too deep Yes Critical Code smell <code>badpractice</code><code>brainoverload</code> NestedTernaryOperator Nested ternary operator Yes Major Code smell <code>brainoverload</code> NonExportMethodsInApiRegion Non export methods in API regions Yes Major Code smell <code>standard</code> NonStandardRegion Non-standard region of module Yes Info Code smell <code>standard</code> NumberOfOptionalParams Limit number of optional parameters in method Yes Minor Code smell <code>standard</code><code>brainoverload</code> NumberOfParams Number of parameters in method Yes Minor Code smell <code>standard</code><code>brainoverload</code> NumberOfValuesInStructureConstructor Limit on the number of property values passed to the structure constructor Yes Minor Code smell <code>standard</code><code>brainoverload</code> OSUsersMethod Using method OSUsers Yes Critical Security Hotspot <code>suspicious</code> OneStatementPerLine One statement per line Yes Minor Code smell <code>standard</code><code>design</code> OrderOfParams Order of Parameters in method Yes Major Code smell <code>standard</code><code>design</code> OrdinaryAppSupport Ordinary application support Yes Major Code smell <code>standard</code><code>unpredictable</code> PairingBrokenTransaction Violation of pairing using methods \"BeginTransaction()\" &amp; \"CommitTransaction()\" / \"RollbackTransaction()\" Yes Major Error <code>standard</code> ParseError Source code parse error Yes Critical Error <code>error</code> ProcedureReturnsValue Procedure should not return Value Yes Blocker Error <code>error</code> PublicMethodsDescription All public methods must have a description Yes Info Code smell <code>standard</code><code>brainoverload</code><code>badpractice</code> QueryParseError Query text parsing error Yes Major Code smell <code>standard</code><code>sql</code><code>badpractice</code> QueryToMissingMetadata Using non-existent metadata in the query Yes Blocker Error <code>suspicious</code><code>sql</code> RedundantAccessToObject Redundant access to an object Yes Info Code smell <code>standard</code><code>clumsy</code> RefOveruse Overuse \"Reference\" in a query Yes Major Code smell <code>sql</code><code>performance</code> RewriteMethodParameter Rewrite method parameter Yes Major Code smell <code>suspicious</code> SameMetadataObjectAndChildNames Same metadata object and child name Yes Critical Error <code>standard</code><code>sql</code><code>design</code> ScheduledJobHandler Scheduled job handler Yes Critical Error <code>error</code> SelectTopWithoutOrderBy Using 'SELECT TOP' without 'ORDER BY' Yes Major Code smell <code>standard</code><code>sql</code><code>suspicious</code> SelfAssign Variable is assigned to itself Yes Major Error <code>suspicious</code> SelfInsertion Insert a collection into itself Yes Major Error <code>standard</code><code>unpredictable</code><code>performance</code> SemicolonPresence Statement should end with semicolon symbol \";\" Yes Minor Code smell <code>standard</code><code>badpractice</code> ServerSideExportFormMethod Server-side export form method Yes Blocker Error <code>error</code><code>unpredictable</code><code>suspicious</code> SetPermissionsForNewObjects The check box \u00abSet permissions for new objects\u00bb should only be selected for the FullAccess role Yes Critical Vulnerability <code>standard</code><code>badpractice</code><code>design</code> SetPrivilegedMode Using privileged mode Yes Major Security Hotspot <code>suspicious</code> SeveralCompilerDirectives Erroneous indication of several compilation directives Yes Critical Error <code>unpredictable</code><code>error</code> SpaceAtStartComment Space at the beginning of the comment Yes Info Code smell <code>standard</code> StyleElementConstructors Style element constructor Yes Minor Error <code>standard</code><code>badpractice</code> TempFilesDir TempFilesDir() method call Yes Major Code smell <code>standard</code><code>badpractice</code> TernaryOperatorUsage Ternary operator usage No Minor Code smell <code>brainoverload</code> ThisObjectAssign ThisObject assign Yes Blocker Error <code>error</code> TimeoutsInExternalResources Timeouts working with external resources Yes Critical Error <code>unpredictable</code><code>standard</code> TooManyReturns Methods should not have too many return statements No Minor Code smell <code>brainoverload</code> TryNumber Cast to number of try catch block Yes Major Code smell <code>standard</code> Typo Typo Yes Info Code smell <code>badpractice</code> UnaryPlusInConcatenation Unary Plus sign in string concatenation Yes Blocker Error <code>suspicious</code><code>brainoverload</code> UnionAll Using keyword \"UNION\" in queries Yes Minor Code smell <code>standard</code><code>sql</code><code>performance</code> UnknownPreprocessorSymbol Unknown preprocessor symbol Yes Critical Error <code>standard</code><code>error</code> UnreachableCode Unreachable Code Yes Minor Error <code>design</code><code>suspicious</code> UnsafeSafeModeMethodCall Unsafe SafeMode method call Yes Blocker Error <code>deprecated</code><code>error</code> UnusedLocalMethod Unused local method Yes Major Code smell <code>standard</code><code>suspicious</code><code>unused</code> UnusedLocalVariable Unused local variable Yes Major Code smell <code>brainoverload</code><code>badpractice</code><code>unused</code> UnusedParameters Unused parameter Yes Major Code smell <code>design</code><code>unused</code> UsageWriteLogEvent Incorrect use of the method \"WriteLogEvent\" Yes Info Code smell <code>standard</code><code>badpractice</code> UseLessForEach Useless collection iteration Yes Critical Error <code>clumsy</code> UseSystemInformation Use of system information No Critical Security Hotspot <code>suspicious</code> UsingCancelParameter Using parameter \"Cancel\" Yes Major Code smell <code>standard</code><code>badpractice</code> UsingExternalCodeTools Using external code tools Yes Critical Security Hotspot <code>standard</code><code>design</code> UsingFindElementByString Using FindByName and FindByCode Yes Major Code smell <code>standard</code><code>badpractice</code><code>performance</code> UsingGoto \"goto\" statement should not be used Yes Critical Code smell <code>standard</code><code>badpractice</code> UsingHardcodeNetworkAddress Using hardcode ip addresses in code Yes Critical Vulnerability <code>standard</code> UsingHardcodePath Using hardcode file paths in code Yes Critical Error <code>standard</code> UsingHardcodeSecretInformation Storing confidential information in code Yes Critical Vulnerability <code>standard</code> UsingLikeInQuery Using 'LIKE' in query No Major Error <code>sql</code><code>unpredictable</code> UsingModalWindows Using modal windows Yes Major Code smell <code>standard</code> UsingObjectNotAvailableUnix Using unavailable in Unix objects Yes Critical Error <code>standard</code><code>lockinos</code> UsingServiceTag Using service tags Yes Info Code smell <code>badpractice</code> UsingSynchronousCalls Using synchronous calls Yes Major Code smell <code>standard</code> UsingThisForm Using deprecated property \"ThisForm\" Yes Minor Code smell <code>standard</code><code>deprecated</code> VirtualTableCallWithoutParameters Virtual table call without parameters Yes Major Error <code>sql</code><code>standard</code><code>performance</code> WrongDataPathForFormElements Form fields do not have a data path Yes Critical Error <code>unpredictable</code> WrongHttpServiceHandler Missing handler for http service Yes Critical Error <code>suspicious</code><code>error</code> WrongUseFunctionProceedWithCall Wrong use of ProceedWithCall function Yes Blocker Error <code>error</code><code>suspicious</code> WrongUseOfRollbackTransactionMethod Not recommended using of RollbackTransaction method Yes Critical Error <code>standard</code> WrongWebServiceHandler Wrong handler for web service Yes Critical Error <code>suspicious</code><code>error</code> YoLetterUsage Using Russian character \"yo\" (\"\u0451\") in code Yes Info Code smell <code>standard</code>"},{"location":"diagnostics/AllFunctionPathMustHaveReturn/","title":"All execution paths of a function must have a Return statement (AllFunctionPathMustHaveReturn)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>1</code> <code>unpredictable</code><code>badpractice</code><code>suspicious</code>"},{"location":"diagnostics/AllFunctionPathMustHaveReturn/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>loopsExecutedAtLeastOnce</code> <code>Boolean</code> <code>Assume loops are executed at least once</code> <code>true</code> <code>ignoreMissingElseOnExit</code> <code>Boolean</code> <code>Ignore ElIf clauses which has no Else branch. Disable to detect exits from ElIf condition which results to False</code> <code>false</code>"},{"location":"diagnostics/AllFunctionPathMustHaveReturn/#Description","title":"Description","text":"<p>Functions should not have an implicit return. If control reaches the EndFunction line function returns an Undefined value.</p> <p>As a rule, this is not a normal operation; the programmer must explicitly describe all return values of the function. However, it is quite easy to overlook a situation in which control reaches the EndFunction line and returns an unexpected Undefined value.</p> <p>This diagnostics checks that all possible paths of the function execution have an explicit Return statement and the function does not return unexpected values.</p>"},{"location":"diagnostics/AllFunctionPathMustHaveReturn/#Examples","title":"Examples","text":""},{"location":"diagnostics/AllFunctionPathMustHaveReturn/#Incorrect","title":"Incorrect","text":"<pre><code>// if the rate is full, but not Tax10 not Tax10 - returns Undefined\n// this could be error or planned behavior.\nFunction DefineTaxRate(Val Rate)\n    If Rate = Enums.TaxRates.Tax20 Then\n        Return 20;\n    ElsIf Rate = Enums.TaxRates.Tax10 Then\n        Return 10;\n    ElsIf Not ValueIsFilled(Rate) Then\n        Return Constants.DefaultTaxRate.Get();\n    EndIf;\n\n    // implicit return Undefined\nEndFunction\n</code></pre>"},{"location":"diagnostics/AllFunctionPathMustHaveReturn/#Correct","title":"Correct","text":"<pre><code>// explicitly specify the intention to return the result in the end of the function.\nFunction DefineTaxRate(Val Rate)\n    If Rate = Enums.TaxRates.Tax20 Then\n        Return 20;\n    ElsIf Rate = Enums.TaxRates.Tax10 Then\n        Return 10;\n    ElsIf Not ValueIsFilled(Rate) Then\n        Return Constants.DefaultTaxRate.Get();\n    EndIf;\n\n    // explicit return\n    Return Undefined;\nEndFunction\n</code></pre>"},{"location":"diagnostics/AllFunctionPathMustHaveReturn/#Another-example-of-incorrect-code","title":"Another example of incorrect code:","text":"<pre><code>Function DiscountAmount(Val OrderBasket)\n    If OrderBasket.Rows.Count() &gt; 10 Then\n        Return Discounts.DiscountOnBigBasket(OrderBasket);\n    ElsIf OrderBasket.IsCustomerCard Then\n        // function returns an unintended value is Undefined\n        Discounts.DiscountByCustomerCard(OrderBasket);\n    Else \n        Return 0;\n    EndIf;\nEndFunction\n</code></pre>"},{"location":"diagnostics/AllFunctionPathMustHaveReturn/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/AllFunctionPathMustHaveReturn/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:AllFunctionPathMustHaveReturn-off\n// BSLLS:AllFunctionPathMustHaveReturn-on\n</code></pre>"},{"location":"diagnostics/AllFunctionPathMustHaveReturn/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"AllFunctionPathMustHaveReturn\": {\n\"loopsExecutedAtLeastOnce\": true,\n\"ignoreMissingElseOnExit\": false\n}\n</code></pre>"},{"location":"diagnostics/AssignAliasFieldsInQuery/","title":"Assigning aliases to selected fields in a query (AssignAliasFieldsInQuery)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>1</code> <code>standard</code><code>sql</code><code>badpractice</code>"},{"location":"diagnostics/AssignAliasFieldsInQuery/#Description","title":"Description","text":"<p>It is recommended to specify optional query constructs, first, to explicitly assign aliases to fields in order to increase the clarity of the query text and the \"steadiness\" of the code that uses it. For example, if the algorithm uses a query with a field declared as</p> <p><pre><code>CashBox.Currency\n</code></pre> when changing the name of the attribute, you will also need to change the code that calls the selection from the query result by the name of the Currency property. If the field is declared as</p> <p><pre><code>CashBox.Currency As Currency\n</code></pre> then changing the attribute name will only change the request text.</p> <p>You should be especially careful about automatically assigned aliases for fields - attributes of other fields, such as \"... CashBox.Currency.Name...\". In the above example, the field will be automatically getting aliased CurrencyName, but not Name.</p> <p>Be sure to include the AS keyword before the alias of the source field.</p> <p>The aliases of tables and fields from secondary queries from \"UNION\" are not checked by the diagnostics.</p>"},{"location":"diagnostics/AssignAliasFieldsInQuery/#Examples","title":"Examples","text":"<pre><code>    Query = New Query;\nQuery.Text =\n\"SELECT\n|   Currencies.Ref, // Incorrectly\n|   Currencies.Ref AS AliasFieldsRef, // Correctly\n|   Currencies.Code Code // Incorrectly\n|FROM\n|   Catalog.Currencies AS Currencies // Ignored\n|\n|UNION ALL\n|\n|SELECT\n|   Currencies.Ref, // Ignored\n|   Currencies.Ref, // Ignored\n|   Currencies.Code // Ignored\n|FROM\n|   Catalog.Currencies AS Currencies // Ignored\n|;\n|\n|////////////////////////////////////////////////////////////////////////////////\n|SELECT\n|   Currencies.Ref, // Incorrectly\n|   Currencies.Ref AS AliasFieldsRef, // Correctly\n|   Currencies.Code Code // Incorrectly\n|FROM\n|   Catalog.Currencies AS Currencies // Ignored\n|\n|UNION ALL\n|\n|SELECT\n|   Currencies.Ref, // Ignored\n|   Currencies.Ref, // Ignored\n|   Currencies.Code // Ignored\n|FROM\n|   Catalog.Currencies AS Currencies\"; // Ignored\n\nQuery1 = New Query;\nQuery1.Text =\n\"SELECT\n|   NestedRequest.Ref AS Ref // Correctly\n|FROM\n|   (SELECT\n|       Currencies.Ref // Incorrectly\n|   FROM\n|       Catalog.Currencies AS Currencies) AS NestedRequest\"; // Ignored \n</code></pre>"},{"location":"diagnostics/AssignAliasFieldsInQuery/#Sources","title":"Sources","text":"<p>Source: Making query text</p>"},{"location":"diagnostics/AssignAliasFieldsInQuery/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/AssignAliasFieldsInQuery/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:AssignAliasFieldsInQuery-off\n// BSLLS:AssignAliasFieldsInQuery-on\n</code></pre>"},{"location":"diagnostics/AssignAliasFieldsInQuery/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"AssignAliasFieldsInQuery\": false\n</code></pre>"},{"location":"diagnostics/BadWords/","title":"Prohibited words (BadWords)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>No</code> <code>1</code> <code>design</code>"},{"location":"diagnostics/BadWords/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>badWords</code> <code>String</code> <code>Regular expression for prohibited words.</code> ``"},{"location":"diagnostics/BadWords/#Description","title":"Description","text":"<p>Software modules should not contain prohibited words. The list of forbidden words is set by a regular expression. The search is case-insensitive.</p> <p>For example:</p> <p>\"singularity|avada kedavra|Donald\"</p> <p>\"transcenden(tal|ce)\"</p>"},{"location":"diagnostics/BadWords/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/BadWords/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:BadWords-off\n// BSLLS:BadWords-on\n</code></pre>"},{"location":"diagnostics/BadWords/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"BadWords\": {\n\"badWords\": \"\"\n}\n</code></pre>"},{"location":"diagnostics/BeginTransactionBeforeTryCatch/","title":"Violating transaction rules for the 'BeginTransaction' method (BeginTransactionBeforeTryCatch)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>10</code> <code>standard</code>"},{"location":"diagnostics/BeginTransactionBeforeTryCatch/#Description","title":"Description","text":"<p>The BeginTransaction method must be outside the TryCatch block immediately before the Try operator;</p>"},{"location":"diagnostics/BeginTransactionBeforeTryCatch/#Sources","title":"Sources","text":"<ul> <li>Transactions: Rules of Use (RU)</li> </ul>"},{"location":"diagnostics/BeginTransactionBeforeTryCatch/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/BeginTransactionBeforeTryCatch/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:BeginTransactionBeforeTryCatch-off\n// BSLLS:BeginTransactionBeforeTryCatch-on\n</code></pre>"},{"location":"diagnostics/BeginTransactionBeforeTryCatch/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"BeginTransactionBeforeTryCatch\": false\n</code></pre>"},{"location":"diagnostics/CachedPublic/","title":"Cached public methods (CachedPublic)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>5</code> <code>standard</code><code>design</code>"},{"location":"diagnostics/CachedPublic/#Description","title":"Description","text":"<p>You should not create a programming interface in modules that reuse return values.</p> <p>3.6. Another example of hiding library implementation details from a consumer. Suppose: in the first version of the library, consumers were provided with an export function of a common module with repeated use of return values; But in the next version of the library, this design decision was revised in favor of the \u201cusual\u201d general module, where this function was transferred (similarly, if in the opposite direction). In this example, in order to save the library user from additional efforts to replace calls of the \"old\" function with a new one, it is recommended to immediately place the export function in the \"regular\" module, in its section \"program interface\". Then this function, depending on the current design decision, can call the utility function from the module with repeated use of the returned values or from any other module, or directly contain the implementation. However, for the consumer, its location will no longer change in future versions of the library.</p>"},{"location":"diagnostics/CachedPublic/#Examples","title":"Examples","text":""},{"location":"diagnostics/CachedPublic/#Sources","title":"Sources","text":"<ul> <li>Source: Standard: Ensuring Library Compatibility (RU)</li> </ul>"},{"location":"diagnostics/CachedPublic/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/CachedPublic/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:CachedPublic-off\n// BSLLS:CachedPublic-on\n</code></pre>"},{"location":"diagnostics/CachedPublic/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"CachedPublic\": false\n</code></pre>"},{"location":"diagnostics/CanonicalSpellingKeywords/","title":"Canonical keyword writing (CanonicalSpellingKeywords)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Info</code> <code>Yes</code> <code>1</code> <code>standard</code>"},{"location":"diagnostics/CanonicalSpellingKeywords/#Description","title":"Description","text":"<p>A built-in language constructs, keywords must be written canonically.</p>"},{"location":"diagnostics/CanonicalSpellingKeywords/#Keywords","title":"Keywords","text":"RU EN \u0412\u044b\u0437\u0432\u0430\u0442\u044c\u0418\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 Raise \u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c Execute \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a AddHandler \u0414\u043b\u044f For \u0415\u0441\u043b\u0438 If \u0417\u043d\u0430\u0447 Val \u0418 AND, and \u0418\u0437 In \u0418\u041b\u0418, \u0418\u043b\u0438 OR, Or \u0418\u043d\u0430\u0447\u0435 Else \u0418\u043d\u0430\u0447\u0435\u0415\u0441\u043b\u0438 ElsIf \u0418\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 Except \u0418\u0441\u0442\u0438\u043d\u0430 True \u041a\u0430\u0436\u0434\u043e\u0433\u043e, \u043a\u0430\u0436\u0434\u043e\u0433\u043e Each, each \u041a\u043e\u043d\u0435\u0446\u0415\u0441\u043b\u0438 EndIf \u041a\u043e\u043d\u0435\u0446\u041f\u043e\u043f\u044b\u0442\u043a\u0438 EndTry \u041a\u043e\u043d\u0435\u0446\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u044b EndProcedure \u041a\u043e\u043d\u0435\u0446\u0424\u0443\u043d\u043a\u0446\u0438\u0438 EndFunction \u041a\u043e\u043d\u0435\u0446\u0426\u0438\u043a\u043b\u0430 EndDo \u041d\u0415, \u041d\u0435 NOT, Not \u041d\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043e Undefined \u041f\u0435\u0440\u0435\u0439\u0442\u0438 Goto \u041f\u0435\u0440\u0435\u043c Var \u041f\u043e For \u041f\u043e\u043a\u0430 While \u041f\u043e\u043f\u044b\u0442\u043a\u0430 Try \u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u0430 Procedure \u041f\u0440\u0435\u0440\u0432\u0430\u0442\u044c Break \u041f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c Continue \u0422\u043e\u0433\u0434\u0430 Then \u0426\u0438\u043a\u043b Do \u0423\u0434\u0430\u043b\u0438\u0442\u044c\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a RemoveHandler \u0424\u0443\u043d\u043a\u0446\u0438\u044f Function \u042d\u043a\u0441\u043f\u043e\u0440\u0442 Export"},{"location":"diagnostics/CanonicalSpellingKeywords/#Preprocessor-instrutions","title":"Preprocessor instrutions","text":"RU EN \u0412\u0435\u0431\u041a\u043b\u0438\u0435\u043d\u0442 WebClient \u0412\u043d\u0435\u0448\u043d\u0435\u0435\u0421\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 ExternalConnection \u0415\u0441\u043b\u0438 If \u0418 AND, And \u0418\u041b\u0418, \u0418\u043b\u0438 OR, Or \u0418\u043d\u0430\u0447\u0435 Else \u0418\u043d\u0430\u0447\u0435\u0415\u0441\u043b\u0438 ElsIf \u041a\u043e\u043d\u0435\u0446\u0415\u0441\u043b\u0438 EndIf \u041a\u043e\u043d\u0435\u0446\u041e\u0431\u043b\u0430\u0441\u0442\u0438 EndRegion \u041a\u043b\u0438\u0435\u043d\u0442 Client \u041c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0435\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u041a\u043b\u0438\u0435\u043d\u0442 MobileAppClient \u041c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0435\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u0421\u0435\u0440\u0432\u0435\u0440 MobileAppServer \u041c\u043e\u0431\u0438\u043b\u044c\u043d\u044b\u0439\u041a\u043b\u0438\u0435\u043d\u0442 MobileClient \u041d\u0430\u041a\u043b\u0438\u0435\u043d\u0442\u0435 AtClient \u041d\u0430\u0421\u0435\u0440\u0432\u0435\u0440\u0435 AtServer \u041d\u0415, \u041d\u0435 NOT, Not \u041e\u0431\u043b\u0430\u0441\u0442\u044c Region \u0421\u0435\u0440\u0432\u0435\u0440 Server \u0422\u043e\u0433\u0434\u0430 Then \u0422\u043e\u043b\u0441\u0442\u044b\u0439\u041a\u043b\u0438\u0435\u043d\u0442\u041e\u0431\u044b\u0447\u043d\u043e\u0435\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 ThickClientOrdinaryApplication \u0422\u043e\u043b\u0441\u0442\u044b\u0439\u041a\u043b\u0438\u0435\u043d\u0442\u0423\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c\u043e\u0435\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 ThickClientManagedApplication \u0422\u043e\u043d\u043a\u0438\u0439\u041a\u043b\u0438\u0435\u043d\u0442 ThinClient"},{"location":"diagnostics/CanonicalSpellingKeywords/#Compilation-directives","title":"Compilation directives","text":"RU EN \u041d\u0430\u041a\u043b\u0438\u0435\u043d\u0442\u0435 AtClient \u041d\u0430\u0421\u0435\u0440\u0432\u0435\u0440\u0435 AtServer \u041d\u0430\u0421\u0435\u0440\u0432\u0435\u0440\u0435\u0411\u0435\u0437\u041a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 AtServerNoContext \u041d\u0430\u041a\u043b\u0438\u0435\u043d\u0442\u0435\u041d\u0430\u0421\u0435\u0440\u0432\u0435\u0440\u0435\u0411\u0435\u0437\u041a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 AtClientAtServerNoContext \u041d\u0430\u041a\u043b\u0438\u0435\u043d\u0442\u0435\u041d\u0430\u0421\u0435\u0440\u0432\u0435\u0440\u0435 AtClientAtServer"},{"location":"diagnostics/CanonicalSpellingKeywords/#Sources","title":"Sources","text":"<ul> <li>Standard: General requirements (RU)</li> </ul>"},{"location":"diagnostics/CanonicalSpellingKeywords/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/CanonicalSpellingKeywords/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:CanonicalSpellingKeywords-off\n// BSLLS:CanonicalSpellingKeywords-on\n</code></pre>"},{"location":"diagnostics/CanonicalSpellingKeywords/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"CanonicalSpellingKeywords\": false\n</code></pre>"},{"location":"diagnostics/CodeAfterAsyncCall/","title":"Lines of code after the asynchronous method call (CodeAfterAsyncCall)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Major</code> <code>No</code> <code>10</code> <code>suspicious</code>"},{"location":"diagnostics/CodeAfterAsyncCall/#Description","title":"Description","text":"<p>When using asynchronous methods, developers may write lines of code follow immediately after calling the asynchronous method. In this case, the specified lines of code are executed immediately, without waiting for the asynchronous method to execute.</p> <p>For the correct solution, you need to move all the code that must be executed after the asynchronous action is completed into the export method and specify its name in the notification processing that will be called after the asynchronous action completes. Or use asynchrony through promises, for example, <code>Wait AlertAsync(Text);</code></p>"},{"location":"diagnostics/CodeAfterAsyncCall/#Examples","title":"Examples","text":"<p>Incorrect code <pre><code>&amp;AtClient\nProcedure Command1(Command)\n    AdditionalParameters = New Structure(\"Result\", 10);\n    Notify = New NotifyDescription(\"AfterNumberWereInputted\", AdditionalParameters.Result, 2);\n\n    Message(\"Inputed value is \" + AdditionalParameters.Result); // wrong because there will always be 10 \nEndProcedure\n\n&amp;AtClient\nProcedure AfterNumberWereInputted(Number, AdditionalParameters) Export\n    If Number &lt;&gt; Undefined Then\n        AdditionalParameters.Result = Number;\n    EndIf;\nEndProcedure;\n</code></pre></p> <p>Correct code <pre><code>&amp;\u041d\u0430\u041a\u043b\u0438\u0435\u043d\u0442\u0435\n\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u0430 \u041a\u043e\u043c\u0430\u043d\u0434\u04301(\u041a\u043e\u043c\u0430\u043d\u0434\u0430)\n    \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b = \u041d\u043e\u0432\u044b\u0439 \u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430(\"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\", 10);\n    \u041e\u043f\u043e\u0432\u0435\u0449\u0435\u043d\u0438\u0435 = \u041d\u043e\u0432\u044b\u0439 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u041e\u043f\u043e\u0432\u0435\u0449\u0435\u043d\u0438\u044f(\"\u041f\u043e\u0441\u043b\u0435\u0412\u0432\u043e\u0434\u0430\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430\", \u042d\u0442\u043e\u0442\u041e\u0431\u044a\u0435\u043a\u0442);\n    \u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c\u0412\u0432\u043e\u0434\u0427\u0438\u0441\u043b\u0430(\u041e\u043f\u043e\u0432\u0435\u0449\u0435\u043d\u0438\u0435, 1, \"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\", \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b.\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442, 2);\n\n\u041a\u043e\u043d\u0435\u0446\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u044b\n\n&amp;\u041d\u0430\u041a\u043b\u0438\u0435\u043d\u0442\u0435\n\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u0430 \u041f\u043e\u0441\u043b\u0435\u0412\u0432\u043e\u0434\u0430\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430(\u0427\u0438\u0441\u043b\u043e, \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b) \u042d\u043a\u0441\u043f\u043e\u0440\u0442\n    \u0415\u0441\u043b\u0438 \u0427\u0438\u0441\u043b\u043e &lt;&gt; \u041d\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043e \u0422\u043e\u0433\u0434\u0430\n        \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b.\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 = \u0427\u0438\u0441\u043b\u043e;\n        \u0421\u043e\u043e\u0431\u0449\u0438\u0442\u044c(\"\u0412\u0432\u0435\u0434\u0435\u043d\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0432\u043d\u043e \" + \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b.\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442); // \u043d\u0435\u0432\u0435\u0440\u043d\u043e, \u0442.\u043a. \u0432\u0441\u0435\u0433\u0434\u0430 \u0431\u0443\u0434\u0435\u0442 10\n    \u041a\u043e\u043d\u0435\u0446\u0415\u0441\u043b\u0438;\n\u041a\u043e\u043d\u0435\u0446\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u044b;\n</code></pre></p> <p>In some cases, executing code immediately after calling an asynchronous method is entirely possible if you do not need to wait for the results of the asynchronous action. For example <pre><code>&amp;AtClient\nProcedure Command(Command)\n    ShowMessageBox(, \"Moneo te!\", 10);\n    Message(\"code started working after ShowMessageBox\");\n    // ...\nEndProcedure\n</code></pre></p> <p>It is also important to consider that an asynchronous method can be called in one of the code branches and you need to analyze the subsequent code until the end of the current procedure\\function. Example: <pre><code>&amp;\u041d\u0430\u041a\u043b\u0438\u0435\u043d\u0442\u0435\n\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u0430 \u041a\u043e\u043c\u0430\u043d\u0434\u04301(\u041a\u043e\u043c\u0430\u043d\u0434\u0430)\n    \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b = \u041d\u043e\u0432\u044b\u0439 \u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430(\"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\", 10);\n    \u0415\u0441\u043b\u0438 \u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0422\u043e\u0433\u0434\u0430\n        \u041e\u043f\u043e\u0432\u0435\u0449\u0435\u043d\u0438\u0435 = \u041d\u043e\u0432\u044b\u0439 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u041e\u043f\u043e\u0432\u0435\u0449\u0435\u043d\u0438\u044f(\"\u041f\u043e\u0441\u043b\u0435\u0412\u0432\u043e\u0434\u0430\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430\", \u042d\u0442\u043e\u0442\u041e\u0431\u044a\u0435\u043a\u0442);\n        \u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c\u0412\u0432\u043e\u0434\u0427\u0438\u0441\u043b\u0430(\u041e\u043f\u043e\u0432\u0435\u0449\u0435\u043d\u0438\u0435, 1, \"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\", \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b.\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442, 2);\n    \u0418\u043d\u0430\u0447\u0435\n        // \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u043a\u043e\u0434\n    \u041a\u043e\u043d\u0435\u0446\u0415\u0441\u043b\u0438;\n    // \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0434 \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u0441\u0440\u0430\u0437\u0443 \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u0437\u043e\u0432\u0430 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430, \u0447\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043d\u0435\u0432\u0435\u0440\u043d\u043e\n\n    \u0421\u043e\u043e\u0431\u0449\u0438\u0442\u044c(\"\u0412\u0432\u0435\u0434\u0435\u043d\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0432\u043d\u043e \" + \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b.\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442); // \u043d\u0435\u0432\u0435\u0440\u043d\u043e, \u0442.\u043a. \u0432\u0441\u0435\u0433\u0434\u0430 \u0431\u0443\u0434\u0435\u0442 10\n\u041a\u043e\u043d\u0435\u0446\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u044b\n</code></pre></p>"},{"location":"diagnostics/CodeAfterAsyncCall/#Sources","title":"Sources","text":"<ul> <li>Developers guide: Internal language. Ch. 4: Sync and async methods (RU)</li> </ul>"},{"location":"diagnostics/CodeAfterAsyncCall/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/CodeAfterAsyncCall/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:CodeAfterAsyncCall-off\n// BSLLS:CodeAfterAsyncCall-on\n</code></pre>"},{"location":"diagnostics/CodeAfterAsyncCall/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"CodeAfterAsyncCall\": false\n</code></pre>"},{"location":"diagnostics/CodeBlockBeforeSub/","title":"Method definitions must be placed before the module body operators (CodeBlockBeforeSub)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code><code>OS</code> <code>Blocker</code> <code>Yes</code> <code>5</code> <code>error</code>"},{"location":"diagnostics/CodeBlockBeforeSub/#Description","title":"Description","text":"<p>The structure of the software module (in general form) is clearly defined:</p> <ul> <li>first comes the variable definition block</li> <li>then definitions of procedures and functions</li> <li>then the module code block</li> </ul> <p>Based on the structure described above, the location of the program code before the definition of methods is unacceptable.</p>"},{"location":"diagnostics/CodeBlockBeforeSub/#Examples","title":"Examples","text":"<p>Incorrect</p> <pre><code>SomeMethod();\nMessage(\"Before methods definition\");\n\nProcedure SomeMethod()\n// Method body\nEndProcedure\n</code></pre>"},{"location":"diagnostics/CodeBlockBeforeSub/#Sources","title":"Sources","text":"<ul> <li>Module structure (RU)</li> </ul>"},{"location":"diagnostics/CodeBlockBeforeSub/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/CodeBlockBeforeSub/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:CodeBlockBeforeSub-off\n// BSLLS:CodeBlockBeforeSub-on\n</code></pre>"},{"location":"diagnostics/CodeBlockBeforeSub/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"CodeBlockBeforeSub\": false\n</code></pre>"},{"location":"diagnostics/CodeOutOfRegion/","title":"Code out of region (CodeOutOfRegion)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Info</code> <code>Yes</code> <code>1</code> <code>standard</code>"},{"location":"diagnostics/CodeOutOfRegion/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>checkUnknownModuleType</code> <code>Boolean</code> <code>Check unknown module type</code> <code>false</code>"},{"location":"diagnostics/CodeOutOfRegion/#Description","title":"Description","text":"<p>The code of module should be structured and divided into regions. The requirement to structure code by regions is to improve code readability and maintainability and development by group of authors (developers) and in finalizing application solutions on specific implementations.</p>"},{"location":"diagnostics/CodeOutOfRegion/#Examples","title":"Examples","text":"<pre><code>#Region &lt;RegionName&gt;\n</code></pre> <p>The standard describes only 10 region names, the names of nested regions are not checked.</p> <p>Correct: <pre><code>#Region Private\n#Region Print\n// Methods code\n#EndRegion\n#Region Other\n// Methods code\n#EndRegion\n#EndRegion\n</code></pre></p> <p>Name matching table (full in source code):</p> RU EN \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u044b\u0439\u0418\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 Public \u0421\u043b\u0443\u0436\u0435\u0431\u043d\u044b\u0439\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u044b\u0439\u0418\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 Internal \u0421\u043b\u0443\u0436\u0435\u0431\u043d\u044b\u0435\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u044b\u0418\u0424\u0443\u043d\u043a\u0446\u0438\u0438 Private \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438\u0421\u043e\u0431\u044b\u0442\u0438\u0439 EventHandlers \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438\u0421\u043e\u0431\u044b\u0442\u0438\u0439\u0424\u043e\u0440\u043c\u044b FormEventHandlers \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438\u0421\u043e\u0431\u044b\u0442\u0438\u0439\u042d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432\u0428\u0430\u043f\u043a\u0438\u0424\u043e\u0440\u043c\u044b FormHeaderItemsEventHandlers \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438\u041a\u043e\u043c\u0430\u043d\u0434\u0424\u043e\u0440\u043c\u044b FormCommandsEventHandlers \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 Variables \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f Initialize \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438\u0421\u043e\u0431\u044b\u0442\u0438\u0439\u042d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432\u0422\u0430\u0431\u043b\u0438\u0446\u044b\u0424\u043e\u0440\u043c\u044b FormTableItemsEventHandlers"},{"location":"diagnostics/CodeOutOfRegion/#Sources","title":"Sources","text":"<ul> <li>Source: Standard: Module structure (RU)</li> </ul>"},{"location":"diagnostics/CodeOutOfRegion/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/CodeOutOfRegion/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:CodeOutOfRegion-off\n// BSLLS:CodeOutOfRegion-on\n</code></pre>"},{"location":"diagnostics/CodeOutOfRegion/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"CodeOutOfRegion\": {\n\"checkUnknownModuleType\": false\n}\n</code></pre>"},{"location":"diagnostics/CognitiveComplexity/","title":"Cognitive complexity (CognitiveComplexity)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Critical</code> <code>Yes</code> <code>15</code> <code>brainoverload</code>"},{"location":"diagnostics/CognitiveComplexity/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>complexityThreshold</code> <code>Integer</code> <code>Complexity threshold</code> <code>15</code> <code>checkModuleBody</code> <code>Boolean</code> <code>Check module body</code> <code>true</code>"},{"location":"diagnostics/CognitiveComplexity/#Description","title":"Description","text":"<p>Cognitive complexity shows how difficult it is to perceive the written code. High cognitive complexity clearly indicates the need for refactoring to make future support easier. The most effective way to reduce cognitive complexity is to decompose the code, split the methods into simpler ones, and also optimize logical expressions.</p>"},{"location":"diagnostics/CognitiveComplexity/#Cognitive-Complexity-calculation","title":"Cognitive Complexity calculation","text":"<p>Bellow are given code analysis rules, conditions increase cognitive complexity.</p>"},{"location":"diagnostics/CognitiveComplexity/#Each-next-block-increases-complexity-by-1","title":"Each next block increases complexity by 1","text":"<pre><code>// Loop `For each`\nFor Each Element in Collection Do                    // +1\nEndDo;\n\n// Loop `For`\nFor i = StartValue To EndValue Do                    // +1\nEndDo;\n\n// Loop `While`\nWhile Condition Do                                   // +1\nEndDo;\n\n\n// Condition\nIf Condition1 Then                                   // +1\n\n// Alternative condition branch\nElseIf Condition2 Then                               // +1\n\n// default branch\nElse\nEndIf;\n\n// ternary operator\nValue = ?(Condition, ValueTrue, ValueFalse);         // +1\n\nTry\n// Exception handling\nExcept                                               // +1\nEndTry;\n\n// Go to label\nGoto ~Label;                                          // +1\n\n// Binary logical operations\n\nWhile Condition1 Or Condition2 Do                    // +2\nEndDo;\n\nIf Condition1 And Condition2 Then                    // +2\n\nElseIf Condition2                                    // +1\n        Or Condition3 And Condition4 Then            // +2\n\nEndIf;\n\nValue = ?(Condition1 Or Condition2 Or Not Condition3,// +3\n                ValueTrue, ValueFalse);\n\nValue = First Or Second;                             // +1\n\nValue = A &lt;&gt; B;                                      // +1\n</code></pre>"},{"location":"diagnostics/CognitiveComplexity/#For-each-nesting-level-next-blocks-get-additional-1-to-complexity","title":"For each nesting level, next blocks get additional 1 to complexity","text":"<pre><code>// Loop `For each`\nFor Each Element in Collection Do\nEndDo;\n\n// Loop `For`\nFor i = StartValue To EndValue Do\nEndDo;\n\n// Loop `While`\nWhile Condition Do\nEndDo;\n\n// Condition\nIf Condition1 Then\nEndIf;\n\n// ternary operator\nValue = ?(Condition, ValueTrue, ValueFalse);\n\nTry\n// Exception handling\nExcept\nEndTry;\n\n~Label:\n</code></pre>"},{"location":"diagnostics/CognitiveComplexity/#Alternative-branches-binary-operations-and-go-to-label-do-not-increase-cognitive-complexity-when-nested","title":"Alternative branches, binary operations, and go to label do not increase cognitive complexity when nested","text":""},{"location":"diagnostics/CognitiveComplexity/#Examples","title":"Examples","text":"<p>Bellow are code examples and their cognitive complexity calculation.</p> <pre><code>Function Example1(ClassType)\n    If ClassType.Unknown() Then                                                  // +1, condition expression, no nesting\n        Return Chars.UnknownSymbol;\n    EndIf;\n\n    AmbiguityFound = False;\n    ListSymbols = ClassType.GetSymbol().Children.Find(\"name\");\n    For Each Symbol in ListSymbols Do\n// +1, loop, no nesting\n        If Symbol.HasType(Symbols.Strage)                                         // +2, condition nested in loop, nesting 1\n            AND NOT Symbols.Export() Then                                            // +1, logival operation, nesting not taken into account\n\n            If CanOverride(Symbol) Then                                     // +3, nested condition, nesting 2\n                Overrideability = CheckOverrideability(Symbol, ClassType);\n                If Overrideability = Undefined Then                           // +4, nested condition, nesting 3\n                    If NOT AmbiguityFound Then                                 // +5, nested condition, nesting 4\n                        AmbiguityFound = True;\n                    EndIf;\n                ElseIf Overrideability Then                                     // +1, alternative condition branch, nesting not taken into account\n                    Return Symbol;\n                EndIf;\n            Else                                                                      // +1, default branch, nesting not taken into account\n                Continue;\n            EndIf;\n        EndIf;\n    EndDo;\n\n    If AmbiguityFound Then                                                   // +1, no nesting\n        Return Symbols.UnknownSymbol;\n    EndIf;\n\n    Return Undefined;\nEndFunction\n</code></pre> <pre><code>Function Example2(Document)\n    StartTransaction();\n    NeedPost = ?(Document.Posted, FALSE,                                                         // +1, ternary operator\n                                        ?(Document.DeletionMark, FALSE, TRUE));                  // +2, nested ternary operator, nesting 1\n    Try                                                                                          // +0, try increases nesting level\n        DocumentObject = Document.GetObject();\n        If DocumentObject.Posted Then                                                            // +2, nested condition, nesting 1\n            For Each TabularSectionLine \u0418\u0437 DocumentObject.TabularSection Do                      // +3, nested loop, nesting 2\n                If TabularSectionLine.Column1 = 7                                                // +4, nested condition, nesting 3\n                        OR TabularSectionLine.Column2 = 7 Then                                   // +1, logical operation, nesting not taken into account\n                    Continue;\n                EndIf;\n                If TabularSectionLine.Column4 &gt; 1 Then                                          // +4, nested condition, nesting 3\n                    Break;\n                Else                                                                            // +1, default branch, nesting not taken into account\n                    If TabularSectionLine.Column1 + TabularSectionLine.Column2 = 2 Then         // +5, nested condition, nesting 4\n                        TabularSectionLine.Column10 = TabularSectionLine.Column1 * 2;\n                    EndIf;\n                EndIf;\n            EndDo;\n        Else                                                                                    // +1, default branch, nesting not taken into account\n            NeedPost = DocumentObject.Date &gt; CurrentDate();                                     // +1, logical operation, nesting not taken into account\n            Goto ~Label;                                                                        // +1, go to label, nesting not taken into account\n        EndIf;\n\n        If NeedPost Then                                                                        // +2, nested condition, nesting 1\n            DocumentObject.Write(DocumentWriteMode.Posting);\n        ElseIf NOT NeedPost Then                                                                // +1, alternative branch, nesting not taken into account\n            DocumentObject.Write(DocumentWriteMode.Write);\n        Else                                                                                    // +1, default branch, nesting not taken into account\n            Raise \"Why?\";\n        EndIf;\n    Except                                                                                      // +1, except processing\n        RetryWrite = FALSE;\n        Try                                                                                     // +0, try, increases nesting level\n            If DocumentObject.Posted Then                                                       // +3, nested condition, nesting 2\n                DocumentObject.Write(DocumentWriteMode.Write);\n            EndIf;\n        Raise                                                                                   // +2, except processing, nesting 1\n            RetryWrite = \u0418\u0421\u0422\u0418\u041d\u0410;\n        EndTry;\n        If NOT RetryWrite Then                                                                  // +2, nested condition, nesting 1\n            While TransactionIsActive() Do                                                      // +3, nested loop, nesting 2\n                CancelTransaction();\n            EndDo;\n        EndIf;\n        Raise \"Error\"\n    EndTry;\n\n    ~Label:\n    Return Undefined;\nEndFunction\n</code></pre>"},{"location":"diagnostics/CognitiveComplexity/#Sources","title":"Sources","text":"<ul> <li>Cognitive complexity, ver. 1.4</li> </ul>"},{"location":"diagnostics/CognitiveComplexity/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/CognitiveComplexity/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:CognitiveComplexity-off\n// BSLLS:CognitiveComplexity-on\n</code></pre>"},{"location":"diagnostics/CognitiveComplexity/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"CognitiveComplexity\": {\n\"complexityThreshold\": 15,\n\"checkModuleBody\": true\n}\n</code></pre>"},{"location":"diagnostics/CommandModuleExportMethods/","title":"Export methods in command and general command modules (CommandModuleExportMethods)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Info</code> <code>Yes</code> <code>1</code> <code>standard</code><code>clumsy</code>"},{"location":"diagnostics/CommandModuleExportMethods/#Description","title":"Description","text":"<p>You should not place export methods in command and General command modules. You can't access these modules from code external to them, so export methods in these modules do not make sense.</p>"},{"location":"diagnostics/CommandModuleExportMethods/#Sources","title":"Sources","text":"<ul> <li>Source (RU)</li> </ul>"},{"location":"diagnostics/CommandModuleExportMethods/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/CommandModuleExportMethods/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:CommandModuleExportMethods-off\n// BSLLS:CommandModuleExportMethods-on\n</code></pre>"},{"location":"diagnostics/CommandModuleExportMethods/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"CommandModuleExportMethods\": false\n</code></pre>"},{"location":"diagnostics/CommentedCode/","title":"Commented out code (CommentedCode)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Minor</code> <code>Yes</code> <code>1</code> <code>standard</code><code>badpractice</code>"},{"location":"diagnostics/CommentedCode/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>threshold</code> <code>Float</code> <code>Threshold</code> <code>0.9</code> <code>exclusionPrefixes</code> <code>String</code> <code>Exclusion prefixes</code> ``"},{"location":"diagnostics/CommentedCode/#Description","title":"Description","text":"<p>Software modules should not have commented out code fragments, as well as fragments, which are in any way connected with the development process (debugging code, service marks, i.e. !!! _, MRG, etc.) and with specific developers of this code.</p> <p>For example, it is unacceptable to leave such fragments in the code after debugging or refactoring is completed:</p> <p><pre><code>Procedure BeforeDelete(Failure)\n    //If True Then\n    //  Message(\"For debugging\");\n    //EndIf;\nEndProcedure\n</code></pre> also wrong: <pre><code>Procedure BeforeDelete(Failure)\n    If True Then\n        // Ivanov: need fix\n    EndIf;\nEndProcedure\n</code></pre></p> <p>Correct: after debugging or refactoring is completed, remove the handler BeforeDelete from the code.</p> <p>ATTENTION: A code block is considered commented, if at least one line inside the block is defined as code.</p>"},{"location":"diagnostics/CommentedCode/#Sources","title":"Sources","text":"<ul> <li>Standard: Modules texts(RU)</li> </ul>"},{"location":"diagnostics/CommentedCode/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/CommentedCode/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:CommentedCode-off\n// BSLLS:CommentedCode-on\n</code></pre>"},{"location":"diagnostics/CommentedCode/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"CommentedCode\": {\n\"threshold\": 0.9,\n\"exclusionPrefixes\": \"\"\n}\n</code></pre>"},{"location":"diagnostics/CommitTransactionOutsideTryCatch/","title":"Violating transaction rules for the 'CommitTransaction' method (CommitTransactionOutsideTryCatch)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>10</code> <code>standard</code>"},{"location":"diagnostics/CommitTransactionOutsideTryCatch/#Description","title":"Description","text":"<p>The CommitTransaction method should be the last one in the Try block, just before the Exception operator, to ensure that there is no exception after the CommitTransaction.</p>"},{"location":"diagnostics/CommitTransactionOutsideTryCatch/#Sources","title":"Sources","text":"<ul> <li>Transactions: terms of use (RU)</li> </ul>"},{"location":"diagnostics/CommitTransactionOutsideTryCatch/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/CommitTransactionOutsideTryCatch/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:CommitTransactionOutsideTryCatch-off\n// BSLLS:CommitTransactionOutsideTryCatch-on\n</code></pre>"},{"location":"diagnostics/CommitTransactionOutsideTryCatch/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"CommitTransactionOutsideTryCatch\": false\n</code></pre>"},{"location":"diagnostics/CommonModuleAssign/","title":"CommonModuleAssign (CommonModuleAssign)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code><code>OS</code> <code>Blocker</code> <code>Yes</code> <code>2</code> <code>error</code>"},{"location":"diagnostics/CommonModuleAssign/#Description","title":"Description","text":"<p>Setting a value to a common module throws exception. Such situation is possible when a common module is added to the configuration with a name that has already been used for the variable.</p>"},{"location":"diagnostics/CommonModuleAssign/#Examples","title":"Examples","text":""},{"location":"diagnostics/CommonModuleAssign/#Sources","title":"Sources","text":""},{"location":"diagnostics/CommonModuleAssign/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/CommonModuleAssign/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:CommonModuleAssign-off\n// BSLLS:CommonModuleAssign-on\n</code></pre>"},{"location":"diagnostics/CommonModuleAssign/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"CommonModuleAssign\": false\n</code></pre>"},{"location":"diagnostics/CommonModuleInvalidType/","title":"Common module invalid type (CommonModuleInvalidType)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>5</code> <code>standard</code><code>unpredictable</code><code>design</code>"},{"location":"diagnostics/CommonModuleInvalidType/#Description","title":"Description","text":"<p>When developing common modules, you should choose one of four code execution contexts:</p> Common module type Naming example Server call Server External connection Client (Ordinary application) Client (Managed application) Server-side Common (or CommonServer) + + + Server-side to call from client CommonServerCall + + Client-side CommonClient (or CommonGlobal) + + Client-server CommonClientServer + + + +"},{"location":"diagnostics/CommonModuleInvalidType/#Examples","title":"Examples","text":""},{"location":"diagnostics/CommonModuleInvalidType/#Sources","title":"Sources","text":"<ul> <li>Standard: Rules for creating common modules (RU)</li> </ul>"},{"location":"diagnostics/CommonModuleInvalidType/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/CommonModuleInvalidType/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:CommonModuleInvalidType-off\n// BSLLS:CommonModuleInvalidType-on\n</code></pre>"},{"location":"diagnostics/CommonModuleInvalidType/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"CommonModuleInvalidType\": false\n</code></pre>"},{"location":"diagnostics/CommonModuleMissingAPI/","title":"Common module should have a programming interface (CommonModuleMissingAPI)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Minor</code> <code>Yes</code> <code>1</code> <code>brainoverload</code><code>suspicious</code>"},{"location":"diagnostics/CommonModuleMissingAPI/#Description","title":"Description","text":"<p>A common module must have at least one export method and region \"Public\" or \"Internal\".</p>"},{"location":"diagnostics/CommonModuleMissingAPI/#Examples","title":"Examples","text":"<p>Incorrect</p> <pre><code>// Start module\nProcedure Test(A)\n    A = A + 1;\nEndProcedure\n// End module\n</code></pre> <p>Correct</p> <pre><code>// Start module\n#Region Internal\nProcedure Test(A) Export\n    A = A + 1;\nEndProcedure\n#EndRegion\n// End module\n</code></pre>"},{"location":"diagnostics/CommonModuleMissingAPI/#Sources","title":"Sources","text":"<p>Source: Standard: Module structure (RU)</p>"},{"location":"diagnostics/CommonModuleMissingAPI/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/CommonModuleMissingAPI/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:CommonModuleMissingAPI-off\n// BSLLS:CommonModuleMissingAPI-on\n</code></pre>"},{"location":"diagnostics/CommonModuleMissingAPI/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"CommonModuleMissingAPI\": false\n</code></pre>"},{"location":"diagnostics/CommonModuleNameCached/","title":"Missed postfix \"Cached\" (CommonModuleNameCached)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>5</code> <code>standard</code><code>badpractice</code><code>unpredictable</code>"},{"location":"diagnostics/CommonModuleNameCached/#Description","title":"Description","text":"<p>Use the \"Cached\" (rus. \u041f\u043e\u0432\u0442\u0418\u0441\u043f) and \"ClientCached\" (rus. \u041a\u043b\u0438\u0435\u043d\u0442\u041f\u043e\u0432\u0442\u0418\u0441\u043f) postfixes for the modules that implement functions with repeated use of return values (upon the call or session time) on the server and on the client respectively.</p>"},{"location":"diagnostics/CommonModuleNameCached/#Examples","title":"Examples","text":"<p>FilesClientCached, UsersInternalCached</p>"},{"location":"diagnostics/CommonModuleNameCached/#Sources","title":"Sources","text":"<p>Standard: Rules for creating common modules (RU)</p>"},{"location":"diagnostics/CommonModuleNameCached/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/CommonModuleNameCached/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:CommonModuleNameCached-off\n// BSLLS:CommonModuleNameCached-on\n</code></pre>"},{"location":"diagnostics/CommonModuleNameCached/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"CommonModuleNameCached\": false\n</code></pre>"},{"location":"diagnostics/CommonModuleNameClient/","title":"Missed postfix \"Client\" (CommonModuleNameClient)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Minor</code> <code>Yes</code> <code>5</code> <code>standard</code><code>badpractice</code><code>unpredictable</code>"},{"location":"diagnostics/CommonModuleNameClient/#Description","title":"Description","text":"<p>Client common modules contain client business logic (functionality specific to the client only) and have the following features:</p> <ul> <li>Client (Managed application)</li> <li>Client (Ordinary application)</li> </ul> <p>In cases where client methods should be available only in managed application mode (or only in regular application mode or only in external connection mode), a different combination of these two features is allowed.</p> <p>Client common modules are named with the \"Client\" postfix ( \"\u041a\u043b\u0438\u0435\u043d\u0442\" in Rus). Except when the Global flag is on.</p>"},{"location":"diagnostics/CommonModuleNameClient/#Examples","title":"Examples","text":"<p>FilesClient, CommonClient, StandardSubsystemsClient</p>"},{"location":"diagnostics/CommonModuleNameClient/#Sources","title":"Sources","text":"<p>Standard: Modules (RU)</p>"},{"location":"diagnostics/CommonModuleNameClient/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/CommonModuleNameClient/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:CommonModuleNameClient-off\n// BSLLS:CommonModuleNameClient-on\n</code></pre>"},{"location":"diagnostics/CommonModuleNameClient/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"CommonModuleNameClient\": false\n</code></pre>"},{"location":"diagnostics/CommonModuleNameClientServer/","title":"Missed postfix \"ClientServer\" (CommonModuleNameClientServer)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>5</code> <code>standard</code><code>badpractice</code><code>unpredictable</code>"},{"location":"diagnostics/CommonModuleNameClientServer/#Description","title":"Description","text":"<p>To avoid code duplication, it is recommended to create client-server common modules with methods whose contents are the same on the server and on the client. These modules have signs:</p> <ul> <li>Client (Managed application)</li> <li>Server (ServerCall is disabled)</li> <li>Client (Ordinary application)</li> <li>External connection</li> </ul> <p>Common modules of this type are named with the \"ClientServer\" (rus. \"\u041a\u043b\u0438\u0435\u043d\u0442\u0421\u0435\u0440\u0432\u0435\u0440\").</p>"},{"location":"diagnostics/CommonModuleNameClientServer/#Examples","title":"Examples","text":"<p>FilesClientServer, CommonClientServer, UsersClientServer</p>"},{"location":"diagnostics/CommonModuleNameClientServer/#Sources","title":"Sources","text":"<p>Standard: Rules for creating common modules (RU)</p>"},{"location":"diagnostics/CommonModuleNameClientServer/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/CommonModuleNameClientServer/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:CommonModuleNameClientServer-off\n// BSLLS:CommonModuleNameClientServer-on\n</code></pre>"},{"location":"diagnostics/CommonModuleNameClientServer/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"CommonModuleNameClientServer\": false\n</code></pre>"},{"location":"diagnostics/CommonModuleNameFullAccess/","title":"Missed postfix \"FullAccess\" (CommonModuleNameFullAccess)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Security Hotspot</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>5</code> <code>standard</code><code>badpractice</code><code>unpredictable</code>"},{"location":"diagnostics/CommonModuleNameFullAccess/#Description","title":"Description","text":"<p>Modules executed in privileged mode have the Privileged flag, are named with the \"FullAccess\" postfix (rus. \"\u041f\u043e\u043b\u043d\u044b\u0435\u041f\u0440\u0430\u0432\u0430\").</p>"},{"location":"diagnostics/CommonModuleNameFullAccess/#Examples","title":"Examples","text":"<p>Example: FilesFullAccess</p>"},{"location":"diagnostics/CommonModuleNameFullAccess/#Sources","title":"Sources","text":"<p>Standard: Modules (RU)</p>"},{"location":"diagnostics/CommonModuleNameFullAccess/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/CommonModuleNameFullAccess/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:CommonModuleNameFullAccess-off\n// BSLLS:CommonModuleNameFullAccess-on\n</code></pre>"},{"location":"diagnostics/CommonModuleNameFullAccess/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"CommonModuleNameFullAccess\": false\n</code></pre>"},{"location":"diagnostics/CommonModuleNameGlobal/","title":"Missed postfix \"Global\" (CommonModuleNameGlobal)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>5</code> <code>standard</code><code>badpractice</code><code>brainoverload</code>"},{"location":"diagnostics/CommonModuleNameGlobal/#Description","title":"Description","text":"<p>For global modules, the \"Global\" (rus. \"\u0413\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u044b\u0439\") postfix is added, \"Client\" postfix should not be added.</p>"},{"location":"diagnostics/CommonModuleNameGlobal/#Examples","title":"Examples","text":"<p>FilesGlobal, InfobaseUpdateGlobal</p>"},{"location":"diagnostics/CommonModuleNameGlobal/#Sources","title":"Sources","text":"<p>Standard: Modules (RU)</p>"},{"location":"diagnostics/CommonModuleNameGlobal/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/CommonModuleNameGlobal/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:CommonModuleNameGlobal-off\n// BSLLS:CommonModuleNameGlobal-on\n</code></pre>"},{"location":"diagnostics/CommonModuleNameGlobal/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"CommonModuleNameGlobal\": false\n</code></pre>"},{"location":"diagnostics/CommonModuleNameGlobalClient/","title":"Global module with postfix \"Client\" (CommonModuleNameGlobalClient)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>5</code> <code>standard</code>"},{"location":"diagnostics/CommonModuleNameGlobalClient/#Description","title":"Description","text":"<p>For global modules, the \"Global\" (rus. \"\u0413\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u044b\u0439\") postfix is added , \"Client\" postfix should not be added.</p>"},{"location":"diagnostics/CommonModuleNameGlobalClient/#Examples","title":"Examples","text":"<p>Incorrect: InfobaseUpdateGlobalClient</p> <p>Correct:  InfobaseUpdateGlobal</p>"},{"location":"diagnostics/CommonModuleNameGlobalClient/#Sources","title":"Sources","text":"<p>Standard: Modules (RU)</p>"},{"location":"diagnostics/CommonModuleNameGlobalClient/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/CommonModuleNameGlobalClient/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:CommonModuleNameGlobalClient-off\n// BSLLS:CommonModuleNameGlobalClient-on\n</code></pre>"},{"location":"diagnostics/CommonModuleNameGlobalClient/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"CommonModuleNameGlobalClient\": false\n</code></pre>"},{"location":"diagnostics/CommonModuleNameServerCall/","title":"Missed postfix \"ServerCall\" (CommonModuleNameServerCall)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Minor</code> <code>Yes</code> <code>5</code> <code>standard</code><code>badpractice</code><code>unpredictable</code>"},{"location":"diagnostics/CommonModuleNameServerCall/#Description","title":"Description","text":"<p>Common server modules for calling from the client contain server procedures and functions available from the client code. They constitute the client interface of the application server. Such procedures and functions are placed in common modules with the following property:</p> <ul> <li>Server (ServerCall is enabled)</li> </ul> <p>Name common server modules to be called from the client according to general rules of naming metadata objects. Make sure they include the \"ServerCall\" (rus. \"\u0412\u044b\u0437\u043e\u0432\u0421\u0435\u0440\u0432\u0435\u0440\u0430\") postfix.</p>"},{"location":"diagnostics/CommonModuleNameServerCall/#Examples","title":"Examples","text":"<p>FilesServerCall, CommonServerCall</p>"},{"location":"diagnostics/CommonModuleNameServerCall/#Sources","title":"Sources","text":"<p>Standard: Modules (RU)</p>"},{"location":"diagnostics/CommonModuleNameServerCall/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/CommonModuleNameServerCall/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:CommonModuleNameServerCall-off\n// BSLLS:CommonModuleNameServerCall-on\n</code></pre>"},{"location":"diagnostics/CommonModuleNameServerCall/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"CommonModuleNameServerCall\": false\n</code></pre>"},{"location":"diagnostics/CommonModuleNameWords/","title":"Unrecommended common module name (CommonModuleNameWords)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Info</code> <code>Yes</code> <code>5</code> <code>standard</code>"},{"location":"diagnostics/CommonModuleNameWords/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>words</code> <code>String</code> <code>Unrecommended words</code> <code>\u043f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u044b|procedures|\u0444\u0443\u043d\u043a\u0446\u0438\u0438|functions|\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438|handlers|\u043c\u043e\u0434\u0443\u043b\u044c|module|\u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c|functionality</code>"},{"location":"diagnostics/CommonModuleNameWords/#Description","title":"Description","text":"<p>It is not recommended to use the words \"Procedures\", \"Functions\", \"Handlers\", \"Module\", \"Functionality\" in the name of the general module.</p>"},{"location":"diagnostics/CommonModuleNameWords/#Examples","title":"Examples","text":""},{"location":"diagnostics/CommonModuleNameWords/#Sources","title":"Sources","text":"<ul> <li>Standard: Rules for creating common modules (RU)</li> </ul>"},{"location":"diagnostics/CommonModuleNameWords/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/CommonModuleNameWords/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:CommonModuleNameWords-off\n// BSLLS:CommonModuleNameWords-on\n</code></pre>"},{"location":"diagnostics/CommonModuleNameWords/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"CommonModuleNameWords\": {\n\"words\": \"\u043f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u044b|procedures|\u0444\u0443\u043d\u043a\u0446\u0438\u0438|functions|\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438|handlers|\u043c\u043e\u0434\u0443\u043b\u044c|module|\u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c|functionality\"\n}\n</code></pre>"},{"location":"diagnostics/CompilationDirectiveLost/","title":"Methods compilation directive (CompilationDirectiveLost)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>1</code> <code>standard</code><code>unpredictable</code>"},{"location":"diagnostics/CompilationDirectiveLost/#Description","title":"Description","text":"<p>All methods of managed forms and commands must have compilation directives.</p>"},{"location":"diagnostics/CompilationDirectiveLost/#Examples","title":"Examples","text":""},{"location":"diagnostics/CompilationDirectiveLost/#Incorrect","title":"Incorrect:","text":"<pre><code>Procedure OnCreateAtServer()\n...\nEndProcedure \n</code></pre>"},{"location":"diagnostics/CompilationDirectiveLost/#Correct","title":"Correct:","text":"<pre><code>&amp;AtServer\nProcedure OnCreateAtServer()\n...\nEndProcedure \n</code></pre>"},{"location":"diagnostics/CompilationDirectiveLost/#Sources","title":"Sources","text":"<ul> <li>Helpful information: Development of an interface for applied solutions on the 1C: Enterprise 8 platform (RU)</li> </ul>"},{"location":"diagnostics/CompilationDirectiveLost/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/CompilationDirectiveLost/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:CompilationDirectiveLost-off\n// BSLLS:CompilationDirectiveLost-on\n</code></pre>"},{"location":"diagnostics/CompilationDirectiveLost/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"CompilationDirectiveLost\": false\n</code></pre>"},{"location":"diagnostics/CompilationDirectiveNeedLess/","title":"Needless compilation directive (CompilationDirectiveNeedLess)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>1</code> <code>clumsy</code><code>standard</code><code>unpredictable</code>"},{"location":"diagnostics/CompilationDirectiveNeedLess/#Description","title":"Description","text":"<p>Compilation directives:</p> <pre><code>&amp;AtClient (&amp;\u041d\u0430\u041a\u043b\u0438\u0435\u043d\u0442\u0435)\n&amp;AtServer (&amp;\u041d\u0430\u0421\u0435\u0440\u0432\u0435\u0440\u0435)\n&amp;AtServerNoContext (&amp;\u041d\u0430\u0421\u0435\u0440\u0432\u0435\u0440\u0435\u0411\u0435\u0437\u041a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430)\n</code></pre> <p>Must be used only in the code of managed form modules and in the code of command modules. In other modules, we recommend use instructions to the preprocessor.</p> <p>In server or client common modules, the execution context is obvious, so there is no sense in compilation directives. In common modules with client and server attributes, using compilation directives makes it difficult to understand which ones are procedures (functions) are available eventually.</p>"},{"location":"diagnostics/CompilationDirectiveNeedLess/#Sources","title":"Sources","text":"<ul> <li>Standard: Use of compilation and preprocessor directives (RU)</li> </ul>"},{"location":"diagnostics/CompilationDirectiveNeedLess/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/CompilationDirectiveNeedLess/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:CompilationDirectiveNeedLess-off\n// BSLLS:CompilationDirectiveNeedLess-on\n</code></pre>"},{"location":"diagnostics/CompilationDirectiveNeedLess/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"CompilationDirectiveNeedLess\": false\n</code></pre>"},{"location":"diagnostics/ConsecutiveEmptyLines/","title":"Consecutive empty lines (ConsecutiveEmptyLines)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Info</code> <code>Yes</code> <code>1</code> <code>badpractice</code>"},{"location":"diagnostics/ConsecutiveEmptyLines/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>allowedEmptyLinesCount</code> <code>Integer</code> <code>Maximum allowed consecutive empty lines</code> <code>1</code>"},{"location":"diagnostics/ConsecutiveEmptyLines/#Description","title":"Description","text":"<p>To separate blocks of code among themselves, insert an empty line.</p> <p>Inserting 2 or more empty lines does not carry this value and leads to a meaningless increase in the length of the method or module.</p>"},{"location":"diagnostics/ConsecutiveEmptyLines/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/ConsecutiveEmptyLines/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:ConsecutiveEmptyLines-off\n// BSLLS:ConsecutiveEmptyLines-on\n</code></pre>"},{"location":"diagnostics/ConsecutiveEmptyLines/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"ConsecutiveEmptyLines\": {\n\"allowedEmptyLinesCount\": 1\n}\n</code></pre>"},{"location":"diagnostics/CrazyMultilineString/","title":"Crazy multiline literals (CrazyMultilineString)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>1</code> <code>badpractice</code><code>suspicious</code><code>unpredictable</code>"},{"location":"diagnostics/CrazyMultilineString/#Description","title":"Description","text":"<p>In source text, multi-line constants can be initialized in two ways:</p> <ul> <li>'classic', which uses line feed and string concatenation</li> <li>'crazy' where lines are separated by whitespace</li> </ul> <p>The second method complicates the perception; when using it, it is easy to make and miss a mistake.</p>"},{"location":"diagnostics/CrazyMultilineString/#Examples","title":"Examples","text":"<p>Difficulty understanding:</p> <pre><code>String = \"BBB\" \"CC\"\n\"F\";\n</code></pre> <p>Classic variant:</p> <pre><code>String = \"BBB\" + \"CC\"\n         + \"F\";\n</code></pre>"},{"location":"diagnostics/CrazyMultilineString/#Sources","title":"Sources","text":""},{"location":"diagnostics/CrazyMultilineString/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/CrazyMultilineString/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:CrazyMultilineString-off\n// BSLLS:CrazyMultilineString-on\n</code></pre>"},{"location":"diagnostics/CrazyMultilineString/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"CrazyMultilineString\": false\n</code></pre>"},{"location":"diagnostics/CreateQueryInCycle/","title":"Execution query on cycle (CreateQueryInCycle)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code><code>OS</code> <code>Critical</code> <code>Yes</code> <code>20</code> <code>performance</code>"},{"location":"diagnostics/CreateQueryInCycle/#Description","title":"Description","text":"<p>Execution query in cycle.</p>"},{"location":"diagnostics/CreateQueryInCycle/#Examples","title":"Examples","text":"<p>Incorrect</p> <pre><code>// BanksToProcessing - contains an array of banks\n\nInidividualQuery = New Query(\"\n  |SELECT\n  | BankAccounts.Ref AS Account\n  |FROM\n  | Catalog.BankAccounts AS BankAccounts\n  |WHERE\n  | BankAccounts.Bank = &amp;Bank\");\n\nFor Each Bank From BanksToProcess Do\n  InidividualQuery .SetParameter(\"Bank\", Bank);\n  AccountsSelection = InidividualQuery .Execute().Select();\n  While AccountsSelection.Next() Do\n    ProcessBankAccounts(AccountsSelection.Account);\n  EndDo;\nEndDo;\n</code></pre> <p>Correct</p> <pre><code>// BanksToProcess - contains an array of banks\n\nMergedQuery = New Query(\"\n  |SELECT\n  | BankAccounts.Ref AS Account\n  |FROM\n  | Catalog.BankAccounts AS BankAccounts\n  |WHERE\n  | BankAccounts.Bank In(&amp;BanksToProcess)\");\n\nMergedQuery.SetParameter(\"BanksToProcess\", BanksToProcess);\nAccountsSelection = MergedQuery.Execute().Select();\nWhile AccountsSelection.Next() Do\n  ProcessBankAccounts(AccountsSelection.Account);\nEndDo;\n</code></pre>"},{"location":"diagnostics/CreateQueryInCycle/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/CreateQueryInCycle/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:CreateQueryInCycle-off\n// BSLLS:CreateQueryInCycle-on\n</code></pre>"},{"location":"diagnostics/CreateQueryInCycle/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"CreateQueryInCycle\": false\n</code></pre>"},{"location":"diagnostics/CyclomaticComplexity/","title":"Cyclomatic complexity (CyclomaticComplexity)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Critical</code> <code>Yes</code> <code>25</code> <code>brainoverload</code>"},{"location":"diagnostics/CyclomaticComplexity/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>complexityThreshold</code> <code>Integer</code> <code>Complexity threshold</code> <code>20</code> <code>checkModuleBody</code> <code>Boolean</code> <code>Check module body</code> <code>true</code>"},{"location":"diagnostics/CyclomaticComplexity/#Description","title":"Description","text":"<p>Cyclomatic complexity of the program code is one of the oldest metrics, it was first mentioned by Thomas McCab in 1976. Cyclomatic complexity shows the minimum number of required tests. The most effective way to reduce cyclomatic complexity is to decompose the code, split the methods into simpler ones, and also optimize logical expressions.</p> <p>Cyclomatic complexity increases by 1 for each of following constructions</p> <ul> <li><code>For ... To .. Do</code></li> <li><code>For each ... Of ... Do</code></li> <li><code>If ... Then</code></li> <li><code>ElsIf ... Then</code></li> <li><code>Else</code></li> <li><code>Try ... Except ... EndTry</code></li> <li><code>GoTo ~Label</code></li> <li>Binary operations <code>AND ... OR</code></li> <li>Ternary operator</li> <li><code>Procedure</code></li> <li><code>Function</code></li> </ul>"},{"location":"diagnostics/CyclomaticComplexity/#Examples","title":"Examples","text":"<pre><code>Function ServerModuleManager(Name)                                                      // 1\n    ObjectFounded = False;                                                              // 0\n                                                                                        // 0\n    NameParts = StrSplit(Name, \".\");                                                    // 0\n    If NameParts.Count() = 2 Then                                                       // 1\n                                                                                        // 0\n        TypeName = Upper(NameParts[0]);                                                 // 0\n        ObjectName = NameParts[1];                                                      // 0\n                                                                                        // 0\n        If TypeName = Upper(\"Constants\") Then                                           // 1\n            If Metadata.Constants.Find(ObjectName) &lt;&gt; Undefined Then                    // 1\n                ObjectFounded = True;                                                   // 0\n            EndIf;                                                                      // 0\n        ElsIf TypeName = Upper(\"InformationRegisters\") Then                            // 1\n            If Metadata.InformationRegisters.Find(ObjectName) &lt;&gt; Undefined Then         // 1\n                ObjectFounded = True;                                                   // 0\n            EndIf;                                                                      // 0\n        Else                                                                            // 1\n            ObjectFounded = False;                                                      // 0\n        EndIf;                                                                          // 0\n    EndIf;                                                                              // 0\n                                                                                        // 0\n    If Not ObjectFounded Then                                                           // 1\n        Raise \u0421\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0435\u0424\u0443\u043d\u043a\u0446\u0438\u0438\u041a\u043b\u0438\u0435\u043d\u0442\u0421\u0435\u0440\u0432\u0435\u0440.\u041f\u043e\u0434\u0441\u0442\u0430\u0432\u0438\u0442\u044c\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b\u0412\u0421\u0442\u0440\u043e\u043a\u0443(                  // 0\n            \u041d\u0421\u0442\u0440(\"ru = '\u041e\u0431\u044a\u0435\u043a\u0442 \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \"\"%1\"\" \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d,                             // 0\n                       |\u043b\u0438\u0431\u043e \u0434\u043b\u044f \u043d\u0435\u0433\u043e \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0443\u043b\u044f \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440\u0430.'\"), // 0\n            Name);                                                                      // 0\n    EndIf;                                                                              // 0\n    SetSafeMode(True);                                                                  // 0\n    Module = Eval(Name);                                                                // 0\n    F = ?(SomeCondition1, True, Undefined);                                             // 1\n    \u0410 = ?(SomeCondition1, True, ?(SomeCondition2, False, Undefined));                   // 2\n    M = True Or 7;                                                                      // 1\n    Return Module;                                                                      // 0\nEndFunction                                                                              // Total 12\n</code></pre>"},{"location":"diagnostics/CyclomaticComplexity/#Sources","title":"Sources","text":"<ul> <li>Cyclomatic Complexity PHP</li> <li>Cyclomatic Complexity (RU)</li> </ul>"},{"location":"diagnostics/CyclomaticComplexity/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/CyclomaticComplexity/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:CyclomaticComplexity-off\n// BSLLS:CyclomaticComplexity-on\n</code></pre>"},{"location":"diagnostics/CyclomaticComplexity/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"CyclomaticComplexity\": {\n\"complexityThreshold\": 20,\n\"checkModuleBody\": true\n}\n</code></pre>"},{"location":"diagnostics/DataExchangeLoading/","title":"There is no check for the attribute DataExchange.Load in the object's event handler (DataExchangeLoading)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Critical</code> <code>Yes</code> <code>5</code> <code>standard</code><code>badpractice</code><code>unpredictable</code>"},{"location":"diagnostics/DataExchangeLoading/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>findFirst</code> <code>Boolean</code> <code>Check should go first</code> <code>false</code>"},{"location":"diagnostics/DataExchangeLoading/#Description","title":"Description","text":"<p>All actions in the event-handler procedures BeforeWrite, OnWrite, BeforeDelete should be performed after checking for DataExchange.Load.</p> <p>This is necessary so that no business logic of the object is executed when writing the object through the data exchange mechanism, since it has already been executed for the object in the node where it was created. In this case, all data is loaded into the Information Base \"as is\", without distortion (changes), checks or any other actions that prevent data loading.</p>"},{"location":"diagnostics/DataExchangeLoading/#Examples","title":"Examples","text":"<p>Incorrect: <pre><code>Procedure BeforeWrite(Cancel) \n\n     If Not Cancel Then\n        RumMyFunction();\n    EndIf;\n\n    // other code\n    //\n    // ...\n\nEndProcedure\n</code></pre> Correct: <pre><code>Procedure BeforeWrite(Cancel) \n\n     If DataExchange.Load Then\n        Return;\n    EndIf;\n\n    // other code\n    //\n    // ...\nEndProcedure\n</code></pre></p>"},{"location":"diagnostics/DataExchangeLoading/#Sources","title":"Sources","text":"<ul> <li>Standard: Using DataExchange.Load in object handlers (RU)</li> <li>Handler OnWrite (RU)</li> <li>Handler BeforeWrite (RU)</li> <li>Handler BeforeDelete (RU)</li> </ul>"},{"location":"diagnostics/DataExchangeLoading/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/DataExchangeLoading/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:DataExchangeLoading-off\n// BSLLS:DataExchangeLoading-on\n</code></pre>"},{"location":"diagnostics/DataExchangeLoading/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"DataExchangeLoading\": {\n\"findFirst\": false\n}\n</code></pre>"},{"location":"diagnostics/DeletingCollectionItem/","title":"Deleting an item when iterating through collection using the operator \"For each ... In ... Do\" (DeletingCollectionItem)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>5</code> <code>standard</code><code>error</code>"},{"location":"diagnostics/DeletingCollectionItem/#Description","title":"Description","text":"<p>Don't delete elements of collection when iterating through collection using the operator For each ... In ... Do. Because it change index of next element.</p> <p>Example:</p> <pre><code>For each Element In Collection Do\n   Collection.Delete(Element)\nEndDo;\n</code></pre> <p>Alternatively, remove elements from the end:</p> <pre><code>IndexOf = Numbers.UBound();\nWhile IndexOf &gt;= 0 Do\n    If Numbers[IndexOf] &lt; 10 Then\n        Numbers.Delete(IndexOf);\n    EndIf;\n    IndexOf = IndexOf \u2013 1;\nEndDo;\n</code></pre>"},{"location":"diagnostics/DeletingCollectionItem/#Sources","title":"Sources","text":"<ul> <li>1C: Programming for Beginners. Development in the system \"1C: Enterprise 8.3\" (RU)</li> </ul>"},{"location":"diagnostics/DeletingCollectionItem/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/DeletingCollectionItem/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:DeletingCollectionItem-off\n// BSLLS:DeletingCollectionItem-on\n</code></pre>"},{"location":"diagnostics/DeletingCollectionItem/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"DeletingCollectionItem\": false\n</code></pre>"},{"location":"diagnostics/DeprecatedAttributes8312/","title":"Deprecated 8.3.12 platform features. (DeprecatedAttributes8312)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Info</code> <code>Yes</code> <code>1</code> <code>deprecated</code>"},{"location":"diagnostics/DeprecatedAttributes8312/#Description","title":"Description","text":"<p>The following items are deprecated and their use is not recommended since platform version 8.3.12:</p> <ul> <li>For the system enumeration <code>ChildFormItemsGroup</code> implemented the value <code>AlwaysHorizontal</code>, the value <code>ChildFormItemsGroup.Horizontal</code> is deprecated</li> <li><code>ChartLabelsOrientation</code> system enum is no longer available. Actual variant is <code>ChartLabelsOrientation</code></li> <li> <p>The following properties and methods of Chart object are obsolete and not recommended for use:</p> </li> <li> <p><code>ColorPalette</code>;</p> </li> <li><code>GradientPaletteStartColor</code>;</li> <li><code>GradientPaletteEndColor</code>;</li> <li><code>GradientPaletteMaxColors</code>;</li> <li><code>GetPalette()</code>;</li> <li> <p><code>SetPalette()</code>.</p> </li> <li> <p>Names of properties of the object <code>ChartPlotArea</code>:</p> </li> <li> <p><code>ShowScale</code></p> </li> <li><code>ScaleLines</code></li> <li> <p><code>ScaleColor</code></p> </li> <li> <p>Properties of <code>ChartPlotArea</code> object are obsolete, not recomended for use and supported only for backward compatibility:</p> </li> <li><code>ShowSeriesScaleLabels</code> - it is recommended to use <code>SeriesScale.ScaleLabelLocation</code></li> <li><code>ShowPointsScaleLabels</code> - it is recommended to use <code>PointsScale.ScaleLabelLocation</code></li> <li><code>ShowValuesScaleLabels</code> - it is recommended to use <code>ValuesScale.ScaleLabelLocation</code></li> <li><code>ShowScaleValueLines</code> - it is recommended to use <code>ValuesScale.GridLinesShowMode</code></li> <li><code>ValueScaleFormat</code> - it is recommended to use <code>ValuesScale.LabelFormat</code></li> <li> <p><code>LabelsOrientation</code> - it is recommended to use <code>PointsScale.LabelOrientation</code></p> </li> <li> <p>The <code>ShowLegend</code> and <code>ShowTitle</code> properties of the <code>Chart</code>, <code>GanttChart</code>, <code>PivotChart</code> objects are deprecated and deprecated for use</p> </li> <li>Global context method <code>ClearEventLog()</code> is deprecated and only applicable to logs that have <code>SQLite</code> format</li> </ul>"},{"location":"diagnostics/DeprecatedAttributes8312/#Sources","title":"Sources","text":"<p>Source: Platform 8.3.12 changelog (RU)</p>"},{"location":"diagnostics/DeprecatedAttributes8312/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/DeprecatedAttributes8312/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:DeprecatedAttributes8312-off\n// BSLLS:DeprecatedAttributes8312-on\n</code></pre>"},{"location":"diagnostics/DeprecatedAttributes8312/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"DeprecatedAttributes8312\": false\n</code></pre>"},{"location":"diagnostics/DeprecatedCurrentDate/","title":"Using of the deprecated method \"CurrentDate\" (DeprecatedCurrentDate)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>5</code> <code>standard</code><code>deprecated</code><code>unpredictable</code>"},{"location":"diagnostics/DeprecatedCurrentDate/#Description","title":"Description","text":"<p>The \"CurrentDate\" function has been deprecated. It is recommended to use the \"CurrentSessionDate\" function.</p>"},{"location":"diagnostics/DeprecatedCurrentDate/#Examples","title":"Examples","text":"<p>Incorrect:</p> <pre><code>OperationDate = CurrentDate();\n</code></pre> <p>Correct:</p> <pre><code>OperationDate = CurrentSessionDate();\n</code></pre>"},{"location":"diagnostics/DeprecatedCurrentDate/#Sources","title":"Sources","text":"<ul> <li>Reference: Metadata creation and change. Work in different timezones (RU)</li> </ul>"},{"location":"diagnostics/DeprecatedCurrentDate/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/DeprecatedCurrentDate/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:DeprecatedCurrentDate-off\n// BSLLS:DeprecatedCurrentDate-on\n</code></pre>"},{"location":"diagnostics/DeprecatedCurrentDate/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"DeprecatedCurrentDate\": false\n</code></pre>"},{"location":"diagnostics/DeprecatedFind/","title":"Using of the deprecated method \"Find\" (DeprecatedFind)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Minor</code> <code>Yes</code> <code>2</code> <code>deprecated</code>"},{"location":"diagnostics/DeprecatedFind/#Description","title":"Description","text":"<p>Method \"Find\" is deprecated. Use \"StrFind\" instead.</p>"},{"location":"diagnostics/DeprecatedFind/#Examples","title":"Examples","text":"<p>Incorrect:</p> <pre><code>If Find(Employee.Name, \"Boris\") &gt; 0 Then\n\nEndIf; \n</code></pre> <p>Correct:</p> <pre><code>If StrFind(Employee.Name, \"Boris\") &gt; 0 Then\n\nEndIf; \n</code></pre>"},{"location":"diagnostics/DeprecatedFind/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/DeprecatedFind/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:DeprecatedFind-off\n// BSLLS:DeprecatedFind-on\n</code></pre>"},{"location":"diagnostics/DeprecatedFind/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"DeprecatedFind\": false\n</code></pre>"},{"location":"diagnostics/DeprecatedMessage/","title":"Restriction on the use of deprecated \"Message\" method (DeprecatedMessage)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Minor</code> <code>Yes</code> <code>2</code> <code>standard</code><code>deprecated</code>"},{"location":"diagnostics/DeprecatedMessage/#Description","title":"Description","text":"<p>To display messages to the user in all cases, you should use the MessageUser object, even when the message is not \u201cbound\u201d to some form control. The Message method should not be used.</p> <p>When used the Standard Subsystems Library it is recommended use procedure MessageUser from common module CommonPurposeClientServer, which use object UserMessage.</p>"},{"location":"diagnostics/DeprecatedMessage/#Sources","title":"Sources","text":"<ul> <li>Standard: Limit use of the obsolete method Message (RU)</li> </ul>"},{"location":"diagnostics/DeprecatedMessage/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/DeprecatedMessage/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:DeprecatedMessage-off\n// BSLLS:DeprecatedMessage-on\n</code></pre>"},{"location":"diagnostics/DeprecatedMessage/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"DeprecatedMessage\": false\n</code></pre>"},{"location":"diagnostics/DeprecatedMethodCall/","title":"Deprecated methods should not be used (DeprecatedMethodCall)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Minor</code> <code>Yes</code> <code>3</code> <code>deprecated</code><code>design</code>"},{"location":"diagnostics/DeprecatedMethodCall/#Description","title":"Description","text":"<p>In cases where it becomes necessary to mark a procedure (function) as deprecated, the word \"Deprecated.\" Is placed in the first line of its description (rus. \"\u0423\u0441\u0442\u0430\u0440\u0435\u043b\u0430.\").</p> <p>Use or extension of deprecated methods should be avoided. Marking method as deprecated is a warning that means the method will be removed in future versions and left for temporary backward compatibility.</p> <p>Exception: It is possible to call deprecated methods from deprecated methods.</p>"},{"location":"diagnostics/DeprecatedMethodCall/#Examples","title":"Examples","text":"<pre><code>// Deprecated. Need to use NotDeprecatedProcedure.\nProcedure DeprecatedProcedure()\nEndProcedure\n\nDeprecatedProcedure(); // Triggering diagnostics\n</code></pre>"},{"location":"diagnostics/DeprecatedMethodCall/#Sources","title":"Sources","text":"<ul> <li>Standart: Procedures and functions description (RU)</li> <li>CWE-477 Use of Obsolete Function</li> </ul>"},{"location":"diagnostics/DeprecatedMethodCall/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/DeprecatedMethodCall/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:DeprecatedMethodCall-off\n// BSLLS:DeprecatedMethodCall-on\n</code></pre>"},{"location":"diagnostics/DeprecatedMethodCall/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"DeprecatedMethodCall\": false\n</code></pre>"},{"location":"diagnostics/DeprecatedMethods8310/","title":"Deprecated client application method. (DeprecatedMethods8310)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Info</code> <code>Yes</code> <code>1</code> <code>deprecated</code>"},{"location":"diagnostics/DeprecatedMethods8310/#Description","title":"Description","text":"<p>The following global context methods are deprecated and are not recommended since platform version 8.3.10:</p> <pre><code>SetShortApplicationCaption();\nGetShortApplicationCaption();\nSetClientApplicationCaption();\nGetClientApplicationCaption();\nClientApplicationBaseFontCurrentVariant();\nClientApplicationInterfaceCurrentVariant().\n</code></pre>"},{"location":"diagnostics/DeprecatedMethods8310/#Sources","title":"Sources","text":"<p>Source: Version 8.3.10 changelog (RU)</p>"},{"location":"diagnostics/DeprecatedMethods8310/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/DeprecatedMethods8310/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:DeprecatedMethods8310-off\n// BSLLS:DeprecatedMethods8310-on\n</code></pre>"},{"location":"diagnostics/DeprecatedMethods8310/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"DeprecatedMethods8310\": false\n</code></pre>"},{"location":"diagnostics/DeprecatedMethods8317/","title":"Using of deprecated platform 8.3.17 global methods (DeprecatedMethods8317)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Info</code> <code>Yes</code> <code>5</code> <code>deprecated</code>"},{"location":"diagnostics/DeprecatedMethods8317/#Description","title":"Description","text":"<p>In the global context of the <code>8.3.17</code> platform, created <code>ErrorProcessing</code> properties and <code>error management text parameters</code> that allow you to customize error texts.</p> <p>Global context methods are deprecated:</p> <ul> <li><code>BriefErrorDescription()</code></li> <li><code>DetailErrorDescription()</code></li> <li><code>ShowErrorInfo()</code></li> </ul> <p>You should use the same methods of the <code>ErrorProcessing</code> object instead.</p>"},{"location":"diagnostics/DeprecatedMethods8317/#Sources","title":"Sources","text":"<ul> <li>Source: Platform 8.3.17 changelog (RU)</li> </ul>"},{"location":"diagnostics/DeprecatedMethods8317/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/DeprecatedMethods8317/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:DeprecatedMethods8317-off\n// BSLLS:DeprecatedMethods8317-on\n</code></pre>"},{"location":"diagnostics/DeprecatedMethods8317/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"DeprecatedMethods8317\": false\n</code></pre>"},{"location":"diagnostics/DeprecatedTypeManagedForm/","title":"Deprecated ManagedForm type (DeprecatedTypeManagedForm)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Info</code> <code>Yes</code> <code>1</code> <code>standard</code><code>deprecated</code>"},{"location":"diagnostics/DeprecatedTypeManagedForm/#Description","title":"Description","text":"<p>Starting from the platform version 8.3.14, the \"ManagedForm\" type has been renamed, now it is correct to use the \"ClientApplicationForm\"</p>"},{"location":"diagnostics/DeprecatedTypeManagedForm/#Sources","title":"Sources","text":"<ul> <li>Source: Platform 8.3.16 changelog (RU)</li> </ul>"},{"location":"diagnostics/DeprecatedTypeManagedForm/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/DeprecatedTypeManagedForm/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:DeprecatedTypeManagedForm-off\n// BSLLS:DeprecatedTypeManagedForm-on\n</code></pre>"},{"location":"diagnostics/DeprecatedTypeManagedForm/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"DeprecatedTypeManagedForm\": false\n</code></pre>"},{"location":"diagnostics/DuplicateRegion/","title":"Duplicate regions (DuplicateRegion)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Info</code> <code>Yes</code> <code>1</code> <code>standard</code>"},{"location":"diagnostics/DuplicateRegion/#Description","title":"Description","text":"<p>All code should be structured and divided into sections (regions), each section should be present in the module in the singular.</p>"},{"location":"diagnostics/DuplicateRegion/#Examples","title":"Examples","text":""},{"location":"diagnostics/DuplicateRegion/#Sources","title":"Sources","text":"<ul> <li>Source: Standard: Module structure (RU)</li> </ul>"},{"location":"diagnostics/DuplicateRegion/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/DuplicateRegion/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:DuplicateRegion-off\n// BSLLS:DuplicateRegion-on\n</code></pre>"},{"location":"diagnostics/DuplicateRegion/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"DuplicateRegion\": false\n</code></pre>"},{"location":"diagnostics/DuplicateStringLiteral/","title":"Duplicate string literal (DuplicateStringLiteral)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Minor</code> <code>Yes</code> <code>1</code> <code>badpractice</code>"},{"location":"diagnostics/DuplicateStringLiteral/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>allowedNumberCopies</code> <code>Integer</code> <code>Allowed number of copies string literals</code> <code>2</code> <code>analyzeFile</code> <code>Boolean</code> <code>Analyze file</code> <code>false</code> <code>caseSensitive</code> <code>Boolean</code> <code>Case sensitive</code> <code>false</code> <code>minTextLength</code> <code>Integer</code> <code>Minimum length of a string literal (quoted)</code> <code>5</code>"},{"location":"diagnostics/DuplicateStringLiteral/#Description","title":"Description","text":"<p>It is bad form to use the same string literals multiple times in the same module or method: - it can lead to problems with further maintenance, if necessary, change the value - there is a high probability of missing one of the repetitions - it can be a consequence of \"copy-paste\" - the developer may have forgotten to change the code after copying a similar block of code.</p>"},{"location":"diagnostics/DuplicateStringLiteral/#Features-of-the-implementation-of-diagnostic","title":"Features of the implementation of diagnostic","text":"<ul> <li>Diagnostics with default settings does not respect the case of literal characters - the strings <code>AAAA</code> and <code>AaaA</code> are considered the same.</li> <li>You cannot specify a minimum parsed literal value less than the default. Short service literals are often used, which will generate unnecessary comments. For example: empty string \"\", selector numbers \"1\", \"0\", etc.</li> <li>You cannot reduce the allowed number of repetitions to less than 1, because it makes no practical sense.</li> </ul>"},{"location":"diagnostics/DuplicateStringLiteral/#Examples","title":"Examples","text":"<p>Bad code</p> <pre><code>Procedure Test(Param)\n    Result = \"Value\";\n    If Param = \"One\" Then\n        Result = Result + One(\"Value\");\n    Else\n        Result = Result + Two(\"Value\");\n    EndIf; \nEndProcedure\n</code></pre> <p>\u0421orrected:</p> <pre><code>Procedure Test(Param)\n    Result = \"Value\";\n    If Param = \"One\" Then\n        Result = Result + One(Result);\n    Else\n        Result = Result + Two(Result);\n    EndIf; \nEndProcedure\n</code></pre> <p>Bad code</p> <pre><code>Procedure Test2(Param)\n    Result = \"Value\";\n    If Param = \"One\" Then\n        Result = Result + One(\"Value\");\n    Else\n        Result = Result + Two(\"Value\");\n    EndIf; \nEndProcedure\n\nProcedure Test3(Param)\n    If Param = \"Five\" Then\n        Result = Result + Five(\"Value\");\n    EndIf; \nEndProcedure\n</code></pre> <p>\u0421orrected</p> <pre><code>Procedure Test2(Param)\n    Result = \"Value\";\n    If Param = \"One\" Then\n        Result = Result + One(StringValue());\n    Else\n        Result = Result + Two(StringValue());\n    EndIf; \nEndProcedure\n\nProcedure Test3(Param)\n    If Param = \"Five\" Then\n        Result = Result + Five(StringValue());\n    EndIf; \nEndProcedure\n\nFunction StringValue()\n   Return \"Value\";\nEndFunction\n</code></pre>"},{"location":"diagnostics/DuplicateStringLiteral/#Sources","title":"Sources","text":""},{"location":"diagnostics/DuplicateStringLiteral/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/DuplicateStringLiteral/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:DuplicateStringLiteral-off\n// BSLLS:DuplicateStringLiteral-on\n</code></pre>"},{"location":"diagnostics/DuplicateStringLiteral/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"DuplicateStringLiteral\": {\n\"allowedNumberCopies\": 2,\n\"analyzeFile\": false,\n\"caseSensitive\": false,\n\"minTextLength\": 5\n}\n</code></pre>"},{"location":"diagnostics/DuplicatedInsertionIntoCollection/","title":"Duplicate adding or pasting a value to a collection (DuplicatedInsertionIntoCollection)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>1</code> <code>brainoverload</code><code>suspicious</code><code>badpractice</code>"},{"location":"diagnostics/DuplicatedInsertionIntoCollection/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>isAllowedMethodADD</code> <code>Boolean</code> <code>Analysis of methods named \"Add\" is allowed - both useful and false issues may appear</code> <code>true</code>"},{"location":"diagnostics/DuplicatedInsertionIntoCollection/#Description","title":"Description","text":""},{"location":"diagnostics/DuplicatedInsertionIntoCollection/#Examples","title":"Examples","text":""},{"location":"diagnostics/DuplicatedInsertionIntoCollection/#Sources","title":"Sources","text":""},{"location":"diagnostics/DuplicatedInsertionIntoCollection/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/DuplicatedInsertionIntoCollection/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:DuplicatedInsertionIntoCollection-off\n// BSLLS:DuplicatedInsertionIntoCollection-on\n</code></pre>"},{"location":"diagnostics/DuplicatedInsertionIntoCollection/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"DuplicatedInsertionIntoCollection\": {\n\"isAllowedMethodADD\": true\n}\n</code></pre>"},{"location":"diagnostics/EmptyCodeBlock/","title":"Empty code block (EmptyCodeBlock)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>5</code> <code>badpractice</code><code>suspicious</code>"},{"location":"diagnostics/EmptyCodeBlock/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>commentAsCode</code> <code>Boolean</code> <code>Comment as code</code> <code>false</code>"},{"location":"diagnostics/EmptyCodeBlock/#Description","title":"Description","text":"<p>Empty blocks are a sign of a possible error:</p> <ul> <li>Forgot to implement</li> <li>Deleted content</li> </ul> <p>Empty blocks of code must be filled or removed.</p>"},{"location":"diagnostics/EmptyCodeBlock/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/EmptyCodeBlock/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:EmptyCodeBlock-off\n// BSLLS:EmptyCodeBlock-on\n</code></pre>"},{"location":"diagnostics/EmptyCodeBlock/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"EmptyCodeBlock\": {\n\"commentAsCode\": false\n}\n</code></pre>"},{"location":"diagnostics/EmptyRegion/","title":"The region should not be empty (EmptyRegion)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Info</code> <code>Yes</code> <code>1</code> <code>standard</code>"},{"location":"diagnostics/EmptyRegion/#Description","title":"Description","text":"<p>Module should not contain empty regions.</p>"},{"location":"diagnostics/EmptyRegion/#Examples","title":"Examples","text":"<pre><code>#Region EmptyRegion\n#EndRegion\n</code></pre>"},{"location":"diagnostics/EmptyRegion/#Sources","title":"Sources","text":"<ul> <li>Source: Standard: Module structure (RU)</li> </ul>"},{"location":"diagnostics/EmptyRegion/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/EmptyRegion/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:EmptyRegion-off\n// BSLLS:EmptyRegion-on\n</code></pre>"},{"location":"diagnostics/EmptyRegion/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"EmptyRegion\": false\n</code></pre>"},{"location":"diagnostics/EmptyStatement/","title":"Empty statement (EmptyStatement)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Info</code> <code>Yes</code> <code>1</code> <code>badpractice</code>"},{"location":"diagnostics/EmptyStatement/#Description","title":"Description","text":"<p>An empty statement is an operator consisting only of a semicolon (\";\"). Usually appears when:</p> <ul> <li>refactoring, when the developer deleted a part of the code, but forgot to delete the last \";\"</li> <li>\"copy paste\", when the developer pasted the copied code containing the final character \";\"</li> <li>inattentive, when the developer twice (or even more) times clicked the symbol \";\"</li> </ul> <p>An empty statement does not lead to code errors, but clutters it, reducing perception.</p>"},{"location":"diagnostics/EmptyStatement/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/EmptyStatement/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:EmptyStatement-off\n// BSLLS:EmptyStatement-on\n</code></pre>"},{"location":"diagnostics/EmptyStatement/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"EmptyStatement\": false\n</code></pre>"},{"location":"diagnostics/ExcessiveAutoTestCheck/","title":"Excessive AutoTest Check (ExcessiveAutoTestCheck)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Minor</code> <code>Yes</code> <code>1</code> <code>standard</code><code>deprecated</code>"},{"location":"diagnostics/ExcessiveAutoTestCheck/#Description","title":"Description","text":"<p>Standard 772, Interaction with Automated Testing Tools, has been canceled. In this regard, verification of the \"\u0410\u0432\u0442\u043e\u0422\u0435\u0441\u0442\" parameter in the form code is no longer necessary.</p>"},{"location":"diagnostics/ExcessiveAutoTestCheck/#Examples","title":"Examples","text":"<pre><code>If Parameters.Property(\"\u0410\u0432\u0442\u043e\u0422\u0435\u0441\u0442\") Then\n    Return;\nEndIf;\n</code></pre> <p>and in handler Filling in object module:</p> <pre><code>// Skip processing to get the form when sending the \"\u0410\u0432\u0442\u043e\u0422\u0435\u0441\u0442\" program.\nIf FillData = \"\u0410\u0432\u0442\u043e\u0422\u0435\u0441\u0442\" Then\n    Return;\nEndIf;\n</code></pre>"},{"location":"diagnostics/ExcessiveAutoTestCheck/#Sources","title":"Sources","text":"<ul> <li>\u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a: Standard: Modules. Part 3 (RU)</li> </ul>"},{"location":"diagnostics/ExcessiveAutoTestCheck/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/ExcessiveAutoTestCheck/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:ExcessiveAutoTestCheck-off\n// BSLLS:ExcessiveAutoTestCheck-on\n</code></pre>"},{"location":"diagnostics/ExcessiveAutoTestCheck/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"ExcessiveAutoTestCheck\": false\n</code></pre>"},{"location":"diagnostics/ExecuteExternalCode/","title":"Executing of external code on the server (ExecuteExternalCode)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Vulnerability</code> <code>BSL</code> <code>Critical</code> <code>Yes</code> <code>1</code> <code>error</code><code>standard</code>"},{"location":"diagnostics/ExecuteExternalCode/#Description","title":"Description","text":"<p>When you develop applications, note that not only execution of a code written in the Enterprise mode is unsafe, but also places, where the <code>Execute</code> or <code>Eval</code> methods are used to execute the code created based on parameters passed to server functions and procedures. It is forbidden to use the <code>Execute</code> and<code>Eval</code> methods in server methods of form modules, commands, objects, etc.</p> <p>This restriction is not applicable to the code being executed on the client</p>"},{"location":"diagnostics/ExecuteExternalCode/#Examples","title":"Examples","text":""},{"location":"diagnostics/ExecuteExternalCode/#Sources","title":"Sources","text":"<ul> <li>Restrictions on the use of Execute and Eval on the server (RU)</li> </ul>"},{"location":"diagnostics/ExecuteExternalCode/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/ExecuteExternalCode/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:ExecuteExternalCode-off\n// BSLLS:ExecuteExternalCode-on\n</code></pre>"},{"location":"diagnostics/ExecuteExternalCode/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"ExecuteExternalCode\": false\n</code></pre>"},{"location":"diagnostics/ExecuteExternalCodeInCommonModule/","title":"Executing of external code in a common module on the server (ExecuteExternalCodeInCommonModule)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Security Hotspot</code> <code>BSL</code> <code>Critical</code> <code>Yes</code> <code>15</code> <code>badpractice</code><code>standard</code>"},{"location":"diagnostics/ExecuteExternalCodeInCommonModule/#Description","title":"Description","text":"<p>When you develop applications, note that not only execution of a code written in the Enterprise mode is unsafe, but also places, where the <code>Execute</code> or <code>Eval</code> methods are used to execute the code created based on parameters passed to server functions and procedures. If the execution of arbitrary code Is necessary then it has to be preliminarily checked.</p> <p>This restriction is not applicable to the code being executed on the client.</p>"},{"location":"diagnostics/ExecuteExternalCodeInCommonModule/#Examples","title":"Examples","text":""},{"location":"diagnostics/ExecuteExternalCodeInCommonModule/#Sources","title":"Sources","text":"<ul> <li>Restrictions on the use of Execute and Eval on the server (RU)</li> </ul>"},{"location":"diagnostics/ExecuteExternalCodeInCommonModule/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/ExecuteExternalCodeInCommonModule/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:ExecuteExternalCodeInCommonModule-off\n// BSLLS:ExecuteExternalCodeInCommonModule-on\n</code></pre>"},{"location":"diagnostics/ExecuteExternalCodeInCommonModule/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"ExecuteExternalCodeInCommonModule\": false\n</code></pre>"},{"location":"diagnostics/ExportVariables/","title":"Ban export global module variables (ExportVariables)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>5</code> <code>standard</code><code>design</code><code>unpredictable</code>"},{"location":"diagnostics/ExportVariables/#Description","title":"Description","text":"<p>In most scenarios, we recommend that you do not use global variables and use other 1C:Enterprise script tools instead. Since monitoring the visibility (usage) areas of such variables is tricky, they often might cause issues that cannot be easily located.</p>"},{"location":"diagnostics/ExportVariables/#Examples","title":"Examples","text":"<pre><code>Variable FileConversion Export;\nProcedure BeforeWrite(Cancel)\n\n  If FileConversion Then\n  ...\n\nEndProcedure\n</code></pre> <p>We recommend that you use the AdditionalProperties object property for passing parameters between event subscription handlers and for passing parameters from external script to object module event handlers</p> <pre><code>Procedure BeforeWrite(Cancel)\n\n  If AdditionalProperties.Property(\"FileConversion\") Then \n  ...\n\nEndProcedure\n\n// script that calls the procedure\nFileObject.AdditionalProperties.Insert(\"FileConversion\", True);\nFileObject.Write();\n</code></pre>"},{"location":"diagnostics/ExportVariables/#Sources","title":"Sources","text":"<p>Standard: Using global variables in modules (RU)</p>"},{"location":"diagnostics/ExportVariables/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/ExportVariables/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:ExportVariables-off\n// BSLLS:ExportVariables-on\n</code></pre>"},{"location":"diagnostics/ExportVariables/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"ExportVariables\": false\n</code></pre>"},{"location":"diagnostics/ExtraCommas/","title":"Commas without a parameter at the end of a method call (ExtraCommas)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>1</code> <code>standard</code><code>badpractice</code>"},{"location":"diagnostics/ExtraCommas/#Description","title":"Description","text":"<p>Do not include a comma at the end of a method call without specifying a parameter. It is difficult to understand and does not carry important information. Not required parameters under the principle of Occam's Razor \"Do not multiply entities without need\", since the \"hanging\" comma is not very informative.</p> <p>Bad:</p> <pre><code>Result = Action (P1, P2 ,,);\n</code></pre> <p>Good:</p> <pre><code>Result = Action (P1, P2);\n</code></pre>"},{"location":"diagnostics/ExtraCommas/#Sources","title":"Sources","text":"<ul> <li>Code-writing conventions. Parameters of procedures and functions. Item 7.</li> </ul>"},{"location":"diagnostics/ExtraCommas/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/ExtraCommas/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:ExtraCommas-off\n// BSLLS:ExtraCommas-on\n</code></pre>"},{"location":"diagnostics/ExtraCommas/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"ExtraCommas\": false\n</code></pre>"},{"location":"diagnostics/FieldsFromJoinsWithoutIsNull/","title":"No NULL checks for fields from joined tables (FieldsFromJoinsWithoutIsNull)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code><code>OS</code> <code>Critical</code> <code>No</code> <code>2</code> <code>sql</code><code>suspicious</code><code>unpredictable</code>"},{"location":"diagnostics/FieldsFromJoinsWithoutIsNull/#Description","title":"Description","text":"<p>Diagnostics checks fields from left, right, full joins that are not checked with <code>ISNULL()</code> or <code>IS NOT NULL</code>  or <code>NOT IS NULL</code> .</p> <p>Queries cannot use attributes from left-join or right-join tables without checking the values for <code>NULL</code>.  Such a call can lead to errors if the join condition is not met and there are no matching records in the left or right table.  As a result, as a result of executing the query, you may receive unexpected data and the system may behave in an incorrect way.</p> <p>It is important to remember that any comparison of the value <code>NULL</code> with any other expression is always false, even the comparison of <code>NULL</code> and <code>NULL</code> is always false.  The following are examples of such incorrect comparisons.  It is correct to compare with <code>NULL</code> - operator <code>IS NULL</code> or function <code>ISNULL()</code>.</p> <p>Left \\ right joins are often used, although the data allows an inner join without checking for <code>NULL</code>.</p> <p>Additional checks of field values can be performed in the 1C code, and not in the query text. This makes it difficult to read the code and refactor the code, because the context of the access to the field has to be considered in several places.  It should be remembered that simple checks in a query are performed a little faster and easier than in interpreted 1C code.</p> <p>These problems are the most common mistakes made by 1C developers of all skill levels.</p>"},{"location":"diagnostics/FieldsFromJoinsWithoutIsNull/#Examples","title":"Examples","text":"<p>Example showing NULL comparison problems - joining 2 tables incorrectly and showing different comparison methods <pre><code>SELECT\n  CASE\n    WHEN LeftTable.Fld2 = 0 THEN \"Equals 0 - does not work\"\n    WHEN LeftTable.Fld2 &lt;&gt; 0 THEN \"NOT Equals 0 - does not work\"\n    WHEN LeftTable.Fld2 = NULL THEN \"Equals NULL - does not work\"\n    WHEN LeftTable.Fld2 IS NULL THEN \"IS NULL - it works\"\n    WHEN ISNULL(LeftTable.Fld2, 0) = 0  THEN \"ISNULL() - and this works too\"\n    ELSE \"else\"\n  END\n\u0418\u0417\n  First AS First\n  LEFT JOIN LeftTable AS LeftTable\n  ON FALSE\n</code></pre></p> <p>Suspicious code for accessing an joined table attribute <pre><code>\u0412\u042b\u0411\u0420\u0410\u0422\u042c \n  \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b\u041f\u0440\u043e\u0434\u0430\u0436\u0438.\u0421\u0441\u044b\u043b\u043a\u0430 \u041a\u0410\u041a \u0414\u043e\u043a\u041f\u0440\u043e\u0434\u0430\u0436\u0438,\n  \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u041f\u0440\u043e\u0434\u0430\u0436\u0438.\u0421\u0443\u043c\u043c\u0430 \u041a\u0410\u041a \u0421\u0443\u043c\u043c\u0430 // \u0437\u0434\u0435\u0441\u044c \u043e\u0448\u0438\u0431\u043a\u0430\n\u0418\u0417 \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442.\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f\u0422\u043e\u0432\u0430\u0440\u043e\u0432\u0423\u0441\u043b\u0443\u0433 \u041a\u0410\u041a \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b\u041f\u0440\u043e\u0434\u0430\u0436\u0438\n\u041b\u0415\u0412\u041e\u0415 \u0421\u041e\u0415\u0414\u0418\u041d\u0415\u041d\u0418\u0415  \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u041d\u0430\u043a\u043e\u043f\u043b\u0435\u043d\u0438\u044f.\u041f\u0440\u043e\u0434\u0430\u0436\u0438 \u041a\u0410\u041a \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u041f\u0440\u043e\u0434\u0430\u0436\u0438\n\u041f\u041e \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b\u041f\u0440\u043e\u0434\u0430\u0436\u0438.\u0421\u0441\u044b\u043b\u043a\u0430 = \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u041f\u0440\u043e\u0434\u0430\u0436\u0438.\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\n</code></pre> Correct <pre><code>\u0412\u042b\u0411\u0420\u0410\u0422\u042c \n  \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b\u041f\u0440\u043e\u0434\u0430\u0436\u0438.\u0421\u0441\u044b\u043b\u043a\u0430 \u041a\u0410\u041a \u0414\u043e\u043a\u041f\u0440\u043e\u0434\u0430\u0436\u0438,\n  \u0415\u0441\u0442\u044cNULL(\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u041f\u0440\u043e\u0434\u0430\u0436\u0438.\u0421\u0443\u043c\u043c\u0430, 0) \u041a\u0410\u041a \u0421\u0443\u043c\u043c\u0430\n\u0418\u0417 \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442.\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f\u0422\u043e\u0432\u0430\u0440\u043e\u0432\u0423\u0441\u043b\u0443\u0433 \u041a\u0410\u041a \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b\u041f\u0440\u043e\u0434\u0430\u0436\u0438\n\u041b\u0415\u0412\u041e\u0415 \u0421\u041e\u0415\u0414\u0418\u041d\u0415\u041d\u0418\u0415  \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u041d\u0430\u043a\u043e\u043f\u043b\u0435\u043d\u0438\u044f.\u041f\u0440\u043e\u0434\u0430\u0436\u0438 \u041a\u0410\u041a \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u041f\u0440\u043e\u0434\u0430\u0436\u0438\n\u041f\u041e \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b\u041f\u0440\u043e\u0434\u0430\u0436\u0438.\u0421\u0441\u044b\u043b\u043a\u0430 = \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u041f\u0440\u043e\u0434\u0430\u0436\u0438.\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\n</code></pre> Also correct: <pre><code>\u0412\u042b\u0411\u0420\u0410\u0422\u042c \n  \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b\u041f\u0440\u043e\u0434\u0430\u0436\u0438.\u0421\u0441\u044b\u043b\u043a\u0430 \u041a\u0410\u041a \u0414\u043e\u043a\u041f\u0440\u043e\u0434\u0430\u0436\u0438,\n  \u0412\u042b\u0411\u041e\u0420 \u041a\u041e\u0413\u0414\u0410 \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u041f\u0440\u043e\u0434\u0430\u0436\u0438.\u0421\u0443\u043c\u043c\u0430 \u0415\u0441\u0442\u044c NULL \u0422\u041e\u0413\u0414\u0410 0\n  \u0418\u041d\u0410\u0427\u0415  \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u041f\u0440\u043e\u0434\u0430\u0436\u0438.\u0421\u0443\u043c\u043c\u0430 \n  \u041a\u041e\u041d\u0415\u0426 \u041a\u0410\u041a \u0421\u0443\u043c\u043c\u0430\n\u0418\u0417 \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442.\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f\u0422\u043e\u0432\u0430\u0440\u043e\u0432\u0423\u0441\u043b\u0443\u0433 \u041a\u0410\u041a \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b\u041f\u0440\u043e\u0434\u0430\u0436\u0438\n\u041b\u0415\u0412\u041e\u0415 \u0421\u041e\u0415\u0414\u0418\u041d\u0415\u041d\u0418\u0415  \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u041d\u0430\u043a\u043e\u043f\u043b\u0435\u043d\u0438\u044f.\u041f\u0440\u043e\u0434\u0430\u0436\u0438 \u041a\u0410\u041a \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u041f\u0440\u043e\u0434\u0430\u0436\u0438\n\u041f\u041e \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b\u041f\u0440\u043e\u0434\u0430\u0436\u0438.\u0421\u0441\u044b\u043b\u043a\u0430 = \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u041f\u0440\u043e\u0434\u0430\u0436\u0438.\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\n</code></pre> Possible variant <pre><code>\u0412\u042b\u0411\u0420\u0410\u0422\u042c \n  \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b\u041f\u0440\u043e\u0434\u0430\u0436\u0438.\u0421\u0441\u044b\u043b\u043a\u0430 \u041a\u0410\u041a \u0414\u043e\u043a\u041f\u0440\u043e\u0434\u0430\u0436\u0438,\n  \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u041f\u0440\u043e\u0434\u0430\u0436\u0438.\u0421\u0443\u043c\u043c\u0430 \u041a\u0410\u041a \u0421\u0443\u043c\u043c\u0430\n\u0418\u0417 \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442.\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f\u0422\u043e\u0432\u0430\u0440\u043e\u0432\u0423\u0441\u043b\u0443\u0433 \u041a\u0410\u041a \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b\u041f\u0440\u043e\u0434\u0430\u0436\u0438\n\u041b\u0415\u0412\u041e\u0415 \u0421\u041e\u0415\u0414\u0418\u041d\u0415\u041d\u0418\u0415  \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u041d\u0430\u043a\u043e\u043f\u043b\u0435\u043d\u0438\u044f.\u041f\u0440\u043e\u0434\u0430\u0436\u0438 \u041a\u0410\u041a \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u041f\u0440\u043e\u0434\u0430\u0436\u0438\n\u041f\u041e \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b\u041f\u0440\u043e\u0434\u0430\u0436\u0438.\u0421\u0441\u044b\u043b\u043a\u0430 = \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u041f\u0440\u043e\u0434\u0430\u0436\u0438.\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\n\u0413\u0414\u0415\n    \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u041f\u0440\u043e\u0434\u0430\u0436\u0438.\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0415\u0421\u0422\u042c \u041d\u0415 NULL\n    //\u0438\u043b\u0438 \u041d\u0415 \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u041f\u0440\u043e\u0434\u0430\u0436\u0438.\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0415\u0421\u0422\u042c NULL\n</code></pre> The last one is not the best, because it actually emulates an inner join. It is more correct to explicitly specify <code>INNER JOIN</code> instead of using a left join with a <code>IS NOT NULL</code> or <code>NOT IS NULL</code> check</p>"},{"location":"diagnostics/FieldsFromJoinsWithoutIsNull/#Sources","title":"Sources","text":"<ul> <li>Standard: Using the ISNULL function (RU)</li> <li>Guidelines: The concept of \"empty\" values (RU)<ul> <li>Guidelines: What is the difference between a value of type Undefined and a value of type Null? (RU)</li> </ul> </li> <li>Methodical recommendations: Peculiarities of communication with the virtual table of residuals (RU)</li> <li>Standard: Sorting by query field that can potentially contain NULL. The article \"Ordering query results\" (RU)</li> <li>Methodological recommendations: Fields of a hierarchical directory can contain NULL (RU)<ul> <li>Guidelines: How to get the records of a hierarchical table and arrange them in the order of the hierarchy (RU)</li> </ul> </li> <li>Online book \"1C: Enterprise Query Language\": How to get data from different tables for the same field (RU)</li> </ul>"},{"location":"diagnostics/FieldsFromJoinsWithoutIsNull/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/FieldsFromJoinsWithoutIsNull/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:FieldsFromJoinsWithoutIsNull-off\n// BSLLS:FieldsFromJoinsWithoutIsNull-on\n</code></pre>"},{"location":"diagnostics/FieldsFromJoinsWithoutIsNull/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"FieldsFromJoinsWithoutIsNull\": false\n</code></pre>"},{"location":"diagnostics/ForbiddenMetadataName/","title":"Metadata object has a forbidden name (ForbiddenMetadataName)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Blocker</code> <code>Yes</code> <code>30</code> <code>standard</code><code>sql</code><code>design</code>"},{"location":"diagnostics/ForbiddenMetadataName/#Description","title":"Description","text":"<p>It is forbidden to use the names of metadata objects (and their attributes and tabular sections), which are used when naming query tables (for example, Document, Catalog).</p> <p>Using such names can lead to errors in the execution of the query, and also make it difficult to use the query designer and reduce the clarity of the query text.</p>"},{"location":"diagnostics/ForbiddenMetadataName/#Examples","title":"Examples","text":"<p>Wrong name - <code>Catalog.Catalog</code> - <code>Catalog.MyCatalog.Attribute.Document</code> - <code>InformationRegister.MyRegister.Dimenssion.Documents</code></p>"},{"location":"diagnostics/ForbiddenMetadataName/#Sources","title":"Sources","text":"<ul> <li>Standard: Organization of data storage (RU). Name, Synonym, Comment</li> </ul>"},{"location":"diagnostics/ForbiddenMetadataName/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/ForbiddenMetadataName/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:ForbiddenMetadataName-off\n// BSLLS:ForbiddenMetadataName-on\n</code></pre>"},{"location":"diagnostics/ForbiddenMetadataName/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"ForbiddenMetadataName\": false\n</code></pre>"},{"location":"diagnostics/FormDataToValue/","title":"FormDataToValue method call (FormDataToValue)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Info</code> <code>Yes</code> <code>5</code> <code>badpractice</code>"},{"location":"diagnostics/FormDataToValue/#Description","title":"Description","text":"<p>In most cases, you should use the FormAttributeToValue method, instead of the FormDataToValue.</p> <p>The recommendation is due to considerations of unification of the application code and the fact that the syntax of the FormAttributeToValue is simpler than FormDataToValue.</p>"},{"location":"diagnostics/FormDataToValue/#Examples","title":"Examples","text":"<pre><code>Procedure Test()\n    Form=Doc.GetForm(\"DocumentForm\");\n    FD = Form.FormDataToValue(Object, Type(\"ValueTable\"));\nEndProcedure\n</code></pre>"},{"location":"diagnostics/FormDataToValue/#Sources","title":"Sources","text":"<p>Source: Using of FormAttributeToValue and FormDataToValue methods (RU)</p>"},{"location":"diagnostics/FormDataToValue/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/FormDataToValue/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:FormDataToValue-off\n// BSLLS:FormDataToValue-on\n</code></pre>"},{"location":"diagnostics/FormDataToValue/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"FormDataToValue\": false\n</code></pre>"},{"location":"diagnostics/FullOuterJoinQuery/","title":"Using of \"FULL OUTER JOIN\" in queries (FullOuterJoinQuery)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>10</code> <code>sql</code><code>standard</code><code>performance</code>"},{"location":"diagnostics/FullOuterJoinQuery/#Description","title":"Description","text":"<p>You should not use FULL OUTER JOIN in queries, especially in PostgreSQL database. It is better to rewrite query without FULL OUTER JOIN.</p>"},{"location":"diagnostics/FullOuterJoinQuery/#Examples","title":"Examples","text":"<p>Query below will lead to high load on PostgreSQL database. <pre><code>Procedure Test1()\n\n    Query = New Query;\n    Query.Text = \"SELECT\n                   |    Goods.Product AS Product,\n                   |    ISNULL(SalesPlan.Sum, 0) AS PlanSum,\n                   |    ISNULL(SalesActual.Sum, 0) AS ActualSum\n                   |FROM\n                   |    Goods AS Goods\n                   |        LEFT JOIN SalesPlan AS SalesPlan\n                   |            FULL OUTER JOIN SalesActual AS SalesActual // Should trigger here\n                   |            ON SalesPlan.Product = SalesActual.Product\n                   |        ON Goods.Product = SalesPlan.Product\";\n\nEndProcedure\n</code></pre></p>"},{"location":"diagnostics/FullOuterJoinQuery/#Sources","title":"Sources","text":"<ul> <li>Restricting the use of the \"FULL OUTER JOINT\" construct in queries (RU)</li> <li>Administrator's Guide: Peculiarities of Using PostgreSQL (RU)</li> </ul>"},{"location":"diagnostics/FullOuterJoinQuery/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/FullOuterJoinQuery/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:FullOuterJoinQuery-off\n// BSLLS:FullOuterJoinQuery-on\n</code></pre>"},{"location":"diagnostics/FullOuterJoinQuery/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"FullOuterJoinQuery\": false\n</code></pre>"},{"location":"diagnostics/FunctionNameStartsWithGet/","title":"Function name shouldn't start with \"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\" (FunctionNameStartsWithGet)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Info</code> <code>No</code> <code>3</code> <code>standard</code>"},{"location":"diagnostics/FunctionNameStartsWithGet/#Description","title":"Description","text":"<p>In the name of the function, the word get superfluous since function by definition returns a value.</p>"},{"location":"diagnostics/FunctionNameStartsWithGet/#Examples","title":"Examples","text":"<pre><code>// Incorrect: \nFunction GetNameByCode()\n\n// Correct: \nFunction NameByCode()\n</code></pre>"},{"location":"diagnostics/FunctionNameStartsWithGet/#Sources","title":"Sources","text":"<ul> <li>Source: Standard: Names of procedures and functions c 6.1 (RU)</li> </ul>"},{"location":"diagnostics/FunctionNameStartsWithGet/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/FunctionNameStartsWithGet/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:FunctionNameStartsWithGet-off\n// BSLLS:FunctionNameStartsWithGet-on\n</code></pre>"},{"location":"diagnostics/FunctionNameStartsWithGet/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"FunctionNameStartsWithGet\": false\n</code></pre>"},{"location":"diagnostics/FunctionOutParameter/","title":"Out function parameter (FunctionOutParameter)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>No</code> <code>10</code> <code>design</code>"},{"location":"diagnostics/FunctionOutParameter/#Description","title":"Description","text":"<p>The function must have no output parameters. All output must be in the return value. If you need to return multiple values, you should use such types as Structure, Array, etc.</p>"},{"location":"diagnostics/FunctionOutParameter/#Examples","title":"Examples","text":"<pre><code>// Incorrect:\nServiceURL = \"\";\nUserName = \"\";\nUserPassword = \"\";\n\nFillConnectionParameters(ServiceURL, UserName, UserPassword);\n\n// Correct:\nConnectionParameters = NewConnectionParameters();\n// Returned value - Structure:\n//     Service URL  - String\n//     UserName     - String\n//     UserPassword - String\n</code></pre>"},{"location":"diagnostics/FunctionOutParameter/#Sources","title":"Sources","text":""},{"location":"diagnostics/FunctionOutParameter/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/FunctionOutParameter/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:FunctionOutParameter-off\n// BSLLS:FunctionOutParameter-on\n</code></pre>"},{"location":"diagnostics/FunctionOutParameter/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"FunctionOutParameter\": false\n</code></pre>"},{"location":"diagnostics/FunctionReturnsSamePrimitive/","title":"The function always returns the same primitive value (FunctionReturnsSamePrimitive)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>5</code> <code>design</code><code>badpractice</code>"},{"location":"diagnostics/FunctionReturnsSamePrimitive/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>skipAttachable</code> <code>Boolean</code> <code>Ignore attachable methods</code> <code>true</code> <code>caseSensitiveForString</code> <code>Boolean</code> <code>Case sensitive for strings</code> <code>false</code>"},{"location":"diagnostics/FunctionReturnsSamePrimitive/#Description","title":"Description","text":"<p>A function should not return the same primitive value. If the result of the function isn't use into code, then you need the function rewrite to the procedure.</p>"},{"location":"diagnostics/FunctionReturnsSamePrimitive/#Examples","title":"Examples","text":"<p>Bad: <pre><code>Function CheckString(Val RowTable)\n\n    If ItsGoodString(RowTable) Then\n        ActionGood();\n        Return True;\n    ElsIf ItsNodBadString(RowTable) Then\n        ActionNoBad();\n        Return True;\n     Else\n        Return True;\n    EndIf;\n\nEndFunction\n</code></pre></p> <p>Good: <pre><code>Function CheckString(Val RowTable)\n\n    If ItsGoodString(RowTable) Then\n        ActionGood();\n    ElsIf ItsNodBadString(RowTable) Then\n        ActionNoBad();\n    Else\n        ActionElse();\n    EndIf;\n\nEndFunction\n</code></pre></p>"},{"location":"diagnostics/FunctionReturnsSamePrimitive/#Nuances","title":"Nuances","text":"<p>Attachable functions excluded from the scan. Example: <pre><code>Function Attachable_RandomAction(Command)\n\n    If ValueIsFilled(CurrentDate) Then\n        Return Undefined;\n    EndIf;\n\n    Return Undefined;\n\nEndFunction\n</code></pre></p>"},{"location":"diagnostics/FunctionReturnsSamePrimitive/#Sources","title":"Sources","text":""},{"location":"diagnostics/FunctionReturnsSamePrimitive/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/FunctionReturnsSamePrimitive/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:FunctionReturnsSamePrimitive-off\n// BSLLS:FunctionReturnsSamePrimitive-on\n</code></pre>"},{"location":"diagnostics/FunctionReturnsSamePrimitive/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"FunctionReturnsSamePrimitive\": {\n\"skipAttachable\": true,\n\"caseSensitiveForString\": false\n}\n</code></pre>"},{"location":"diagnostics/FunctionShouldHaveReturn/","title":"The function should have return (FunctionShouldHaveReturn)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>10</code> <code>suspicious</code><code>unpredictable</code>"},{"location":"diagnostics/FunctionShouldHaveReturn/#Description","title":"Description","text":"<p><code>Function</code> differs from a <code>Procedure</code> only that it necessarily returns a value and can be used in expressions.</p> <p>Based on the above-mentioned, a <code>function</code> which does not contain a return is itself erroneous. Corrections required:</p> <ul> <li>implement return if the implemented method is a function</li> <li>rewrite function to procedure if return is not needed</li> </ul>"},{"location":"diagnostics/FunctionShouldHaveReturn/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/FunctionShouldHaveReturn/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:FunctionShouldHaveReturn-off\n// BSLLS:FunctionShouldHaveReturn-on\n</code></pre>"},{"location":"diagnostics/FunctionShouldHaveReturn/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"FunctionShouldHaveReturn\": false\n</code></pre>"},{"location":"diagnostics/GetFormMethod/","title":"GetForm method call (GetFormMethod)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>15</code> <code>error</code>"},{"location":"diagnostics/GetFormMethod/#Description","title":"Description","text":"<p>To open forms, use the OpenForm global context method (when using the 1C: Enterprise 8.2 platform version and earlier versions, also use OpenFormModal). An alternative method, using the GetForm method, is not recommended.</p>"},{"location":"diagnostics/GetFormMethod/#Examples","title":"Examples","text":"<pre><code>Procedure Test()\n    Doc = Documents.PlanOperation.CreateDocument();\n    Form = Doc.GetForm(\"DocumentForm\"); // here\nEndProcedure\n</code></pre> <pre><code>Procedure Test2()\n    Form = GetForm(\"CommonForms.MyForm\");\nEndProcedure\n</code></pre>"},{"location":"diagnostics/GetFormMethod/#Sources","title":"Sources","text":"<p>Source: Development standards (RU)</p>"},{"location":"diagnostics/GetFormMethod/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/GetFormMethod/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:GetFormMethod-off\n// BSLLS:GetFormMethod-on\n</code></pre>"},{"location":"diagnostics/GetFormMethod/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"GetFormMethod\": false\n</code></pre>"},{"location":"diagnostics/GlobalContextMethodCollision8312/","title":"Global context method names collision (GlobalContextMethodCollision8312)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code><code>OS</code> <code>Blocker</code> <code>Yes</code> <code>10</code> <code>error</code><code>unpredictable</code>"},{"location":"diagnostics/GlobalContextMethodCollision8312/#Description","title":"Description","text":"<p>The platform version <code>8.3.12</code> implements new methods of the global context, which may coincide with the configuration functions of the application solution.</p> Russian variant English variant \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c\u0411\u0438\u0442 CheckBit \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c\u041f\u043e\u0411\u0438\u0442\u043e\u0432\u043e\u0439\u041c\u0430\u0441\u043a\u0435 CheckByBitMask \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u0411\u0438\u0442 SetBit \u041f\u043e\u0431\u0438\u0442\u043e\u0432\u043e\u0435\u0418 BitwiseAnd \u041f\u043e\u0431\u0438\u0442\u043e\u0432\u043e\u0435\u0418\u043b\u0438 BitwiseOr \u041f\u043e\u0431\u0438\u0442\u043e\u0432\u043e\u0435\u041d\u0435 BitwiseNot \u041f\u043e\u0431\u0438\u0442\u043e\u0432\u043e\u0435\u0418\u041d\u0435 BitwiseAndNot \u041f\u043e\u0431\u0438\u0442\u043e\u0432\u043e\u0435\u0418\u0441\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435\u0418\u043b\u0438 BitwiseXor \u041f\u043e\u0431\u0438\u0442\u043e\u0432\u044b\u0439\u0421\u0434\u0432\u0438\u0433\u0412\u043b\u0435\u0432\u043e BitwiseShiftLeft \u041f\u043e\u0431\u0438\u0442\u043e\u0432\u044b\u0439\u0421\u0434\u0432\u0438\u0433\u0412\u043f\u0440\u0430\u0432\u043e BitwiseShiftRight <p>The configuration functions must either be renamed or deleted, replacing the call to them with the methods of the global context.</p>"},{"location":"diagnostics/GlobalContextMethodCollision8312/#Examples","title":"Examples","text":""},{"location":"diagnostics/GlobalContextMethodCollision8312/#Sources","title":"Sources","text":"<ul> <li>Transfer of configurations to the 1C: Enterprise 8.3 platform without compatibility mode with version 8.2 (RU)</li> </ul>"},{"location":"diagnostics/GlobalContextMethodCollision8312/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/GlobalContextMethodCollision8312/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:GlobalContextMethodCollision8312-off\n// BSLLS:GlobalContextMethodCollision8312-on\n</code></pre>"},{"location":"diagnostics/GlobalContextMethodCollision8312/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"GlobalContextMethodCollision8312\": false\n</code></pre>"},{"location":"diagnostics/IdenticalExpressions/","title":"There are identical sub-expressions to the left and to the right of the \"foo\" operator (IdenticalExpressions)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>5</code> <code>suspicious</code>"},{"location":"diagnostics/IdenticalExpressions/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>popularDivisors</code> <code>String</code> <code>There are popular division operations used for quantification (e.g. 60 or 1024 for time and bytes). Use comma-separated values which'll be ignored on both sides of division operation</code> <code>60, 1024</code>"},{"location":"diagnostics/IdenticalExpressions/#Description","title":"Description","text":"<p>The analyzer found a code fragment that most probably has a logic error. There is an operator (, &lt;=, &gt;=, =, &lt;&gt;, AND, OR, -, /) in the program text to the left and to the right of which there are identical subexpressions.</p>"},{"location":"diagnostics/IdenticalExpressions/#Examples","title":"Examples","text":"<pre><code>If Summ &lt;&gt; 0 AND Summ &lt;&gt; 0 Then\n\n    // TODO\n\nEndIf;\n</code></pre> <p>In this case, the <code>AND</code> operator is surrounded by identical subexpressions <code>Summ &lt;&gt; 0</code> and it allows us to detect an error made through inattention. The correct code that will not look suspicious to the analyzer looks in the following way:</p> <pre><code>If Summ &lt;&gt; 0 AND SummNDS &lt;&gt; 0 Then\n\n    // TODO\n\nEndIf;\n</code></pre> <p>OR</p> <pre><code>If Summ &lt;&gt; 0 Then\n\n    // TODO\n\nEndIf;\n</code></pre>"},{"location":"diagnostics/IdenticalExpressions/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/IdenticalExpressions/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:IdenticalExpressions-off\n// BSLLS:IdenticalExpressions-on\n</code></pre>"},{"location":"diagnostics/IdenticalExpressions/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"IdenticalExpressions\": {\n\"popularDivisors\": \"60, 1024\"\n}\n</code></pre>"},{"location":"diagnostics/IfConditionComplexity/","title":"Usage of complex expressions in the \"If\" condition (IfConditionComplexity)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Minor</code> <code>Yes</code> <code>5</code> <code>brainoverload</code>"},{"location":"diagnostics/IfConditionComplexity/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>maxIfConditionComplexity</code> <code>Integer</code> <code>Acceptable number of logical expressions in operator If condition</code> <code>3</code>"},{"location":"diagnostics/IfConditionComplexity/#Description","title":"Description","text":"<p>Complex expressions (with more than 3 boolean constructs) must be extracted to separated method or variable.</p>"},{"location":"diagnostics/IfConditionComplexity/#Examples","title":"Examples","text":"<p>Bad:</p> <pre><code>If Id = \"Expr1\"\n    Or Id = \"Expr2\"\n    Or Id = \"Expr3\"\n    Or Id = \"Expr4\"\n    Or Id = \"Expr5\"\n    Or Id = \"Expr6\"\n    Or Id = \"Expr7\"\n    Or Id = \"Expr8\"\n    Or Id = \"Expr9\" Then\n\n   doSomeWork();\n\nEndIf; \n</code></pre> <p>Good:</p> <pre><code>If IsCorrectId(Id) Then\n   doSomeWork();\n\u041a\u043e\u043d\u0435\u0446\u0415\u0441\u043b\u0438;\n\nFunction IsCorrectId(Id)\n\n    Return Id = \"Expr1\"\n            Or Id = \"Expr2\"\n            Or Id = \"Expr3\"\n            Or Id = \"Expr4\"\n            Or Id = \"Expr5\"\n            Or Id = \"Expr6\"\n            Or Id = \"Expr7\"\n            Or Id = \"Expr8\"\n            Or Id = \"Expr9\";\n\nEndFunction\n</code></pre>"},{"location":"diagnostics/IfConditionComplexity/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/IfConditionComplexity/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:IfConditionComplexity-off\n// BSLLS:IfConditionComplexity-on\n</code></pre>"},{"location":"diagnostics/IfConditionComplexity/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"IfConditionComplexity\": {\n\"maxIfConditionComplexity\": 3\n}\n</code></pre>"},{"location":"diagnostics/IfElseDuplicatedCodeBlock/","title":"Duplicated code blocks in If...Then...ElseIf... statements (IfElseDuplicatedCodeBlock)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Minor</code> <code>Yes</code> <code>10</code> <code>suspicious</code>"},{"location":"diagnostics/IfElseDuplicatedCodeBlock/#Description","title":"Description","text":"<p>If...Then...ElseIf... statement should not have duplicated code blocks.</p>"},{"location":"diagnostics/IfElseDuplicatedCodeBlock/#Examples","title":"Examples","text":"<pre><code>If p = 0 Then\n    t = 0;\nElseIf p = 1 Then\n    t = 1;\nElseIf p = 2 Then\n    t = 1;\nElse\n    t = -1;\nEndIf;\n</code></pre>"},{"location":"diagnostics/IfElseDuplicatedCodeBlock/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/IfElseDuplicatedCodeBlock/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:IfElseDuplicatedCodeBlock-off\n// BSLLS:IfElseDuplicatedCodeBlock-on\n</code></pre>"},{"location":"diagnostics/IfElseDuplicatedCodeBlock/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"IfElseDuplicatedCodeBlock\": false\n</code></pre>"},{"location":"diagnostics/IfElseDuplicatedCondition/","title":"Duplicated conditions in If...Then...ElseIf... statements (IfElseDuplicatedCondition)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>10</code> <code>suspicious</code>"},{"location":"diagnostics/IfElseDuplicatedCondition/#Description","title":"Description","text":"<p>If...Then...ElseIf... statement should not have duplicated conditions.</p>"},{"location":"diagnostics/IfElseDuplicatedCondition/#Examples","title":"Examples","text":"<pre><code>If p = 0 Then\n    t = 0;\nElseIf p = 1 Then\n    t = 1;\nElseIf p = 1 Then\n    t = 2;\nElse\n    t = -1;\nEndIf;\n</code></pre>"},{"location":"diagnostics/IfElseDuplicatedCondition/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/IfElseDuplicatedCondition/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:IfElseDuplicatedCondition-off\n// BSLLS:IfElseDuplicatedCondition-on\n</code></pre>"},{"location":"diagnostics/IfElseDuplicatedCondition/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"IfElseDuplicatedCondition\": false\n</code></pre>"},{"location":"diagnostics/IfElseIfEndsWithElse/","title":"Else...The...ElseIf... statement should end with Else branch (IfElseIfEndsWithElse)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>10</code> <code>badpractice</code>"},{"location":"diagnostics/IfElseIfEndsWithElse/#Description","title":"Description","text":"<p>The rule is applied whenever the conditional operator If Then ElseIf contains one or more blocks ElseIf . After block ElseIf must be followed by block Else.</p> <p>The requirement to the final blockElse - it protective programming. Such constructions are resistant to possible changes and do not mask possible errors.</p> <p>The construct Else must either take appropriate action or contain a suitable comment as to why no action is being taken.</p>"},{"location":"diagnostics/IfElseIfEndsWithElse/#Examples","title":"Examples","text":"<p>Incorrect:</p> <pre><code>If TypeOf(InputParameter) = Type(\"Structure\") Then\n    Result = FillByStructure(InputParameter);\nElsIf TypeOf(InputParameter) = Type(\"Document.Ref.MajorDocument\") Then\n    Result = FillByDocument(InputParameter);\nEndIf;\n</code></pre> <p>Correct:</p> <pre><code>If TypeOf(InputParameter) = Type(\"Structure\") Then\n    Result = FillByStructure(InputParameter);\nElsIf TypeOf(InputParameter) = Type(\"Document.Ref.MajorDocument\") Then\n    Result = FillByDocument(InputParameter);\nElse\n    Raise \"Parameter of invalid type passed\";\nEndIf;\n</code></pre>"},{"location":"diagnostics/IfElseIfEndsWithElse/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/IfElseIfEndsWithElse/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:IfElseIfEndsWithElse-off\n// BSLLS:IfElseIfEndsWithElse-on\n</code></pre>"},{"location":"diagnostics/IfElseIfEndsWithElse/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"IfElseIfEndsWithElse\": false\n</code></pre>"},{"location":"diagnostics/IncorrectLineBreak/","title":"Incorrect expression line break (IncorrectLineBreak)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Info</code> <code>Yes</code> <code>2</code> <code>standard</code><code>badpractice</code>"},{"location":"diagnostics/IncorrectLineBreak/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>checkFirstSymbol</code> <code>Boolean</code> <code>Check beginning of line for invalid characters</code> <code>true</code> <code>listOfIncorrectFirstSymbol</code> <code>String</code> <code>Vertical bar-separated characters that should not start the line (special characters must be escaped)</code> <code>\\)|;|,\\s*\\S+|\\);</code> <code>checkLastSymbol</code> <code>Boolean</code> <code>Check end of line for invalid characters</code> <code>true</code> <code>listOfIncorrectLastSymbol</code> <code>String</code> <code>Vertical bar-separated characters that must not end in the line (special characters must be escaped)</code> <code>\u0418\u041b\u0418|\u0418|OR|AND|\\+|-|/|%|\\*</code>"},{"location":"diagnostics/IncorrectLineBreak/#Description","title":"Description","text":"<p>Long arithmetic expressions are carried as follows: one entry can contain more than one operand; when wrapping, operation characters are written at the beginning of the line (and not at the end of the previous line); operands on a new line are preceded by standard indentation, or they are aligned to the beginning of the first operand, regardless of the operation signs.</p> <p>If necessary, parameters of procedures, functions and methods should be transferred as follows:</p> <ul> <li>parameters are either aligned to the beginning of the first parameter, or preceded by standard indentation;</li> <li>closing parenthesis and operator separator \";\" are written on the same line as the last parameter;</li> <li>the formatting method that offers the auto-formatting function in the configurator is also acceptable</li> </ul> <p>Complex logical conditions in If ... ElseIf ... EndIf should be carried as follows:</p> <ul> <li>The basis for the newline if the line length is limited to 120 characters;</li> <li>logical operators AND, OR are placed at the beginning of a line, and not at the end of the previous line;</li> <li>all conditions are preceded by the standard first indent, or they are aligned at the start of work without taking into account the logical operator (it is recommended to use spaces to align expressions relative to the first line).</li> </ul> <p>Examples of configuring exclusions:</p> <ul> <li>If your design standard requires a closing brace and statement separator \";\" were written after the line containing the last parameter, then you need to change the <code>listOfIncorrectFirstSymbol</code> parameter</li> <li>instead of the substring <code>|\\);</code> (at the end of the setting) you need to write the substring <code>|\\)\\s*;\\s*\\S+</code></li> <li>final version <code>\\)|;|,\\s*\\S+|\\)s*;\\s*\\S+</code></li> <li>code example is listed in the examples section</li> </ul> <p>Without the specified setting, the rule will issue notes on the closing bracket and the operator separator \";\", located on a separate line</p>"},{"location":"diagnostics/IncorrectLineBreak/#Examples","title":"Examples","text":"<p>Incorrect:</p> <pre><code>AmountDocument = AmountWithoutDiscount +\n                 AmountManualDiscounts +\n                 AmountAutomaticDiscount;\n</code></pre> <p>Correct:</p> <pre><code>AmountDocument = AmountWithoutDiscount \n    + AmountManualDiscounts \n    + AmountAutomaticDiscount;\n</code></pre> <p>or</p> <pre><code>AmountDocument = AmountWithoutDiscount \n                 + AmountManualDiscounts \n                 + AmountAutomaticDiscount;\n</code></pre> <p>An example of a possible arrangement of parameters and a closing bracket with the operator separator \";\"</p> <pre><code>Names = New ValueList;\nNames.Add(Name, \n                         Synonym);\n</code></pre> <p>An example of a possible location of the closing bracket with the operator separator \";\" on a separate line: - without changing the <code>listOfIncorrectFirstSymbol</code> parameter (see above), the diagnostics will generate a issue for such expression wrapping.</p> <pre><code>Names = New ValueList;\nNames.Add(\n    Name, \n    Synonym\n);\n</code></pre>"},{"location":"diagnostics/IncorrectLineBreak/#Sources","title":"Sources","text":"<ul> <li>Standard: Wrap expressions (RU)</li> </ul>"},{"location":"diagnostics/IncorrectLineBreak/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/IncorrectLineBreak/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:IncorrectLineBreak-off\n// BSLLS:IncorrectLineBreak-on\n</code></pre>"},{"location":"diagnostics/IncorrectLineBreak/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"IncorrectLineBreak\": {\n\"checkFirstSymbol\": true,\n\"listOfIncorrectFirstSymbol\": \"\\\\)|;|,\\\\s*\\\\S+|\\\\);\",\n\"checkLastSymbol\": true,\n\"listOfIncorrectLastSymbol\": \"\u0418\u041b\u0418|\u0418|OR|AND|\\\\+|-|/|%|\\\\*\"\n}\n</code></pre>"},{"location":"diagnostics/IncorrectUseLikeInQuery/","title":"Incorrect use of 'LIKE' (IncorrectUseLikeInQuery)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>10</code> <code>standard</code><code>sql</code><code>unpredictable</code>"},{"location":"diagnostics/IncorrectUseLikeInQuery/#Description","title":"Description","text":"<p>When using the operator <code>LIKE</code> in the query text, it is allowed to use only - constant string literals - query parameters</p> <p>It is forbidden to form a template string using calculations, use string concatenation using the query language.</p> <p>Queries in which the control characters of the operator template <code>LIKE</code> are in query fields or in calculated expressions are interpreted differently on different DBMSs.</p>"},{"location":"diagnostics/IncorrectUseLikeInQuery/#Examples","title":"Examples","text":""},{"location":"diagnostics/IncorrectUseLikeInQuery/#String-concatenation-by-language-features","title":"String concatenation by language features","text":"<p>Allowed:</p> <pre><code>Field LIKE \"123%\"\n</code></pre> <p>Not allowed:</p> <pre><code>Field LIKE \"123\" + \"%\"\nField LIKE Table.Template\n</code></pre>"},{"location":"diagnostics/IncorrectUseLikeInQuery/#Operator-template-control-characters-LIKE-are-found-in-query-fields-or-in-calculated-expressions","title":"Operator template control characters LIKE are found in query fields or in calculated expressions","text":"<p>For example, instead of:</p> <pre><code>Query = New Query(\"\n|SELECT\n|    Goods.Ref\n|FROM\n|    Catalog.Goods AS Goods\n|WHERE\n|    Goods.Country.Description LOKE &amp;NameTemplate + \"_\"\n|\");\n\nQuery.SetParameter(\"NameTemplate\", \"FU\");\n</code></pre> <p>Nessesary to use:</p> <pre><code>Query = New Query(\"\n|SELECT\n|    Goods.Ref\n|FROM\n|    Catalog.Goods AS Goods\n|WHERE\n|    Goods.Country.Description LOKE &amp;NameTemplate\n|\");\n\nQuery.SetParameter(\"NameTemplate\", \"FU_\");\n</code></pre>"},{"location":"diagnostics/IncorrectUseLikeInQuery/#Sources","title":"Sources","text":"<ul> <li>Standard. Features of use in operator requests LIKE (RU)</li> </ul>"},{"location":"diagnostics/IncorrectUseLikeInQuery/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/IncorrectUseLikeInQuery/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:IncorrectUseLikeInQuery-off\n// BSLLS:IncorrectUseLikeInQuery-on\n</code></pre>"},{"location":"diagnostics/IncorrectUseLikeInQuery/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"IncorrectUseLikeInQuery\": false\n</code></pre>"},{"location":"diagnostics/IncorrectUseOfStrTemplate/","title":"Incorrect use of \"StrTemplate\" (IncorrectUseOfStrTemplate)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code><code>OS</code> <code>Blocker</code> <code>Yes</code> <code>1</code> <code>brainoverload</code><code>suspicious</code><code>unpredictable</code>"},{"location":"diagnostics/IncorrectUseOfStrTemplate/#Description","title":"Description","text":"<p>When using the <code>StrTemplate</code> method, you must carefully compose the template string and pass the correct number of parameters. So, it is quite easy to make mistakes when passing values for <code>StrTemplate</code>.</p> <p>It is important to remember that - <code>StrTemplate</code> only accepts parameters from <code>%1</code> to <code>%10</code> - if you want to pass a number immediately after the template, you need to add parentheses - <code>\"%(1)45\"</code></p>"},{"location":"diagnostics/IncorrectUseOfStrTemplate/#Examples","title":"Examples","text":"<p>Option 1 - the number of values passed after the template string is not equal (less or more) to the maximum number from a string like %N inside the template string</p> <ul> <li><code>StrTemplate(\"Name (version %1)\"); // not passed required parameter for %1</code></li> <li><code>StrTemplate(\"%1 (version %2)\", Name); // not passed required parameter for %2</code></li> </ul> <p>Option 2 - no values are passed at all, except for a formatted string due to the large number of parentheses inside a simple expression with <code>NStr</code> and <code>StrTemplate</code>:</p> <ul> <li><code>StrTemplate(NStr(\"en='Name (version %1)'\", Version()));</code></li> </ul> <p>Here mistake not closed parenthesis for <code>NStr</code>. As a result, the expression after evaluating <code>NStr</code> becomes empty.  It is rather difficult to detect such an error by reading the code due to the presence of parentheses. And you can only catch it at runtime by getting an exception.</p> <p>Correct option   - <code>StrTemplate(NStr(\"en='Name (version %1)'\"), Version());</code></p> <p>Option 3 - correct example of passing digits immediately after a template value   - <code>StrTemplate(\"Name %(1)2\"), Name); // if pass the value \"MyString\", then the result will be \"MyString2\"</code></p>"},{"location":"diagnostics/IncorrectUseOfStrTemplate/#Sources","title":"Sources","text":"<ul> <li>Standard: Localization Requirements (RU)</li> </ul>"},{"location":"diagnostics/IncorrectUseOfStrTemplate/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/IncorrectUseOfStrTemplate/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:IncorrectUseOfStrTemplate-off\n// BSLLS:IncorrectUseOfStrTemplate-on\n</code></pre>"},{"location":"diagnostics/IncorrectUseOfStrTemplate/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"IncorrectUseOfStrTemplate\": false\n</code></pre>"},{"location":"diagnostics/InvalidCharacterInFile/","title":"Invalid character (InvalidCharacterInFile)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>1</code> <code>error</code><code>standard</code><code>unpredictable</code>"},{"location":"diagnostics/InvalidCharacterInFile/#Description","title":"Description","text":"<p>In the texts of modules (including comments) it is not allowed to use inextricable spaces and the minus sign \"-\" in other encodings (short, long dash, soft hyphen, etc.).</p> <p>Such characters often appear in the text of the modules when copying from office documents and lead to a number of difficulties in the development.</p> <p>Example:</p> <ul> <li>the search for fragments of text that includes \u201cwrong\u201d minuses and spaces does not work</li> <li>hints of types of parameters of procedures and functions in the configurator and extended verification in 1C: EDT are incorrectly displayed</li> <li>specifying a \u201cwrong\u201d minus in expressions will result in a syntax error</li> </ul> <p>Diagnostics detects the following invalid characters</p> <ul> <li>En Dash</li> <li>Figure Dash</li> <li>Em Dash</li> <li>Horizontal Bar</li> <li>\"Wrong\" Minus</li> <li>Soft Hyphen</li> <li>Non-breaking Space</li> </ul>"},{"location":"diagnostics/InvalidCharacterInFile/#Sources","title":"Sources","text":"<ul> <li>Standard: Modules texts(RU)</li> </ul>"},{"location":"diagnostics/InvalidCharacterInFile/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/InvalidCharacterInFile/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:InvalidCharacterInFile-off\n// BSLLS:InvalidCharacterInFile-on\n</code></pre>"},{"location":"diagnostics/InvalidCharacterInFile/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"InvalidCharacterInFile\": false\n</code></pre>"},{"location":"diagnostics/IsInRoleMethod/","title":"IsInRole global method call (IsInRoleMethod)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>5</code> <code>error</code>"},{"location":"diagnostics/IsInRoleMethod/#Description","title":"Description","text":"<p>To check access rights in the code, use the AccessRight method.</p> <p>When a role does not grant access rights to metadata objects and defines an additional access right only, use the IsInRole method.</p> <p>If Standard Subsystems Library is used in a configuration, use the RolesAvailable function of the Users common module, otherwise IsInRole method call must be combined with PrivilegedMode() method call. If Standard Subsystems Library is used in a configuration, use the RolesAvailable() function of the Users common module, otherwise IsInRole() method call must be combined with PrivilegedMode() method call.</p>"},{"location":"diagnostics/IsInRoleMethod/#Examples","title":"Examples","text":"<p>Wrong: <pre><code>If RolesAvailable(\"AddingChangingCountriesWorld\") Then...\nIf RolesAvailable(\"ViewPopularCountriesReport\") Then ...\n</code></pre> Correct: <pre><code>If AccessRight(\"Edit\", Metadata.Catalogs.WorldCountries) Then ...\nIf AccessRight(\"View\", Metadata.Reports.PopularCountries) Then ...\n</code></pre> Wrong: <pre><code>If RolesAvailable(\"Treasurer\") Then...\n</code></pre> \u0421orrect: <pre><code>If IsInRole(\"Treasurer\") OR PrivilegedMode() Then ...\n</code></pre></p>"},{"location":"diagnostics/IsInRoleMethod/#Sources","title":"Sources","text":"<ul> <li>Standard: Checking access rights (RU)</li> </ul>"},{"location":"diagnostics/IsInRoleMethod/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/IsInRoleMethod/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:IsInRoleMethod-off\n// BSLLS:IsInRoleMethod-on\n</code></pre>"},{"location":"diagnostics/IsInRoleMethod/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"IsInRoleMethod\": false\n</code></pre>"},{"location":"diagnostics/JoinWithSubQuery/","title":"Join with sub queries (JoinWithSubQuery)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>10</code> <code>sql</code><code>standard</code><code>performance</code>"},{"location":"diagnostics/JoinWithSubQuery/#Description","title":"Description","text":"<p>When writing queries, you should not use subquery joins. Only metadata objects or temporary tables should be joined to each other.</p> <p>If the query contains joins with subqueries, then this can lead to negative consequences:</p> <ul> <li>Very slow query execution with low load on server hardware</li> <li>Unstable work of the request. Sometimes the query can work fast enough, sometimes very slow</li> <li>Significant difference in query execution time for different DBMS</li> <li>Increased query sensitivity to the relevance and completeness of sql statistics. After a complete update of statistics, the query may work quickly, but after a while it will slow down</li> </ul>"},{"location":"diagnostics/JoinWithSubQuery/#Examples","title":"Examples","text":"<p>An example of a potentially dangerous query using a subquery join:</p> <pre><code>SELECT *\nFROM Document.Sales\nLEFT JOIN (\n   SELECT Field1 \u0418\u0417 InformationRegister.Limits\n   WHERE Field2 In (&amp;List)\n   GROUP BY\n   Field1\n) BY Refs = Field1\n</code></pre>"},{"location":"diagnostics/JoinWithSubQuery/#Sources","title":"Sources","text":"<ul> <li>Standard: Restrictions on SubQuery and Virtual Table Joins (RU)</li> </ul>"},{"location":"diagnostics/JoinWithSubQuery/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/JoinWithSubQuery/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:JoinWithSubQuery-off\n// BSLLS:JoinWithSubQuery-on\n</code></pre>"},{"location":"diagnostics/JoinWithSubQuery/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"JoinWithSubQuery\": false\n</code></pre>"},{"location":"diagnostics/JoinWithVirtualTable/","title":"Join with virtual table (JoinWithVirtualTable)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>10</code> <code>sql</code><code>standard</code><code>performance</code>"},{"location":"diagnostics/JoinWithVirtualTable/#Description","title":"Description","text":"<p>When writing queries, you should not use virtual tables joins. Only metadata objects or temporary tables should be joined to each other.</p> <p>If the query uses a join to a virtual table (for example, AccumulationRegister.Products.Balance) and the query is slow, then it is recommended to move the data reading from the virtual table into a separate query with the results saved in a temporary table.</p>"},{"location":"diagnostics/JoinWithVirtualTable/#Examples","title":"Examples","text":""},{"location":"diagnostics/JoinWithVirtualTable/#Sources","title":"Sources","text":"<ul> <li>Standard: Restrictions on SubQuery and Virtual Table Joins (RU)</li> </ul>"},{"location":"diagnostics/JoinWithVirtualTable/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/JoinWithVirtualTable/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:JoinWithVirtualTable-off\n// BSLLS:JoinWithVirtualTable-on\n</code></pre>"},{"location":"diagnostics/JoinWithVirtualTable/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"JoinWithVirtualTable\": false\n</code></pre>"},{"location":"diagnostics/LatinAndCyrillicSymbolInWord/","title":"Mixing Latin and Cyrillic characters in one identifier (LatinAndCyrillicSymbolInWord)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Minor</code> <code>Yes</code> <code>5</code> <code>brainoverload</code><code>suspicious</code>"},{"location":"diagnostics/LatinAndCyrillicSymbolInWord/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>excludeWords</code> <code>String</code> <code>A list of exclusion words, specified as a comma-separated string</code> <code>\u0427\u0442\u0435\u043d\u0438\u0435XML, \u0427\u0442\u0435\u043d\u0438\u0435JSON, \u0417\u0430\u043f\u0438\u0441\u044cXML, \u0417\u0430\u043f\u0438\u0441\u044cJSON, Com\u041e\u0431\u044a\u0435\u043a\u0442, \u0424\u0430\u0431\u0440\u0438\u043a\u0430XDTO, \u041e\u0431\u044a\u0435\u043a\u0442XDTO, \u0421\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435FTP, HTTP\u0421\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435, HTTP\u0417\u0430\u043f\u0440\u043e\u0441, HTTP\u0421\u0435\u0440\u0432\u0438\u0441\u041e\u0442\u0432\u0435\u0442, SMS\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, WS\u041f\u0440\u043e\u043a\u0441\u0438</code> <code>allowTrailingPartsInAnotherLanguage</code> <code>Boolean</code> <code>Allow a name to start or end with a word in another language</code> <code>true</code>"},{"location":"diagnostics/LatinAndCyrillicSymbolInWord/#Description","title":"Description","text":"<p>Do not use identifiers consisting of characters from different languages, \u0432ecause it makes it difficult to use them further, forcing to switch the layout. Also, the diagnostics detects the erroneous use of characters from another language, when it was used unintentionally. For exaple: <code>o</code>, <code>c</code>, <code>B</code>, <code>p</code> and etc.</p> <p>To reduce \"noise\" in the names consisting of several words beginning or ending in the word in another language, in the diagnostics option has been added that is included by default. If the parameter is enabled, then NOT are considered erroneous names like <code>Zebra\u0414\u0440\u0430\u0439\u0432\u0435\u0440</code>, <code>\u041a\u043e\u0434HTTP</code>, <code>SMS\u0428\u043b\u044e\u0437</code> and the like.</p>"},{"location":"diagnostics/LatinAndCyrillicSymbolInWord/#Examples","title":"Examples","text":""},{"location":"diagnostics/LatinAndCyrillicSymbolInWord/#Sources","title":"Sources","text":""},{"location":"diagnostics/LatinAndCyrillicSymbolInWord/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/LatinAndCyrillicSymbolInWord/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:LatinAndCyrillicSymbolInWord-off\n// BSLLS:LatinAndCyrillicSymbolInWord-on\n</code></pre>"},{"location":"diagnostics/LatinAndCyrillicSymbolInWord/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"LatinAndCyrillicSymbolInWord\": {\n\"excludeWords\": \"\u0427\u0442\u0435\u043d\u0438\u0435XML, \u0427\u0442\u0435\u043d\u0438\u0435JSON, \u0417\u0430\u043f\u0438\u0441\u044cXML, \u0417\u0430\u043f\u0438\u0441\u044cJSON, Com\u041e\u0431\u044a\u0435\u043a\u0442, \u0424\u0430\u0431\u0440\u0438\u043a\u0430XDTO, \u041e\u0431\u044a\u0435\u043a\u0442XDTO, \u0421\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435FTP, HTTP\u0421\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435, HTTP\u0417\u0430\u043f\u0440\u043e\u0441, HTTP\u0421\u0435\u0440\u0432\u0438\u0441\u041e\u0442\u0432\u0435\u0442, SMS\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, WS\u041f\u0440\u043e\u043a\u0441\u0438\",\n\"allowTrailingPartsInAnotherLanguage\": true\n}\n</code></pre>"},{"location":"diagnostics/LineLength/","title":"Line Length limit (LineLength)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Minor</code> <code>Yes</code> <code>1</code> <code>standard</code><code>badpractice</code>"},{"location":"diagnostics/LineLength/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>maxLineLength</code> <code>Integer</code> <code>Max length of string in characters</code> <code>120</code> <code>checkMethodDescription</code> <code>Boolean</code> <code>Check length of strings in method descriptions</code> <code>true</code>"},{"location":"diagnostics/LineLength/#Description","title":"Description","text":"<p>If the line length is grater than 120 characters you should you line break. It is not recommended to have lines longer than 120 characters, except when line break is impossible (example, in code we have a string constant which is displayed without line breaks in message window using object MessageToUser).</p>"},{"location":"diagnostics/LineLength/#Sources","title":"Sources","text":"<ul> <li>Source: Standard: Modules (RU)</li> </ul>"},{"location":"diagnostics/LineLength/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/LineLength/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:LineLength-off\n// BSLLS:LineLength-on\n</code></pre>"},{"location":"diagnostics/LineLength/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"LineLength\": {\n\"maxLineLength\": 120,\n\"checkMethodDescription\": true\n}\n</code></pre>"},{"location":"diagnostics/LogicalOrInTheWhereSectionOfQuery/","title":"Using a logical \"OR\" in the \"WHERE\" section of a query (LogicalOrInTheWhereSectionOfQuery)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>15</code> <code>sql</code><code>performance</code><code>standard</code>"},{"location":"diagnostics/LogicalOrInTheWhereSectionOfQuery/#Description","title":"Description","text":"<p>\u041d\u0435 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c <code>\u0418\u041b\u0418</code> \u0432 \u0441\u0435\u043a\u0446\u0438\u0438 <code>\u0413\u0414\u0415</code> \u0437\u0430\u043f\u0440\u043e\u0441\u0430. \u042d\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u0442\u043e\u043c\u0443, \u0447\u0442\u043e \u0421\u0423\u0411\u0414 \u043d\u0435 \u0441\u043c\u043e\u0436\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c  \u0438\u043d\u0434\u0435\u043a\u0441\u044b \u0442\u0430\u0431\u043b\u0438\u0446 \u0438 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u0441\u043a\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0442 \u0432\u0440\u0435\u043c\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438 \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043e\u043a.  \u0412\u043c\u0435\u0441\u0442\u043e \u044d\u0442\u043e\u0433\u043e \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0440\u0430\u0437\u0431\u0438\u0442\u044c \u043e\u0434\u0438\u043d \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0438 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b.</p>"},{"location":"diagnostics/LogicalOrInTheWhereSectionOfQuery/#\u041f\u0440\u0438\u043c\u0435\u0440\u044b","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b","text":"<p>For example, query:</p> <pre><code>SELECT Goods.Description FROM Catalog.Goods AS Goods \nWHERE Code = \"001\" OR Cost = 10\n</code></pre> <p>should instead of a query:</p> <pre><code>SELECT Goods.Description FROM Catalog.Goods AS Goods \nWHERE Code = \"001\" \n\nUNION ALL\n\nSELECT Goods.Description FROM Catalog.Goods AS Goods \nWHERE Cost = 10\n</code></pre> <p>Important - the current implementation of the diagnostic triggers on any <code>OR</code> in the <code>WHERE</code> section and may issue false positives for some conditions.</p> <p>1) In the main condition, the <code>OR</code> operator can only be used for the last used or the only index field, when the <code>OR</code> operator can be replaced by the <code>IN</code> operator.</p> <p>Correct:</p> <pre><code>WHERE\n    Table.Filed = &amp;Value1\n    OR Table.Filed = &amp;Value2\n</code></pre> <p>because can be rewritten using the <code>IN</code> operator (you don\u2019t need to specifically rewrite it, you can leave it as it is):</p> <pre><code>WHERE\n    Table.Field IN (&amp;Value)\n</code></pre> <p>Incorrect:</p> <pre><code>WHERE\n    Table.Field1 = &amp;Value1\n    OR  Table.Field2 = &amp;Value2\n</code></pre> <p>cannot be rewritten with <code>IN</code>, but can be rewritten with <code>UNION ALL</code> (each Field1 and Field2 must be indexed):</p> <pre><code>WHERE\n     Table.Field1 = &amp;Value1\n\nUNION ALL\n\nWHERE\n     Table.Field2 = &amp;Value1\n</code></pre> <p>Note: it is not always possible to replace <code>OR</code> with <code>UNION ALL</code>, make sure the result is really the same as with <code>OR</code> before applying.</p> <p>2) Additionally, the 'OR' operator can be used without restriction.</p> <p>Correct:</p> <pre><code>WHERE\n    Table.Filed1 = &amp;Value1 // Main condition (use index)\n    AND // Addition condition (can use OR)\n    (Table.Filed2 = &amp;Value2 OR Table.Filed3 = &amp;Value3)\n</code></pre> <p>Correct:</p> <pre><code>WHERE\n    (Table.Filed1 = &amp;Value1 OR Table.Filed1 = &amp;Value2)\n    AND\n    (Table.Filed2 = &amp;Value3 OR Table.Filed2 = &amp;Value4)\n</code></pre> <p>because can be rewritten using 'IN' (no special rewriting needed, can be left as is):</p> <pre><code>WHERE\n    Table.Field1 IN (&amp;Value1)   // Main condition\n    AND Table.Field2 IN (&amp;Value2) // Additional condition (or vice versa)\n</code></pre>"},{"location":"diagnostics/LogicalOrInTheWhereSectionOfQuery/#Sources","title":"Sources","text":"<ul> <li>Standard: Effective Query Conditions, Clause 2 (RU)</li> <li>Typical Causes of Suboptimal Query Performance and Optimization Techniques: Using Logical OR in Conditions (RU)</li> <li>Article on Habr: Interesting analysis of SQL queries in various DBMS (not about 1C) (RU)</li> </ul>"},{"location":"diagnostics/LogicalOrInTheWhereSectionOfQuery/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/LogicalOrInTheWhereSectionOfQuery/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:LogicalOrInTheWhereSectionOfQuery-off\n// BSLLS:LogicalOrInTheWhereSectionOfQuery-on\n</code></pre>"},{"location":"diagnostics/LogicalOrInTheWhereSectionOfQuery/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"LogicalOrInTheWhereSectionOfQuery\": false\n</code></pre>"},{"location":"diagnostics/MagicDate/","title":"Magic dates (MagicDate)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Minor</code> <code>Yes</code> <code>5</code> <code>badpractice</code><code>brainoverload</code>"},{"location":"diagnostics/MagicDate/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>authorizedDates</code> <code>String</code> <code>Allowed dates, comma separated. Example: 00010101,00010101000000,000101010000</code> <code>00010101,00010101000000,000101010000</code>"},{"location":"diagnostics/MagicDate/#Description","title":"Description","text":"<p>Magic date is any date in your code that does not immediately become apparent without being immersed in context.</p>"},{"location":"diagnostics/MagicDate/#Examples","title":"Examples","text":"<p>Bad</p> <pre><code>If now &lt; '20151021' Then\n    HoverBoardIsReal = Undefined;\nEndIf;\n</code></pre> <p>Good</p> <pre><code>PredictedDate = '20151021'; \nIf now &lt; PredictedDate Then\n    HoverBoardIsReal = Undefined;\nEndIf;\n</code></pre>"},{"location":"diagnostics/MagicDate/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/MagicDate/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:MagicDate-off\n// BSLLS:MagicDate-on\n</code></pre>"},{"location":"diagnostics/MagicDate/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"MagicDate\": {\n\"authorizedDates\": \"00010101,00010101000000,000101010000\"\n}\n</code></pre>"},{"location":"diagnostics/MagicNumber/","title":"Magic numbers (MagicNumber)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Minor</code> <code>Yes</code> <code>1</code> <code>badpractice</code>"},{"location":"diagnostics/MagicNumber/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>authorizedNumbers</code> <code>String</code> <code>allowed numbers, coma separated. Example:-1,0,1,60</code> <code>-1,0,1</code> <code>allowMagicIndexes</code> <code>Boolean</code> <code>allow magic indexes</code> <code>true</code>"},{"location":"diagnostics/MagicNumber/#Description","title":"Description","text":"<p>Magic numbers are any number in your code that does not immediately become apparent without being immersed in context.</p>"},{"location":"diagnostics/MagicNumber/#Examples","title":"Examples","text":"<p>Bad</p> <pre><code>Function GetsTheInterval(Duration)\n\n     Return Duration &lt; 10 * 60 * 60;\n\nEnd Function\n</code></pre> <p>Good</p> <pre><code>Function GetsTheInterval (Duration in Seconds)\n\n    MinutesHour     = 60;\n    SecondsMinute   = 60;\n    SecondsHour     = SecondsMinute * MinutesHour;\n    HoursIninterval = 10;\n    Return Duration &lt; HoursWininterval * SecondsHour;\n\nEnd Function\n</code></pre>"},{"location":"diagnostics/MagicNumber/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/MagicNumber/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:MagicNumber-off\n// BSLLS:MagicNumber-on\n</code></pre>"},{"location":"diagnostics/MagicNumber/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"MagicNumber\": {\n\"authorizedNumbers\": \"-1,0,1\",\n\"allowMagicIndexes\": true\n}\n</code></pre>"},{"location":"diagnostics/MetadataObjectNameLength/","title":"Metadata object names must not exceed the allowed length (MetadataObjectNameLength)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>10</code> <code>standard</code>"},{"location":"diagnostics/MetadataObjectNameLength/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>maxMetadataObjectNameLength</code> <code>Integer</code> <code>Permissible length of the name of the configuration object</code> <code>80</code>"},{"location":"diagnostics/MetadataObjectNameLength/#Description","title":"Description","text":"<p>Metadata object names must not exceed 80 characters.</p> <p>In addition to problems using these objects, there are problems with uploading the configuration to files.</p>"},{"location":"diagnostics/MetadataObjectNameLength/#Examples","title":"Examples","text":"<p>LooooooooooooooooooooooooooooooooooooooooooooooooooooooooongVeryLongDocumentName</p>"},{"location":"diagnostics/MetadataObjectNameLength/#Sources","title":"Sources","text":"<p>Standard: Name, synonym, comment (RU)</p>"},{"location":"diagnostics/MetadataObjectNameLength/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/MetadataObjectNameLength/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:MetadataObjectNameLength-off\n// BSLLS:MetadataObjectNameLength-on\n</code></pre>"},{"location":"diagnostics/MetadataObjectNameLength/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"MetadataObjectNameLength\": {\n\"maxMetadataObjectNameLength\": 80\n}\n</code></pre>"},{"location":"diagnostics/MethodSize/","title":"Method size (MethodSize)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>30</code> <code>badpractice</code>"},{"location":"diagnostics/MethodSize/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>maxMethodSize</code> <code>Integer</code> <code>Max method line count.</code> <code>200</code>"},{"location":"diagnostics/MethodSize/#Description","title":"Description","text":"<p>There are cumbersome methods (procedures and functions) which mskes it impossible to work effectively precisely because of their huge size. A large method often arises when a developer adds new functionality to a method. \u201cWhy should I put the parameter check in a separate method, if I can write it here?\u201d, \u201cWhy do I need to create a separate method for the search of maximum element in the array, let\u2019s leave it here. So the code is clearer\u201d, and other misconceptions.</p> <p>There are two rules for refactoring a large method:</p> <ul> <li>If when writing a method you want to add a comment to the code, you must put this functionality in a separate method</li> <li>If the method takes more than 50-100 lines of code, you should determine the tasks and subtasks that it performs and try to put the subtasks in a separate method</li> </ul>"},{"location":"diagnostics/MethodSize/#Sources","title":"Sources","text":"<ul> <li>Software Architecture Refactoring: Layering</li> <li>Martin Fowler: Refactoring</li> <li>Refactoring and opt-out tools (RU)</li> <li>Refactoring tools in 1C (RU)</li> </ul>"},{"location":"diagnostics/MethodSize/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/MethodSize/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:MethodSize-off\n// BSLLS:MethodSize-on\n</code></pre>"},{"location":"diagnostics/MethodSize/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"MethodSize\": {\n\"maxMethodSize\": 200\n}\n</code></pre>"},{"location":"diagnostics/MissedRequiredParameter/","title":"Missed a required method parameter (MissedRequiredParameter)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>1</code> <code>error</code>"},{"location":"diagnostics/MissedRequiredParameter/#Description","title":"Description","text":""},{"location":"diagnostics/MissedRequiredParameter/#Examples","title":"Examples","text":""},{"location":"diagnostics/MissedRequiredParameter/#Sources","title":"Sources","text":""},{"location":"diagnostics/MissedRequiredParameter/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/MissedRequiredParameter/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:MissedRequiredParameter-off\n// BSLLS:MissedRequiredParameter-on\n</code></pre>"},{"location":"diagnostics/MissedRequiredParameter/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"MissedRequiredParameter\": false\n</code></pre>"},{"location":"diagnostics/MissingCodeTryCatchEx/","title":"Missing code in Raise block in \"Try ... Raise ... EndTry\" (MissingCodeTryCatchEx)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>15</code> <code>standard</code><code>badpractice</code>"},{"location":"diagnostics/MissingCodeTryCatchEx/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>commentAsCode</code> <code>Boolean</code> <code>Treat comment in Raise section as code</code> <code>false</code>"},{"location":"diagnostics/MissingCodeTryCatchEx/#Description","title":"Description","text":"<p>It is unacceptable to catch any exception, without any trace for system administrator.</p> <p>Incorrect</p> <pre><code>Try\n    // code causing exception\n    ....\nRaise // catch any exception\nEndTry;\n</code></pre> <p>As a rule, such a design hides a real problem, which is subsequently impossible to diagnose.</p> <p>Correct</p> <pre><code>Try\n    // code causing exception\n    ....\nRaise\n    // Explanation why catching all exceptions untraceable for enduser.\n    // ....\n    // Write to log for system administrator.\n    WriteLogEvent(NStr(\"en = 'Action'\"),\n       EventLogLevel.Error,,,\n       DetailErrorDescription(ErrorInfo()));\nEndTry;\n</code></pre>"},{"location":"diagnostics/MissingCodeTryCatchEx/#Sources","title":"Sources","text":"<ul> <li>Catching Exceptions in Code (RU)</li> </ul>"},{"location":"diagnostics/MissingCodeTryCatchEx/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/MissingCodeTryCatchEx/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:MissingCodeTryCatchEx-off\n// BSLLS:MissingCodeTryCatchEx-on\n</code></pre>"},{"location":"diagnostics/MissingCodeTryCatchEx/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"MissingCodeTryCatchEx\": {\n\"commentAsCode\": false\n}\n</code></pre>"},{"location":"diagnostics/MissingCommonModuleMethod/","title":"Referencing a missing common module method (MissingCommonModuleMethod)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Blocker</code> <code>Yes</code> <code>5</code> <code>error</code>"},{"location":"diagnostics/MissingCommonModuleMethod/#Description","title":"Description","text":"<p>Diagnostics detects erroneous calls to methods of common modules. Detects the following errors - method does not exist in the specified common module - method is in the common module, but it is not exported - if a common module has no source code, then all calls to its methods are marked as erroneous</p> <p>Excluded - the variable name is the same as the common module name</p>"},{"location":"diagnostics/MissingCommonModuleMethod/#Examples","title":"Examples","text":""},{"location":"diagnostics/MissingCommonModuleMethod/#Sources","title":"Sources","text":""},{"location":"diagnostics/MissingCommonModuleMethod/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/MissingCommonModuleMethod/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:MissingCommonModuleMethod-off\n// BSLLS:MissingCommonModuleMethod-on\n</code></pre>"},{"location":"diagnostics/MissingCommonModuleMethod/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"MissingCommonModuleMethod\": false\n</code></pre>"},{"location":"diagnostics/MissingEventSubscriptionHandler/","title":"Event subscription handler missing (MissingEventSubscriptionHandler)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Blocker</code> <code>Yes</code> <code>5</code> <code>error</code>"},{"location":"diagnostics/MissingEventSubscriptionHandler/#Description","title":"Description","text":"<p>If the handler for the \"event subscription\" is not filled or does not exist, then an error will occur in the application.</p> <p>Note: Diagnostics attaches notes to the \"session module\".</p>"},{"location":"diagnostics/MissingEventSubscriptionHandler/#Examples","title":"Examples","text":""},{"location":"diagnostics/MissingEventSubscriptionHandler/#Sources","title":"Sources","text":""},{"location":"diagnostics/MissingEventSubscriptionHandler/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/MissingEventSubscriptionHandler/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:MissingEventSubscriptionHandler-off\n// BSLLS:MissingEventSubscriptionHandler-on\n</code></pre>"},{"location":"diagnostics/MissingEventSubscriptionHandler/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"MissingEventSubscriptionHandler\": false\n</code></pre>"},{"location":"diagnostics/MissingParameterDescription/","title":"Method parameters description are missing (MissingParameterDescription)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>5</code> <code>standard</code><code>badpractice</code>"},{"location":"diagnostics/MissingParameterDescription/#Description","title":"Description","text":"<p>The description of a method (procedure or function) should be formatted correctly to help programmers use the functionality correctly.</p> <p>If a method contains parameters, then in its description, in the block of the same name, descriptions for all parameters must be given in the same order as in the method signature.</p> <p>Diagnostic detects typical errors:</p> <ul> <li>Lack of description of all parameters</li> <li>Absence of a description of some of the parameters, indicating for which parameter the description was not found</li> <li>The presence in the description of parameters that are absent in the method signature (which could remain from refactoring)</li> <li>Poor parameter description: when the parameter name is present in the method description, but the parameter type and type description are not specified</li> </ul>"},{"location":"diagnostics/MissingParameterDescription/#Examples","title":"Examples","text":""},{"location":"diagnostics/MissingParameterDescription/#Sources","title":"Sources","text":"<ul> <li>Standart: Procedures and functions description (RU)</li> </ul>"},{"location":"diagnostics/MissingParameterDescription/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/MissingParameterDescription/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:MissingParameterDescription-off\n// BSLLS:MissingParameterDescription-on\n</code></pre>"},{"location":"diagnostics/MissingParameterDescription/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"MissingParameterDescription\": false\n</code></pre>"},{"location":"diagnostics/MissingReturnedValueDescription/","title":"Function returned values description is missing (MissingReturnedValueDescription)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>5</code> <code>standard</code><code>badpractice</code>"},{"location":"diagnostics/MissingReturnedValueDescription/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>allowShortDescriptionReturnValues</code> <code>Boolean</code> <code>Allow short description of return values</code> <code>true</code>"},{"location":"diagnostics/MissingReturnedValueDescription/#Description","title":"Description","text":"<p>The description of a method (procedure or function) should be formatted correctly to help programmers use the functionality correctly.</p> <p>The function description must contain a description of the return value in the block of the same name. You must provide a description for all possible return types.</p> <p>Diagnostics detects typical errors:</p> <ul> <li>No return value description</li> <li>Return value description for procedure</li> <li>Poor description of the return value: when the type name is present in the description, but its description is not specified</li> <li>To activate this more stringent check, you must turn off the short form permission by the diagnostic parameter</li> </ul>"},{"location":"diagnostics/MissingReturnedValueDescription/#Examples","title":"Examples","text":""},{"location":"diagnostics/MissingReturnedValueDescription/#Sources","title":"Sources","text":"<ul> <li>Standart: Procedures and functions description (RU)</li> </ul>"},{"location":"diagnostics/MissingReturnedValueDescription/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/MissingReturnedValueDescription/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:MissingReturnedValueDescription-off\n// BSLLS:MissingReturnedValueDescription-on\n</code></pre>"},{"location":"diagnostics/MissingReturnedValueDescription/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"MissingReturnedValueDescription\": {\n\"allowShortDescriptionReturnValues\": true\n}\n</code></pre>"},{"location":"diagnostics/MissingSpace/","title":"Missing spaces to the left or right of operators + - * / = % &lt; &gt; &lt;&gt; &lt;= &gt;=, keywords, and also to the right of , and ; (MissingSpace)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Info</code> <code>Yes</code> <code>1</code> <code>badpractice</code>"},{"location":"diagnostics/MissingSpace/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>listForCheckLeft</code> <code>String</code> <code>List to check for the space to the left of (separated by space)</code> `` <code>listForCheckRight</code> <code>String</code> <code>List to check for the space to the right of (separated by space)</code> <code>, ;</code> <code>listForCheckLeftAndRight</code> <code>String</code> <code>List to check for the space from both sides of (separated by space)</code> <code>+ - * / = % &lt; &gt; &lt;&gt; &lt;= &gt;=</code> <code>checkSpaceToRightOfUnary</code> <code>Boolean</code> <code>Check for space to the right of unary signs (+ -)</code> <code>false</code> <code>allowMultipleCommas</code> <code>Boolean</code> <code>Allow several commas in a row</code> <code>false</code>"},{"location":"diagnostics/MissingSpace/#Description","title":"Description","text":"<p>To improve code readability to the left and right of operators <code>+ - * / = % &lt; &gt; &lt;&gt; &lt;= &gt;=</code> there must be spaces. Also, the space should be to the right of <code>,</code> \u0438 <code>;</code></p>"},{"location":"diagnostics/MissingSpace/#Examples","title":"Examples","text":"<p>Incorrect</p> <pre><code>Procedure Sum(Param1,Param2)\n    If Param1=Param2 Then\n        Sum=Price*Quantity;\n    EndIf;\nEndProcedure\n</code></pre> <p>Correct</p> <pre><code>Procedure Sum(Param1, Param2)\n     If Param1 = Param2 Then\n         Sum = Price * Quantity;\n     EndIf;\nEndProcedure\n</code></pre>"},{"location":"diagnostics/MissingSpace/#Using-checkSpaceToRightOfUnary-parameter","title":"Using <code>checkSpaceToRightOfUnary</code> parameter","text":"<p>The parameter makes sense only in case the unary operator is listed in one of three base parameters.</p> <p>If set to <code>false</code></p> <pre><code>\u0410 = -B;     // Correct\n\u0410 = - B;    // Correct\n</code></pre> <p>If set to <code>true</code></p> <pre><code>\u0410 = -B;     // Incorrect\n\u0410 = - B;    // Correct\n</code></pre>"},{"location":"diagnostics/MissingSpace/#Using-allowMultipleCommas-parameter","title":"Using <code>allowMultipleCommas</code> parameter","text":"<p>The parameter has sense only if <code>,</code> is listed in one of three base parameters Defaults to <code>false</code></p> <p>If set to <code>false</code></p> <pre><code>    CommonModuleClientServer.MessageToUser(MessageText,,,, Cancel);        // Bad\n    CommonModuleClientServer.MessageToUser(MessageText, , , , Cancel);     // Correct\n</code></pre> <p>If set to <code>true</code></p> <pre><code>    CommonModuleClientServer.MessageToUser(MessageText,,,, Cancel);        // Correct\nCommonModuleClientServer.MessageToUser(MessageText, , , , Cancel);     // Correct\n</code></pre>"},{"location":"diagnostics/MissingSpace/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/MissingSpace/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:MissingSpace-off\n// BSLLS:MissingSpace-on\n</code></pre>"},{"location":"diagnostics/MissingSpace/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"MissingSpace\": {\n\"listForCheckLeft\": \"\",\n\"listForCheckRight\": \", ;\",\n\"listForCheckLeftAndRight\": \"+ - * / = % &lt; &gt; &lt;&gt; &lt;= &gt;=\",\n\"checkSpaceToRightOfUnary\": false,\n\"allowMultipleCommas\": false\n}\n</code></pre>"},{"location":"diagnostics/MissingTempStorageDeletion/","title":"Missing temporary storage data deletion after using (MissingTempStorageDeletion)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Critical</code> <code>No</code> <code>3</code> <code>standard</code><code>performance</code><code>badpractice</code>"},{"location":"diagnostics/MissingTempStorageDeletion/#Description","title":"Description","text":""},{"location":"diagnostics/MissingTempStorageDeletion/#\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442-\u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435-\u0434\u0430\u043d\u043d\u044b\u0445-\u0438\u0437-\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0433\u043e-\u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430-\u043f\u043e\u0441\u043b\u0435-\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f-MissingTempStorageDeletion","title":"\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0433\u043e \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430 \u043f\u043e\u0441\u043b\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f (MissingTempStorageDeletion)","text":"Type Scope Severity Activated by default Minutes to fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Critical</code> <code>No</code> <code>3</code> <code>standard</code><code>performance</code><code>badpractice</code>"},{"location":"diagnostics/MissingTempStorageDeletion/#Diagnostics-description","title":"Diagnostics description","text":"<p>Diagnostics is now tracking all <code>GetFromTempStorage</code> calls that do not have a corresponding <code>DeleteFromTempStorage</code> call - within one method!</p> <p>The rules for working with objects in temporary storage are often violated - storing data in it is not free. There are errors even in the documentation and numerous use cases.</p> <p>When placing data in temporary storage, you should choose one of two options:</p> <ul> <li>put data into temporary storage for the lifetime of the form using the unique identifier of the form</li> <li>and clean up this temporary storage after use.</li> <li>pre-initialize temporary storage and reuse it.</li> </ul> <p>Otherwise, if an action is repeated many times in a form, for example, if a product is selected many times, this leads to unnecessary consumption of RAM, because temporary stores are accumulating.</p> <p>Remember that when a value is retrieved from the temporary storage on the server, it will be retrieved by reference. This is a reference to the value that is stored in the cache. Within 20 minutes, from the moment it was put into the storage or from the moment of the last access, the value will be stored in the cache, and then written to disk and deleted from the cache. On the next call, the value is loaded from disk and put back into the cache.</p>"},{"location":"diagnostics/MissingTempStorageDeletion/#Examples","title":"Examples","text":"<p>1 - Example of correct code: <pre><code>&amp;\u041d\u0430\u041a\u043b\u0438\u0435\u043d\u0442\u0435\n\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u0430 \u041f\u0440\u0438\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435\u041f\u043e\u0434\u043e\u0431\u0440\u0430\u043d\u043d\u044b\u0445\u0422\u043e\u0432\u0430\u0440\u043e\u0432(\u042d\u043b\u0435\u043c\u0435\u043d\u0442, \u0410\u0434\u0440\u0435\u0441\u0422\u043e\u0432\u0430\u0440\u043e\u0432\u0412\u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435, \u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u0430\u044f\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430) \u042d\u043a\u0441\u043f\u043e\u0440\u0442\n    \u0415\u0441\u043b\u0438 \u0410\u0434\u0440\u0435\u0441\u0422\u043e\u0432\u0430\u0440\u043e\u0432\u0412\u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435 = \u041d\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043e \u0422\u043e\u0433\u0434\u0430\n        \u0412\u043e\u0437\u0432\u0440\u0430\u0442;\n    \u041a\u043e\u043d\u0435\u0446\u0415\u0441\u043b\u0438;\n    \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0422\u043e\u0432\u0430\u0440\u044b\u0418\u0437\u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430(\u0410\u0434\u0440\u0435\u0441\u0422\u043e\u0432\u0430\u0440\u043e\u0432\u0412\u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435); \n\u041a\u043e\u043d\u0435\u0446\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u044b\n\n&amp;\u041d\u0430\u0421\u0435\u0440\u0432\u0435\u0440\u0435\n\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u0430 \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0422\u043e\u0432\u0430\u0440\u044b\u0418\u0437\u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430(\u0410\u0434\u0440\u0435\u0441\u0422\u043e\u0432\u0430\u0440\u043e\u0432\u0412\u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435)\n    \u041f\u043e\u0434\u043e\u0431\u0440\u0430\u043d\u043d\u044b\u0435\u0422\u043e\u0432\u0430\u0440\u044b = \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0418\u0437\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0433\u043e\u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430(\u0410\u0434\u0440\u0435\u0441\u0422\u043e\u0432\u0430\u0440\u043e\u0432\u0412\u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435);\n    \u041e\u0431\u044a\u0435\u043a\u0442.\u0422\u043e\u0432\u0430\u0440\u044b.\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c(\u041f\u043e\u0434\u043e\u0431\u0440\u0430\u043d\u043d\u044b\u0435\u0422\u043e\u0432\u0430\u0440\u044b);\n\n    \u0423\u0434\u0430\u043b\u0438\u0442\u044c\u0418\u0437\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0433\u043e\u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430(\u0410\u0434\u0440\u0435\u0441\u0422\u043e\u0432\u0430\u0440\u043e\u0432\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430); // \u043e\u0447\u0438\u0449\u0430\u0435\u0442\u0441\u044f \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0435 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435 \u0434\u043b\u044f \u043c\u0438\u043d\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u0438 \u0440\u0430\u0441\u0445\u043e\u0434\u0430 \u043e\u043f\u0435\u0440\u0430\u0442\u0438\u0432\u043d\u043e\u0439 \u043f\u0430\u043c\u044f\u0442\u0438\n\u041a\u043e\u043d\u0435\u0446\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u044b \n</code></pre></p> <p>2 - Consider this recommendation when working with background jobs</p> <p>Incorrect: - Each time a background job is executed, its result is placed in temporary storage for the lifetime of the form: <pre><code>Parameters = LongOperations.FunctionParameters(UUID);\nLongOperations.ExecFunction(Pframeters, BackgroundJobParameter);\n</code></pre></p> <ul> <li>If a long operation is performed by the user multiple times, then temporary storage accumulates, which causes an increase in memory consumption.</li> <li>To reduce the consumption of RAM, in most cases, it is recommended to clear the temporary storage immediately after receiving the result of the background job:</li> </ul> <p>Correct: <pre><code>\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 = \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0418\u0437\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0433\u043e\u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430(\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.\u0410\u0434\u0440\u0435\u0441\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430);\n\u0423\u0434\u0430\u043b\u0438\u0442\u044c\u0418\u0437\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0433\u043e\u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430(\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.\u0410\u0434\u0440\u0435\u0441\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430);  // \u0414\u0430\u043d\u043d\u044b\u0435 \u0432\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u043c \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435 \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u0442\u0440\u0435\u0431\u0443\u044e\u0442\u0441\u044f.\n</code></pre></p> <ul> <li>If the result of a background job needs to be saved over several server calls, then it is necessary to transfer a fixed address of a previously initialized temporary storage: <pre><code>&amp;AtServer\n\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u0430 \u041f\u0440\u0438\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0438\u041d\u0430\u0421\u0435\u0440\u0432\u0435\u0440\u0435(\u041e\u0442\u043a\u0430\u0437)\n    \u0410\u0434\u0440\u0435\u0441\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u0424\u043e\u043d\u043e\u0432\u043e\u0433\u043e\u0417\u0430\u0434\u0430\u043d\u0438\u044f = \u041f\u043e\u043c\u0435\u0441\u0442\u0438\u0442\u044c\u0412\u043e\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0435\u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435(\u041d\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043e, \u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440); // \u0420\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u0443\u0435\u043c \u0430\u0434\u0440\u0435\u0441 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0433\u043e \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430\nEndProcedure\n\n&amp;\u041d\u0430\u0421\u0435\u0440\u0432\u0435\u0440\u0435\n\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u041d\u0430\u0447\u0430\u0442\u044c\u041f\u043e\u0438\u0441\u043a\u041d\u0430\u0441\u0442\u0440\u043e\u0435\u043a\u0423\u0447\u0435\u0442\u043d\u043e\u0439\u0417\u0430\u043f\u0438\u0441\u0438()\n    \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b\u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f = \u0414\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435\u041e\u043f\u0435\u0440\u0430\u0446\u0438\u0438.\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b\u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f\u0424\u0443\u043d\u043a\u0446\u0438\u0438(\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440);\n    \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b\u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f.\u0410\u0434\u0440\u0435\u0441\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 = \u0410\u0434\u0440\u0435\u0441\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u0424\u043e\u043d\u043e\u0432\u043e\u0433\u043e\u0417\u0430\u0434\u0430\u043d\u0438\u044f; // \u0432\u0441\u0435\u0433\u0434\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043e\u0434\u043d\u043e \u0438 \u0442\u043e \u0436\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0435 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435\n\n    \u0412\u043e\u0437\u0432\u0440\u0430\u0442 \u0414\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435\u041e\u043f\u0435\u0440\u0430\u0446\u0438\u0438.\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c\u0424\u0443\u043d\u043a\u0446\u0438\u044e(\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b\u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f,\n        \"\u0421\u043f\u0440\u0430\u0432\u043e\u0447\u043d\u0438\u043a\u0438.\u0423\u0447\u0435\u0442\u043d\u044b\u0435\u0417\u0430\u043f\u0438\u0441\u0438\u042d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0439\u041f\u043e\u0447\u0442\u044b.\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438\u0423\u0447\u0435\u0442\u043d\u043e\u0439\u0417\u0430\u043f\u0438\u0441\u0438\",\n        \u0410\u0434\u0440\u0435\u0441\u042d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0439\u041f\u043e\u0447\u0442\u044b, \u041f\u0430\u0440\u043e\u043b\u044c);\nEndFunction\n</code></pre></li> </ul> <p>3 - Another example of preliminary initialization of temporary storage for reuse</p> <pre><code>// \u0432 \u0444\u043e\u0440\u043c\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\n&amp;\u041d\u0430\u0421\u0435\u0440\u0432\u0435\u0440\u0435\n\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u0430 \u041f\u0440\u0438\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0438\u041d\u0430\u0421\u0435\u0440\u0432\u0435\u0440\u0435(\u041e\u0442\u043a\u0430\u0437)\n    \u0410\u0434\u0440\u0435\u0441\u0422\u043e\u0432\u0430\u0440\u043e\u0432 = \u041f\u043e\u043c\u0435\u0441\u0442\u0438\u0442\u044c\u0412\u043e\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0435\u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435(\u041d\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043e, \u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440); // \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0440\u0435\u043a\u0432\u0438\u0437\u0438\u0442 \u0444\u043e\u0440\u043c\u044b\n\u041a\u043e\u043d\u0435\u0446\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u044b\n\n&amp;\u041d\u0430\u0421\u0435\u0440\u0432\u0435\u0440\u0435\n\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0422\u043e\u0432\u0430\u0440\u044b\u0412\u043e\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u043c\u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435()\n    \u0412\u043e\u0437\u0432\u0440\u0430\u0442 \u041f\u043e\u043c\u0435\u0441\u0442\u0438\u0442\u044c\u0412\u043e\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0435\u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435(\u0422\u043e\u0432\u0430\u0440\u044b.\u0412\u044b\u0433\u0440\u0443\u0437\u0438\u0442\u044c(), \u0410\u0434\u0440\u0435\u0441\u0422\u043e\u0432\u0430\u0440\u043e\u0432);\n\u041a\u043e\u043d\u0435\u0446\u0424\u0443\u043d\u043a\u0446\u0438\u0438\n\n// \u0438 \u0434\u0430\u043b\u0435\u0435 \u043f\u0440\u0438 \u043f\u0435\u0440\u0435\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0433\u043e \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430 \u043d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0443\u0434\u0430\u043b\u044f\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0438\u0437 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0433\u043e \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430:\n\n&amp;\u041d\u0430\u0421\u0435\u0440\u0432\u0435\u0440\u0435\n\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u0430 \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0422\u043e\u0432\u0430\u0440\u044b\u0418\u0437\u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430(\u0410\u0434\u0440\u0435\u0441\u0422\u043e\u0432\u0430\u0440\u043e\u0432\u0412\u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435)\n    \u041f\u043e\u0434\u043e\u0431\u0440\u0430\u043d\u043d\u044b\u0435\u0422\u043e\u0432\u0430\u0440\u044b = \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0418\u0437\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0433\u043e\u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430(\u0410\u0434\u0440\u0435\u0441\u0422\u043e\u0432\u0430\u0440\u043e\u0432\u0412\u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435);\n    \u041e\u0431\u044a\u0435\u043a\u0442.\u0422\u043e\u0432\u0430\u0440\u044b.\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c(\u041f\u043e\u0434\u043e\u0431\u0440\u0430\u043d\u043d\u044b\u0435\u0422\u043e\u0432\u0430\u0440\u044b);\n\u041a\u043e\u043d\u0435\u0446\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u044b\n</code></pre>"},{"location":"diagnostics/MissingTempStorageDeletion/#Sources","title":"Sources","text":"<ul> <li>Long-term operations on the server, part 3.1 - Standard 1C (RU)</li> <li>Minimizing the number of server calls, part 7.3 - Standard 1C (RU)</li> <li>Temporary Storage Engine - Developer's Guide (RU)</li> </ul>"},{"location":"diagnostics/MissingTempStorageDeletion/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/MissingTempStorageDeletion/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:MissingTempStorageDeletion-off\n// BSLLS:MissingTempStorageDeletion-on\n</code></pre>"},{"location":"diagnostics/MissingTempStorageDeletion/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"MissingTempStorageDeletion\": false\n</code></pre>"},{"location":"diagnostics/MissingTemporaryFileDeletion/","title":"Missing temporary file deletion after using (MissingTemporaryFileDeletion)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>5</code> <code>badpractice</code><code>standard</code>"},{"location":"diagnostics/MissingTemporaryFileDeletion/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>searchDeleteFileMethod</code> <code>String</code> <code>Keywords to search for delete/move files methods</code> <code>\u0423\u0434\u0430\u043b\u0438\u0442\u044c\u0424\u0430\u0439\u043b\u044b|DeleteFiles|\u041d\u0430\u0447\u0430\u0442\u044c\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435\u0424\u0430\u0439\u043b\u043e\u0432|BeginDeletingFiles|\u041f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u0442\u044c\u0424\u0430\u0439\u043b|MoveFile</code>"},{"location":"diagnostics/MissingTemporaryFileDeletion/#Description","title":"Description","text":"<p>After you finished working with temporary file or folder, you need to delete it yourself.  You should not rely on automatic deletion of files and folders before platform start. This can cause temp folder free space shortage.</p>"},{"location":"diagnostics/MissingTemporaryFileDeletion/#Examples","title":"Examples","text":"<p>Incorrect:</p> <pre><code>TempFileName = GetTempFileName(\"xml\");\nData.Write(TempFileName);\n// Not delete temporary file\n</code></pre> <p>Correct:</p> <pre><code>TempFileName = GetTempFileName(\"xml\");\nData.Write(TempFileName);\n\n// Work with file\n...\n\n// Delete temporary file\nTry\n   DeleteFiles(TempFileName);\nCatch\n   WriteLogEvent(\u041d\u0421\u0442\u0440(\"ru = 'My subsystem.Action'\"), EventLogLevel.Error, , , DetailErrorDescription(ErrorInfo()));\nEndTry;\n</code></pre>"},{"location":"diagnostics/MissingTemporaryFileDeletion/#Nuances","title":"Nuances","text":"<p>Diagnostics determines the correctness of working with temporary files by the presence of methods for deleting or moving.</p> <p>If the applied solution uses its own method of removing/moving over the platform one, then it is worth specifying it in the diagnostic parameter, adding it after <code>|</code>. Diagnostics understands both global methods and those located in common modules or manager modules.</p> <p>The following is an examples of a settings</p> <ul> <li>The global method <code>MyFileDeletion</code> in the <code>GlobalServer</code> module in the parameter is specified as <code>MyFileDeletion</code></li> <li>Method <code>MyFileDeletion</code> in the common module <code>FilesClientServer</code> in the parameter is specified as <code>FilesClientServer.MyFileDelete</code></li> <li>Method <code>MyFileOperations</code> in the module of the catalog manager <code>FileOperations</code> in the parameter is specified as <code>Catalogs.FileOperations.MyFileOperations</code></li> </ul> <p>and so on.</p>"},{"location":"diagnostics/MissingTemporaryFileDeletion/#Sources","title":"Sources","text":"<ul> <li>File system access from application code (RU)</li> </ul>"},{"location":"diagnostics/MissingTemporaryFileDeletion/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/MissingTemporaryFileDeletion/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:MissingTemporaryFileDeletion-off\n// BSLLS:MissingTemporaryFileDeletion-on\n</code></pre>"},{"location":"diagnostics/MissingTemporaryFileDeletion/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"MissingTemporaryFileDeletion\": {\n\"searchDeleteFileMethod\": \"\u0423\u0434\u0430\u043b\u0438\u0442\u044c\u0424\u0430\u0439\u043b\u044b|DeleteFiles|\u041d\u0430\u0447\u0430\u0442\u044c\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435\u0424\u0430\u0439\u043b\u043e\u0432|BeginDeletingFiles|\u041f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u0442\u044c\u0424\u0430\u0439\u043b|MoveFile\"\n}\n</code></pre>"},{"location":"diagnostics/MissingVariablesDescription/","title":"All variables declarations must have a description (MissingVariablesDescription)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Minor</code> <code>Yes</code> <code>1</code> <code>standard</code>"},{"location":"diagnostics/MissingVariablesDescription/#Description","title":"Description","text":"<p>All module variables and export variables must have comments.</p>"},{"location":"diagnostics/MissingVariablesDescription/#Examples","title":"Examples","text":"<p>Incorrect:</p> <pre><code>Var Context;\n</code></pre> <p>Correct:</p> <pre><code>Var Context; // Detailed description that explains the purpose of the variable \n\n// Detailed description that explains the purpose of the variable \nVar Context;\n</code></pre>"},{"location":"diagnostics/MissingVariablesDescription/#Sources","title":"Sources","text":"<ul> <li>Source: Standard: Module structure (RU)</li> </ul>"},{"location":"diagnostics/MissingVariablesDescription/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/MissingVariablesDescription/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:MissingVariablesDescription-off\n// BSLLS:MissingVariablesDescription-on\n</code></pre>"},{"location":"diagnostics/MissingVariablesDescription/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"MissingVariablesDescription\": false\n</code></pre>"},{"location":"diagnostics/MultilineStringInQuery/","title":"Multi-line literal in query (MultilineStringInQuery)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Critical</code> <code>Yes</code> <code>1</code> <code>badpractice</code><code>suspicious</code><code>unpredictable</code>"},{"location":"diagnostics/MultilineStringInQuery/#Description","title":"Description","text":"<p>Multi-line literals are rarely used in query texts, mostly these are error results due to an incorrect number of double quotes.</p>"},{"location":"diagnostics/MultilineStringInQuery/#Examples","title":"Examples","text":"<p>In the example below, the selection will have two fields instead of three.</p> <pre><code>Query = New Query;\nQuery.Text = \"SELECT\n|   OrderGoods.Cargo AS Cargo,\n|   ISNULL(OrderGoods.Cargo.Code, \"\") AS CargoCode, // quote error here, should be \"\"\"\"\n|   ISNULL(OrderGoods.Cargo.Name, \"\") AS CargoName\n|FROM\n|   Document.Order.Goods AS OrderGoods\n|WHERE\n|   OrderGoods.Ref = &amp;Ref\";\n</code></pre>"},{"location":"diagnostics/MultilineStringInQuery/#Sources","title":"Sources","text":""},{"location":"diagnostics/MultilineStringInQuery/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/MultilineStringInQuery/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:MultilineStringInQuery-off\n// BSLLS:MultilineStringInQuery-on\n</code></pre>"},{"location":"diagnostics/MultilineStringInQuery/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"MultilineStringInQuery\": false\n</code></pre>"},{"location":"diagnostics/MultilingualStringHasAllDeclaredLanguages/","title":"There is a localized text for all languages declared in the configuration (MultilingualStringHasAllDeclaredLanguages)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Minor</code> <code>Yes</code> <code>2</code> <code>error</code><code>localize</code>"},{"location":"diagnostics/MultilingualStringHasAllDeclaredLanguages/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>declaredLanguages</code> <code>String</code> <code>Declared languages</code> <code>ru</code>"},{"location":"diagnostics/MultilingualStringHasAllDeclaredLanguages/#Description","title":"Description","text":"<p>NStr in a multilingual configuration has different fragments for different languages. If you start a session under a language code that is not in the string passed to NStr, it will return an empty string.</p>"},{"location":"diagnostics/MultilingualStringHasAllDeclaredLanguages/#Sources","title":"Sources","text":"<ul> <li>Standard: Localization Requirements (RU)</li> </ul>"},{"location":"diagnostics/MultilingualStringHasAllDeclaredLanguages/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/MultilingualStringHasAllDeclaredLanguages/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:MultilingualStringHasAllDeclaredLanguages-off\n// BSLLS:MultilingualStringHasAllDeclaredLanguages-on\n</code></pre>"},{"location":"diagnostics/MultilingualStringHasAllDeclaredLanguages/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"MultilingualStringHasAllDeclaredLanguages\": {\n\"declaredLanguages\": \"ru\"\n}\n</code></pre>"},{"location":"diagnostics/MultilingualStringUsingWithTemplate/","title":"Partially localized text is used in the StrTemplate function (MultilingualStringUsingWithTemplate)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>2</code> <code>error</code><code>localize</code>"},{"location":"diagnostics/MultilingualStringUsingWithTemplate/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>declaredLanguages</code> <code>String</code> <code>Declared languages</code> <code>ru</code>"},{"location":"diagnostics/MultilingualStringUsingWithTemplate/#Description","title":"Description","text":"<p>NStr in a multilingual configuration has different fragments for different languages. If you start a session under a language code that is not in the string passed to NStr, it will return an empty string. When used with StrTemplate, an empty string returned from NStr will throw an exception.</p>"},{"location":"diagnostics/MultilingualStringUsingWithTemplate/#Sources","title":"Sources","text":"<ul> <li>localization requirements (RU)</li> </ul>"},{"location":"diagnostics/MultilingualStringUsingWithTemplate/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/MultilingualStringUsingWithTemplate/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:MultilingualStringUsingWithTemplate-off\n// BSLLS:MultilingualStringUsingWithTemplate-on\n</code></pre>"},{"location":"diagnostics/MultilingualStringUsingWithTemplate/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"MultilingualStringUsingWithTemplate\": {\n\"declaredLanguages\": \"ru\"\n}\n</code></pre>"},{"location":"diagnostics/NestedConstructorsInStructureDeclaration/","title":"Nested constructors with parameters in structure declaration (NestedConstructorsInStructureDeclaration)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Minor</code> <code>Yes</code> <code>10</code> <code>badpractice</code><code>brainoverload</code>"},{"location":"diagnostics/NestedConstructorsInStructureDeclaration/#Description","title":"Description","text":"<p>It is not recommended to use constructors of other objects in the structure constructor if these constructors accept parameters. In particular, in the constructor of one structure it is not recommended to create other structures with the declaration of property values.</p>"},{"location":"diagnostics/NestedConstructorsInStructureDeclaration/#Examples","title":"Examples","text":"<p>Incorrect</p> <pre><code>GoodsServer.MakeGoods(\n  Object.Products,\n  New Structure(\n  \"CharacteristicsUsed,\n  |Type, Variant\",\n   New Structure(\"Good\", \"CharacteristicsUsed\"),\n   New Structure(\"Good\", \"Type\"),\n   New Structure(\"Good\", \"Variant\")\n  )\n );\n</code></pre> <p>Correct</p> <pre><code>Parameters = New Structure;\nParameters.\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c(\"CharacteristicsUsed\", New Structure(\"Good\", \"CharacteristicsUsed\"));\nParameters.\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c(\"Type\",                New Structure(\"Good\", \"Type\"));\nParameters.\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c(\"Variant\",             New Structure(\"Good\", \"Variant\"));\nGoodsServer.MakeGoods(Object.Products,     Parameters);\n</code></pre>"},{"location":"diagnostics/NestedConstructorsInStructureDeclaration/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/NestedConstructorsInStructureDeclaration/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:NestedConstructorsInStructureDeclaration-off\n// BSLLS:NestedConstructorsInStructureDeclaration-on\n</code></pre>"},{"location":"diagnostics/NestedConstructorsInStructureDeclaration/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"NestedConstructorsInStructureDeclaration\": false\n</code></pre>"},{"location":"diagnostics/NestedFunctionInParameters/","title":"Initialization of method and constructor parameters by calling nested methods (NestedFunctionInParameters)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Minor</code> <code>Yes</code> <code>2</code> <code>standard</code><code>brainoverload</code><code>badpractice</code>"},{"location":"diagnostics/NestedFunctionInParameters/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>allowOneliner</code> <code>Boolean</code> <code>Allow oneliner expression</code> <code>true</code> <code>allowedMethodNames</code> <code>String</code> <code>Names of methods that are allowed to be used to initialize parameters</code> <code>\u041d\u0421\u0442\u0440,NStr,\u041f\u0440\u0435\u0434\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0435\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435,PredefinedValue</code>"},{"location":"diagnostics/NestedFunctionInParameters/#Description","title":"Description","text":"<p>Similarly, it is not recommended to use nested calls of other functions or other parameterized constructors when initializing constructor parameters .</p> <p>At the same time, if the code with nested calls is compact (does not require the hyphenation of expressions) and is easy to read, then nested calls are acceptable.</p>"},{"location":"diagnostics/NestedFunctionInParameters/#Examples","title":"Examples","text":"<p>Incorrect:</p> <pre><code>Attachments.Insert(  AttachedFile.Description,  New Picture(GetFromTempStorage(   AttachedFiles.GetFileData(AttachedFile.Ref).RefToFileBinaryData)));\n</code></pre> <p>It is correct to break such calls into separate operators using additional local variables:</p> <pre><code>FileImageHRef = AttachedFiles.GetFileData(AttachedFile.Ref).RefToFileBinaryData; PictureData = New Picture(GetFromTempStorage(FileImageHRef)); Attachments.Insert(AttachedFile.Description, PictureData);\n</code></pre>"},{"location":"diagnostics/NestedFunctionInParameters/#Sources","title":"Sources","text":"<ul> <li>Parameters of procedures and functions (RU)</li> </ul>"},{"location":"diagnostics/NestedFunctionInParameters/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/NestedFunctionInParameters/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:NestedFunctionInParameters-off\n// BSLLS:NestedFunctionInParameters-on\n</code></pre>"},{"location":"diagnostics/NestedFunctionInParameters/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"NestedFunctionInParameters\": {\n\"allowOneliner\": true,\n\"allowedMethodNames\": \"\u041d\u0421\u0442\u0440,NStr,\u041f\u0440\u0435\u0434\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0435\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435,PredefinedValue\"\n}\n</code></pre>"},{"location":"diagnostics/NestedStatements/","title":"Control flow statements should not be nested too deep (NestedStatements)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Critical</code> <code>Yes</code> <code>30</code> <code>badpractice</code><code>brainoverload</code>"},{"location":"diagnostics/NestedStatements/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>maxAllowedLevel</code> <code>Integer</code> <code>Max nested level</code> <code>4</code>"},{"location":"diagnostics/NestedStatements/#Description","title":"Description","text":"<p>Nested \"If, \"For\", \"For Each\", \"While\" and \"Try\" operators are the key ingredients for creating so-called \"spaghetti code\".</p> <p>Such code is hard for reading, refactoring and support.</p>"},{"location":"diagnostics/NestedStatements/#Examples","title":"Examples","text":"<p>Incorrect</p> <pre><code>If Something Then                  // Allowed - level = 1\n  /* ... */\n  If Some Then             // Allowed - level = 2\n    /* ... */\n    For Num = 0 To 10 Do          // Allowed - level = 3\n      /* ... */\n      If OneMoreCondition Then     // Acceptable - level = 4, limit is reached, not yet breached\n        If SomethingElse Then        // Level = 5, Limit is breached\n          /* ... */\n        EndIf;\n        Return;\n      EndIf;\n    EndDo;\n  EndIf;\nEndIf;\n</code></pre>"},{"location":"diagnostics/NestedStatements/#Sources","title":"Sources","text":"<ul> <li>RSPEC-134</li> </ul>"},{"location":"diagnostics/NestedStatements/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/NestedStatements/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:NestedStatements-off\n// BSLLS:NestedStatements-on\n</code></pre>"},{"location":"diagnostics/NestedStatements/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"NestedStatements\": {\n\"maxAllowedLevel\": 4\n}\n</code></pre>"},{"location":"diagnostics/NestedTernaryOperator/","title":"Nested ternary operator (NestedTernaryOperator)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>5</code> <code>brainoverload</code>"},{"location":"diagnostics/NestedTernaryOperator/#Description","title":"Description","text":"<p>Use of nested ternary operators decrease code readability.</p>"},{"location":"diagnostics/NestedTernaryOperator/#Examples","title":"Examples","text":""},{"location":"diagnostics/NestedTernaryOperator/#Incorrect-use-of-ternary-operators","title":"Incorrect use of ternary operators","text":"<pre><code>Result = ?(X%15 &lt;&gt; 0, ?(X%5 &lt;&gt; 0, ?(X%3 &lt;&gt; 0, x, \"Fizz\"), \"Buzz\"), \"FizzBuzz\"); \n</code></pre> <pre><code>If ?(P.Emp_emptype = Null, 0, PageEmp_emptype) = 0 Then\n\n      Status = \"Done\";\n\nEndIf;\n</code></pre>"},{"location":"diagnostics/NestedTernaryOperator/#Possible-implementation","title":"Possible implementation","text":"<pre><code>If x % 15 = 0 Then\n    Result = \"FizzBuzz\";\nElseIf x % 3 = 0 Then\n    Result = \"Fizz\";\nElseIf x % 5 = 0 Then\n    Result = \"Buzz\";\nElse\n    Result = x;\nEndIf;\n</code></pre> <pre><code>If PageEmp_emptype = Null OR PageEmp_emptype = 0 Then\n\n      Status = \"Done\";\n\nEnd If;\n</code></pre>"},{"location":"diagnostics/NestedTernaryOperator/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/NestedTernaryOperator/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:NestedTernaryOperator-off\n// BSLLS:NestedTernaryOperator-on\n</code></pre>"},{"location":"diagnostics/NestedTernaryOperator/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"NestedTernaryOperator\": false\n</code></pre>"},{"location":"diagnostics/NonExportMethodsInApiRegion/","title":"Non export methods in API regions (NonExportMethodsInApiRegion)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>1</code> <code>standard</code>"},{"location":"diagnostics/NonExportMethodsInApiRegion/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>skipAnnotatedMethods</code> <code>Boolean</code> <code>Skip extension annotated methods</code> <code>false</code>"},{"location":"diagnostics/NonExportMethodsInApiRegion/#Description","title":"Description","text":"<ul> <li> <p>The \"API Interface\" region contains export procedures and functions intended for use by other configuration objects or other programs (for example, via an external connection).</p> </li> <li> <p>The \u201cService Programming Interface\u201d region is intended for modules that are part of some functional subsystem. It should contain export procedures and functions that can only be called from other functional subsystems of the same library.</p> </li> </ul>"},{"location":"diagnostics/NonExportMethodsInApiRegion/#Sources","title":"Sources","text":"<ul> <li>Source: Standard: Module structure (RU)</li> </ul>"},{"location":"diagnostics/NonExportMethodsInApiRegion/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/NonExportMethodsInApiRegion/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:NonExportMethodsInApiRegion-off\n// BSLLS:NonExportMethodsInApiRegion-on\n</code></pre>"},{"location":"diagnostics/NonExportMethodsInApiRegion/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"NonExportMethodsInApiRegion\": {\n\"skipAnnotatedMethods\": false\n}\n</code></pre>"},{"location":"diagnostics/NonStandardRegion/","title":"Non-standard region of module (NonStandardRegion)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Info</code> <code>Yes</code> <code>1</code> <code>standard</code>"},{"location":"diagnostics/NonStandardRegion/#Description","title":"Description","text":"<p>All module code should be structured and divided into sections (regions).  The set of sections for each type of module (form module, object module, common module, etc.) is uniquely determined, the presence of extraneous sections is unacceptable.</p>"},{"location":"diagnostics/NonStandardRegion/#Examples","title":"Examples","text":""},{"location":"diagnostics/NonStandardRegion/#Sources","title":"Sources","text":"<ul> <li>Source: Standard: Module structure (RU)</li> </ul>"},{"location":"diagnostics/NonStandardRegion/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/NonStandardRegion/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:NonStandardRegion-off\n// BSLLS:NonStandardRegion-on\n</code></pre>"},{"location":"diagnostics/NonStandardRegion/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"NonStandardRegion\": false\n</code></pre>"},{"location":"diagnostics/NumberOfOptionalParams/","title":"Limit number of optional parameters in method (NumberOfOptionalParams)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Minor</code> <code>Yes</code> <code>30</code> <code>standard</code><code>brainoverload</code>"},{"location":"diagnostics/NumberOfOptionalParams/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>maxOptionalParamsCount</code> <code>Integer</code> <code>Max number of optional parameters</code> <code>3</code>"},{"location":"diagnostics/NumberOfOptionalParams/#Description","title":"Description","text":"<p>It is not recommended to declare many parameters in functions (best practice to use not more than seven parameters). Meanwhile there should not be many parameters with default values set (best practice to have not more than three such parameters). Otherwise code readability decreases. For example it is easy to make a mistake in number of commas passing optional parameters. If need to pass many parameters to a function, it is recommended to group same-type parameters into one or more composite parameters of type Structure.</p>"},{"location":"diagnostics/NumberOfOptionalParams/#Examples","title":"Examples","text":"<p>Incorrect:</p> <pre><code>// Create an item in catalog \"Goods\"\nProcedure CreateSKU(Name, Goods, Units, Weight, Check = True)\n// ... \nEndProcedure\n</code></pre> <p>Correct: Group parameters, having goods item properties into Structure Values.</p> <pre><code>// Create item in catalog \"Goods\"\nProcedure CreateNewGoods(Values, Check = True)\nEndProcedure\n</code></pre>"},{"location":"diagnostics/NumberOfOptionalParams/#Sources","title":"Sources","text":"<ul> <li>Standard: Parameters of procedures and functions (RU)</li> </ul>"},{"location":"diagnostics/NumberOfOptionalParams/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/NumberOfOptionalParams/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:NumberOfOptionalParams-off\n// BSLLS:NumberOfOptionalParams-on\n</code></pre>"},{"location":"diagnostics/NumberOfOptionalParams/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"NumberOfOptionalParams\": {\n\"maxOptionalParamsCount\": 3\n}\n</code></pre>"},{"location":"diagnostics/NumberOfParams/","title":"Number of parameters in method (NumberOfParams)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Minor</code> <code>Yes</code> <code>30</code> <code>standard</code><code>brainoverload</code>"},{"location":"diagnostics/NumberOfParams/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>maxParamsCount</code> <code>Integer</code> <code>Max number of params count</code> <code>7</code>"},{"location":"diagnostics/NumberOfParams/#Description","title":"Description","text":"<p>It is not recommended to declare many parameters in functions (best practice to use not more than seven parameters). In So doing there should not be many parameters with default values set (best practice to have not more than three such parameters). Otherwise code readability decreases. For example it is easy to make a mistake in number of commas passing optional parameters.</p> <p>If need to pass many parameters to a function, it is recommended to group same-type parameters into one or more composite parameters of type Structure.</p>"},{"location":"diagnostics/NumberOfParams/#Examples","title":"Examples","text":"<p>Incorrect:</p> <pre><code>// Create an item in catalog \"Goods\"\nProcedure CreateSKU(Name, Goods, Units, Weight, Check = True)\n// ... \nEndProcedure\n</code></pre> <p>Correct: Group parameters, having goods item properties into Structure Values.</p> <pre><code>// Create item in catalog \"Goods\"\nProcedure CreateNewGoods(Values, Check = True)\nEndProcedure\n</code></pre>"},{"location":"diagnostics/NumberOfParams/#Sources","title":"Sources","text":"<ul> <li>Standard: Parameters of procedures and functions (RU)</li> </ul>"},{"location":"diagnostics/NumberOfParams/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/NumberOfParams/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:NumberOfParams-off\n// BSLLS:NumberOfParams-on\n</code></pre>"},{"location":"diagnostics/NumberOfParams/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"NumberOfParams\": {\n\"maxParamsCount\": 7\n}\n</code></pre>"},{"location":"diagnostics/NumberOfValuesInStructureConstructor/","title":"Limit on the number of property values passed to the structure constructor (NumberOfValuesInStructureConstructor)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Minor</code> <code>Yes</code> <code>10</code> <code>standard</code><code>brainoverload</code>"},{"location":"diagnostics/NumberOfValuesInStructureConstructor/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>maxValuesCount</code> <code>Integer</code> <code>Allowed number parameter values passed to structure constructor</code> <code>3</code>"},{"location":"diagnostics/NumberOfValuesInStructureConstructor/#Description","title":"Description","text":"<p>When creating an object of type Structure it is not recommended to pass more than 3 property values to the constructor. Instead, it is recommended to use the Insert method or assign values to properties explicitly</p>"},{"location":"diagnostics/NumberOfValuesInStructureConstructor/#Examples","title":"Examples","text":"<p>Incorrect:</p> <pre><code>Parameters  = New Structure(\n   \"UseParam1,\n   |UseParam2,\n   |UseParam3,\n   |UseParam4,\n   |UseParam5,\n   |DataAddress,\n   |SettingsAddress,\n   |UUID,\n   |Description\",\n   True,\n   True,\n   True,\n   True,\n   True,\n   Current.DataAddress,\n   ?(Current.DataAddress &lt;&gt; Undefined,\n        Current.DataAddress,\n        EmptyAddress()),\n   UUID,\n   Description));\n</code></pre> <p>Correct:</p> <pre><code>Parameters  = New Structure;\n\nParameters.Insert(\"UseParam1\", True);\nParameters.Insert(\"UseParam2\", True);\nParameters.Insert(\"UseParam3\", True);\nParameters.Insert(\"UseParam4\", True);\nParameters.Insert(\"UseParam5\", True);\nParameters.Insert(\"DataAddress\", Current.DataAddress);\nParameters.Insert(\"SettingsAddress\", ?(Current.DataAddress &lt;&gt; Undefined,\n                                                                                                                         Current.DataAddress,\n                                                                                                                         EmptyAddress));\nParameters.Insert(\"UUID \", UUID);\nParameters.Insert(\"Description\", Description);\n</code></pre>"},{"location":"diagnostics/NumberOfValuesInStructureConstructor/#Sources","title":"Sources","text":"<ul> <li>Standard: Using objects of type Structure (RU)</li> </ul>"},{"location":"diagnostics/NumberOfValuesInStructureConstructor/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/NumberOfValuesInStructureConstructor/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:NumberOfValuesInStructureConstructor-off\n// BSLLS:NumberOfValuesInStructureConstructor-on\n</code></pre>"},{"location":"diagnostics/NumberOfValuesInStructureConstructor/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"NumberOfValuesInStructureConstructor\": {\n\"maxValuesCount\": 3\n}\n</code></pre>"},{"location":"diagnostics/OSUsersMethod/","title":"Using method OSUsers (OSUsersMethod)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Security Hotspot</code> <code>BSL</code> <code>Critical</code> <code>Yes</code> <code>15</code> <code>suspicious</code>"},{"location":"diagnostics/OSUsersMethod/#Description","title":"Description","text":"<p>Using method may carry a malicious function.</p>"},{"location":"diagnostics/OSUsersMethod/#Sources","title":"Sources","text":"<p>Source: Pass-the-hash attack</p>"},{"location":"diagnostics/OSUsersMethod/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/OSUsersMethod/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:OSUsersMethod-off\n// BSLLS:OSUsersMethod-on\n</code></pre>"},{"location":"diagnostics/OSUsersMethod/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"OSUsersMethod\": false\n</code></pre>"},{"location":"diagnostics/OneStatementPerLine/","title":"One statement per line (OneStatementPerLine)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Minor</code> <code>Yes</code> <code>2</code> <code>standard</code><code>design</code>"},{"location":"diagnostics/OneStatementPerLine/#Description","title":"Description","text":"<p>Module texts are formatted according to the \"one statement in one line\" principle. Several statements are acceptable in case of same-type assignment operators. For example:</p> <p><code>StartIndex = 0; Index = 0; Result = 0;</code></p>"},{"location":"diagnostics/OneStatementPerLine/#Sources","title":"Sources","text":"<ul> <li>Source: Standard: Modules (RU)</li> </ul>"},{"location":"diagnostics/OneStatementPerLine/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/OneStatementPerLine/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:OneStatementPerLine-off\n// BSLLS:OneStatementPerLine-on\n</code></pre>"},{"location":"diagnostics/OneStatementPerLine/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"OneStatementPerLine\": false\n</code></pre>"},{"location":"diagnostics/OrderOfParams/","title":"Order of Parameters in method (OrderOfParams)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>30</code> <code>standard</code><code>design</code>"},{"location":"diagnostics/OrderOfParams/#Description","title":"Description","text":"<p>Optional parameters (parameters with default values) should follow mandatory parameters (the ones without default values).</p>"},{"location":"diagnostics/OrderOfParams/#Examples","title":"Examples","text":"<pre><code>Function CurrencyRateOnDate(Currency, Date = Notdefined) Export\n</code></pre>"},{"location":"diagnostics/OrderOfParams/#Sources","title":"Sources","text":"<ul> <li>Standard: Parameters of procedures and functions (RU)</li> </ul>"},{"location":"diagnostics/OrderOfParams/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/OrderOfParams/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:OrderOfParams-off\n// BSLLS:OrderOfParams-on\n</code></pre>"},{"location":"diagnostics/OrderOfParams/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"OrderOfParams\": false\n</code></pre>"},{"location":"diagnostics/OrdinaryAppSupport/","title":"Ordinary application support (OrdinaryAppSupport)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>1</code> <code>standard</code><code>unpredictable</code>"},{"location":"diagnostics/OrdinaryAppSupport/#Description","title":"Description","text":"<p>To maintain backward compatibility with various proprietary and third-party solutions, external data processes and reports developed on previous versions of the 1C: Enterprise platform 8.0 and 8.1, the configuration should also support launching in ordinary application (thick client) and external connection modes for administrators (users with full rights).</p> <p>For this it is recommended:</p> <ul> <li>The configuration property \"Use managed forms in a ordinary application\" is set to True.</li> <li>Set the property \"Use ordinary forms in managed mode\" to False.</li> <li>Adhere to the general scheme for setting the attributes of common modules, and conduct the development itself in the Designer in edit mode for both launch modes - managed and ordinary applications (Service menu - Options - General tab).</li> </ul> <p>When developing in EDT, properties are set through the Designer.</p> <p>The refusal to support the launch of configuration in the ordinary application and external connection modes for administrators is possible only in certain justified cases.</p>"},{"location":"diagnostics/OrdinaryAppSupport/#Examples","title":"Examples","text":""},{"location":"diagnostics/OrdinaryAppSupport/#Sources","title":"Sources","text":"<ul> <li>Source: Standard: General Configuration Requirements (RU)</li> </ul>"},{"location":"diagnostics/OrdinaryAppSupport/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/OrdinaryAppSupport/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:OrdinaryAppSupport-off\n// BSLLS:OrdinaryAppSupport-on\n</code></pre>"},{"location":"diagnostics/OrdinaryAppSupport/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"OrdinaryAppSupport\": false\n</code></pre>"},{"location":"diagnostics/PairingBrokenTransaction/","title":"Violation of pairing using methods \"BeginTransaction()\" &amp; \"CommitTransaction()\" / \"RollbackTransaction()\" (PairingBrokenTransaction)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>15</code> <code>standard</code>"},{"location":"diagnostics/PairingBrokenTransaction/#Description","title":"Description","text":"<p>Beginning of transaction and it's committing (rollback) have to be executed withing context of the same method.</p>"},{"location":"diagnostics/PairingBrokenTransaction/#Examples","title":"Examples","text":"<p>Correct</p> <pre><code>Procedure WriteDataToIB()\n\n    StartTransaction();\n\n    Try\n        ... // read or write data\n        DocumentObject.Write()\n        CommitTransaction();\n    Raise\n        RollbackTransaction();\n        ... // additional steps to handle the exception\n    EndTry;\n\nEndProcedure\n</code></pre> <p>Incorrect</p> <pre><code>Procedure WriteDataToIB()\n\n    StartTransaction();\n    WriteDocument();\n\nEndProcedure;\n\nProcedure WriteDocument()\n\n    Try\n        ... // read or write data\n        DocumentObject.Write()\n        CommitTransaction();\n    Raise\n        RollbackTransaction();\n        ... // additional steps to handle the exception\n    EndTry;\n\nEndProcedure\n</code></pre>"},{"location":"diagnostics/PairingBrokenTransaction/#Sources","title":"Sources","text":"<ul> <li>Transactions: Rules of Use (RU)</li> </ul>"},{"location":"diagnostics/PairingBrokenTransaction/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/PairingBrokenTransaction/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:PairingBrokenTransaction-off\n// BSLLS:PairingBrokenTransaction-on\n</code></pre>"},{"location":"diagnostics/PairingBrokenTransaction/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"PairingBrokenTransaction\": false\n</code></pre>"},{"location":"diagnostics/ParseError/","title":"Source code parse error (ParseError)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code><code>OS</code> <code>Critical</code> <code>Yes</code> <code>5</code> <code>error</code>"},{"location":"diagnostics/ParseError/#Description","title":"Description","text":"<p>The error occurs if the source code of the module is written in violation of the language syntax or if the preprocessor instructions are used incorrectly.</p> <p>Separate grammatical constructions, expressions, as well as declarations and places for calling procedures and functions, should not be split by preprocessor instructions and regions.</p>"},{"location":"diagnostics/ParseError/#Examples","title":"Examples","text":"<p>Incorrect:</p> <pre><code>Procedure Example1()\n  a = 1\n#Region RegionName\n    + 2;\n#EndRegion // statement split\nEndProcedure\n\n#Region RegionName\nProcedure Example2()\n    // ...\n#EndRegion // procedure split\nEndProcedure\n\nIf &lt;...&gt; Then\n    // ...\n#If webClient Then // If-Then block split\nElse\n    // ...\n#EndIf\nEndIf;\n\nResult = Example4(Parameter1,\n#If Client Then\n  Parameter2, // incorrect function call\n#EndIf\n  Parameter3);\n</code></pre>"},{"location":"diagnostics/ParseError/#Sources","title":"Sources","text":"<ul> <li>Standard: Use of compilation and preprocessor directives (RU)</li> </ul>"},{"location":"diagnostics/ParseError/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/ParseError/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:ParseError-off\n// BSLLS:ParseError-on\n</code></pre>"},{"location":"diagnostics/ParseError/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"ParseError\": false\n</code></pre>"},{"location":"diagnostics/ProcedureReturnsValue/","title":"Procedure should not return Value (ProcedureReturnsValue)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code><code>OS</code> <code>Blocker</code> <code>Yes</code> <code>5</code> <code>error</code>"},{"location":"diagnostics/ProcedureReturnsValue/#Description","title":"Description","text":"<p><code>Procedure</code>, unlike a <code>Function</code> cannot return values. This diagnostic finds procedures where there is a <code>Return</code> statement with a value.</p>"},{"location":"diagnostics/ProcedureReturnsValue/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/ProcedureReturnsValue/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:ProcedureReturnsValue-off\n// BSLLS:ProcedureReturnsValue-on\n</code></pre>"},{"location":"diagnostics/ProcedureReturnsValue/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"ProcedureReturnsValue\": false\n</code></pre>"},{"location":"diagnostics/PublicMethodsDescription/","title":"All public methods must have a description (PublicMethodsDescription)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Info</code> <code>Yes</code> <code>1</code> <code>standard</code><code>brainoverload</code><code>badpractice</code>"},{"location":"diagnostics/PublicMethodsDescription/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>checkAllRegion</code> <code>Boolean</code> <code>Test methods without regard to the areas in which they are located</code> <code>false</code>"},{"location":"diagnostics/PublicMethodsDescription/#Description","title":"Description","text":"<p>All export methods in the <code>Public</code> region must have a description.</p>"},{"location":"diagnostics/PublicMethodsDescription/#Sources","title":"Sources","text":"<ul> <li>Standard: \"Procedure and function defenition\". Paragraph 2 (RU)</li> </ul>"},{"location":"diagnostics/PublicMethodsDescription/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/PublicMethodsDescription/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:PublicMethodsDescription-off\n// BSLLS:PublicMethodsDescription-on\n</code></pre>"},{"location":"diagnostics/PublicMethodsDescription/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"PublicMethodsDescription\": {\n\"checkAllRegion\": false\n}\n</code></pre>"},{"location":"diagnostics/QueryParseError/","title":"Query text parsing error (QueryParseError)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>5</code> <code>standard</code><code>sql</code><code>badpractice</code>"},{"location":"diagnostics/QueryParseError/#Description","title":"Description","text":"<p>When writing queries, you must follow the following rule: the query text must be opened by the query designer.</p> <p>This rule allows you to quickly check the correctness of the syntax of the query, as well as revision and maintenance.</p>"},{"location":"diagnostics/QueryParseError/#Examples","title":"Examples","text":"<p>Incorrect</p> <pre><code>Text = \"SELECT\n| Goods.Name  AS Name ,\n| Goods. \" + FieldNameCode + \" AS Code\n|From\n| Catalog.Goods \u041a\u0410\u041a Goods\";\n</code></pre> <p>Correct</p> <pre><code>Text = \"SELECT\n| Goods.Name AS Name,\n| &amp;FieldNameCode AS Code\n|FROM\n| Catelog.Goods AS Goods\";\n\nText = StrReplace(Text, \n                            \"&amp;FieldNameCode\", \n                            \"Goods.\" + FieldNameCode);\n</code></pre>"},{"location":"diagnostics/QueryParseError/#Sources","title":"Sources","text":"<ul> <li>Standard: Working with queries (RU). Formatting queries texts</li> </ul>"},{"location":"diagnostics/QueryParseError/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/QueryParseError/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:QueryParseError-off\n// BSLLS:QueryParseError-on\n</code></pre>"},{"location":"diagnostics/QueryParseError/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"QueryParseError\": false\n</code></pre>"},{"location":"diagnostics/QueryToMissingMetadata/","title":"Using non-existent metadata in the query (QueryToMissingMetadata)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Blocker</code> <code>Yes</code> <code>5</code> <code>suspicious</code><code>sql</code>"},{"location":"diagnostics/QueryToMissingMetadata/#Description","title":"Description","text":"<p>Due to frequent changes to the metadata model, queries may appear that refer to renamed or deleted metadata. Also, errors can occur when you manually change queries, without checking with the query designer.</p> <p>When accessing non-existent metadata in a query, a runtime error will occur.</p>"},{"location":"diagnostics/QueryToMissingMetadata/#Examples","title":"Examples","text":"<p>Query for an already deleted register: <pre><code>SELECT\n    Table.Field1 AS Field1\nFROM\n    InformationRegister.InfoRegOld AS Table\n</code></pre> Query with a join to the renamed register: <pre><code>SELECT\n    Table.Field1 AS Field1\nFROM\n     InformationRegister.InfoReg AS Table \n     INNER JOIN InformationRegister.InfoRegOld AS FilterTable\n     ON FilterTable.Field2 = Table.Field2\n</code></pre></p>"},{"location":"diagnostics/QueryToMissingMetadata/#Sources","title":"Sources","text":"<ul> <li>Development standards. Working with queries (RU)</li> <li>Development standards. Optimizing queries (RU)</li> </ul>"},{"location":"diagnostics/QueryToMissingMetadata/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/QueryToMissingMetadata/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:QueryToMissingMetadata-off\n// BSLLS:QueryToMissingMetadata-on\n</code></pre>"},{"location":"diagnostics/QueryToMissingMetadata/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"QueryToMissingMetadata\": false\n</code></pre>"},{"location":"diagnostics/RedundantAccessToObject/","title":"Redundant access to an object (RedundantAccessToObject)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Info</code> <code>Yes</code> <code>1</code> <code>standard</code><code>clumsy</code>"},{"location":"diagnostics/RedundantAccessToObject/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>checkObjectModule</code> <code>Boolean</code> <code>Check object modules</code> <code>true</code> <code>checkFormModule</code> <code>Boolean</code> <code>Check form modules</code> <code>true</code> <code>checkRecordSetModule</code> <code>Boolean</code> <code>Check record set modules</code> <code>true</code>"},{"location":"diagnostics/RedundantAccessToObject/#Description","title":"Description","text":"<p>In the forms and modules of objects, it is wrong to refer to the attributes through the property ThisObject. In common modules, it is redundant to refer to methods through their name, except for modules with Cashed.</p>"},{"location":"diagnostics/RedundantAccessToObject/#Examples","title":"Examples","text":"<p>In the ObjectModule of the Document with the attribute <code>Countractor</code>, it is wrong to use <pre><code>ThisObject.Contractor = GetContractor();\n</code></pre></p> <p>correctly use the props directly <pre><code>Contractor = GetContractor();\n</code></pre></p> <p>In the common module <code>Commons</code>, the following method call will be incorrect <pre><code>Commons.SendMessage(\"en = 'Hi!'\");\n</code></pre></p> <p>correct <pre><code>SendMessage(\"en = 'Hi!'\");\n</code></pre></p>"},{"location":"diagnostics/RedundantAccessToObject/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/RedundantAccessToObject/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:RedundantAccessToObject-off\n// BSLLS:RedundantAccessToObject-on\n</code></pre>"},{"location":"diagnostics/RedundantAccessToObject/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"RedundantAccessToObject\": {\n\"checkObjectModule\": true,\n\"checkFormModule\": true,\n\"checkRecordSetModule\": true\n}\n</code></pre>"},{"location":"diagnostics/RefOveruse/","title":"Overuse \"Reference\" in a query (RefOveruse)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>5</code> <code>sql</code><code>performance</code>"},{"location":"diagnostics/RefOveruse/#Description","title":"Description","text":"<p>Using \".Ref\" to a field of a reference type will result in an implicit left join with the source table of this field, and it has no value, but only generates excessive load on the DBMS.</p>"},{"location":"diagnostics/RefOveruse/#Examples","title":"Examples","text":"<pre><code>Query.Text = \"Select Files.File.Ref, // error\n   | Files.File\n   | From\n   | InternalFiles AS Files\";\n</code></pre>"},{"location":"diagnostics/RefOveruse/#Sources","title":"Sources","text":"<ul> <li>Useful Information: Dereferencing Complex Type Reference Fields in Query Language (RU)</li> </ul>"},{"location":"diagnostics/RefOveruse/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/RefOveruse/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:RefOveruse-off\n// BSLLS:RefOveruse-on\n</code></pre>"},{"location":"diagnostics/RefOveruse/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"RefOveruse\": false\n</code></pre>"},{"location":"diagnostics/RewriteMethodParameter/","title":"Rewrite method parameter (RewriteMethodParameter)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>2</code> <code>suspicious</code>"},{"location":"diagnostics/RewriteMethodParameter/#Description","title":"Description","text":""},{"location":"diagnostics/RewriteMethodParameter/#Examples","title":"Examples","text":""},{"location":"diagnostics/RewriteMethodParameter/#Sources","title":"Sources","text":""},{"location":"diagnostics/RewriteMethodParameter/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/RewriteMethodParameter/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:RewriteMethodParameter-off\n// BSLLS:RewriteMethodParameter-on\n</code></pre>"},{"location":"diagnostics/RewriteMethodParameter/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"RewriteMethodParameter\": false\n</code></pre>"},{"location":"diagnostics/SameMetadataObjectAndChildNames/","title":"Same metadata object and child name (SameMetadataObjectAndChildNames)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Critical</code> <code>Yes</code> <code>30</code> <code>standard</code><code>sql</code><code>design</code>"},{"location":"diagnostics/SameMetadataObjectAndChildNames/#Description","title":"Description","text":"<p>For child metadata objects, such as attributes, dimensions, resources, tabular sections (and their attributes), it is not recommended to use names that match the names of the owner objects, since this can lead to errors in queries.</p>"},{"location":"diagnostics/SameMetadataObjectAndChildNames/#Examples","title":"Examples","text":"<p>Incorrect names</p> <pre><code>Catalog.Contractors.TabularSection.Contractors\nInformationRegister.SubordinateDocuments.Dimension.SubordinateDocuments\nDocument.Container.TabularSection.Container. Attribute.Container\n</code></pre>"},{"location":"diagnostics/SameMetadataObjectAndChildNames/#Sources","title":"Sources","text":"<ul> <li>Standard: Organization of data storage (RU). Name, Synonym, Comment</li> </ul>"},{"location":"diagnostics/SameMetadataObjectAndChildNames/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/SameMetadataObjectAndChildNames/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:SameMetadataObjectAndChildNames-off\n// BSLLS:SameMetadataObjectAndChildNames-on\n</code></pre>"},{"location":"diagnostics/SameMetadataObjectAndChildNames/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"SameMetadataObjectAndChildNames\": false\n</code></pre>"},{"location":"diagnostics/ScheduledJobHandler/","title":"Scheduled job handler (ScheduledJobHandler)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Critical</code> <code>Yes</code> <code>5</code> <code>error</code>"},{"location":"diagnostics/ScheduledJobHandler/#Description","title":"Description","text":"<p>Certain requirements are imposed on the methods of scheduled job handlers. Any export procedure or function of a non-global common server module can be used as a scheduled job method. If the scheduled job method is a function, then its return value is ignored.</p> <p>If the scheduled job is predefined, then its handler should not have parameters. Otherwise, the parameters of such a scheduled job can be any values \u200b\u200bthat are allowed to be sent to the server. The parameters of a scheduled job must exactly match the parameters of the procedure or function it calls.</p> <p>Diagnostics checks the following signs of the correctness of the scheduled job handler method: - there is a common module and a shared module method specified as a handler - common module is server - the method is export - the method has no parameters if the scheduled job is predefined - method body is not empty - there are no other scheduled jobs that refer to the same handler method</p>"},{"location":"diagnostics/ScheduledJobHandler/#Examples","title":"Examples","text":""},{"location":"diagnostics/ScheduledJobHandler/#Sources","title":"Sources","text":"<ul> <li>Set of articles \"Scheduled job\" - standard 1C (RU)</li> <li>Article \"Scheduled job\" from the developer's guide 1C 8.3 (RU)</li> </ul>"},{"location":"diagnostics/ScheduledJobHandler/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/ScheduledJobHandler/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:ScheduledJobHandler-off\n// BSLLS:ScheduledJobHandler-on\n</code></pre>"},{"location":"diagnostics/ScheduledJobHandler/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"ScheduledJobHandler\": false\n</code></pre>"},{"location":"diagnostics/SelectTopWithoutOrderBy/","title":"Using 'SELECT TOP' without 'ORDER BY' (SelectTopWithoutOrderBy)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>5</code> <code>standard</code><code>sql</code><code>suspicious</code>"},{"location":"diagnostics/SelectTopWithoutOrderBy/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>skipSelectTopOne</code> <code>Boolean</code> <code>Skip 'SELECT TOP 1' if there is 'WHERE'</code> <code>true</code>"},{"location":"diagnostics/SelectTopWithoutOrderBy/#Description","title":"Description","text":"<p>Using the <code>TOP N</code> construct without specifying the sort order in <code>ORDER BY</code> or conditions in the <code>WHERE</code> section is fraught with unexpected results:</p> <ul> <li>The order of the returned results may differ in different DBMSs</li> <li>The order in different copies of information security will differ from the order expected by the developer</li> </ul> <p>According to the standard, the absence of the sentence <code>ORDER BY</code> is justified only in cases where</p> <ul> <li>the algorithm for processing query results does not rely on a specific order of records</li> <li>the result of processing the executed request is not shown to the user</li> <li>query result - obviously one record</li> </ul> <p>In the above cases, it is recommended not to add the clause <code>ORDER BY</code> to the request body, as this leads to additional time-consuming execution of the request.</p>"},{"location":"diagnostics/SelectTopWithoutOrderBy/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<p>During the analysis, constructions are considered erroneous:</p> <ul> <li>Using <code>TOP N</code> in the union regardless of the presence of <code>ORDER BY</code> because ordering occurs after the union</li> <li>Using <code>TOP N</code> where <code>N&gt; 1</code> if missing <code>ORDER BY</code></li> <li>Using <code>TOP 1</code>, if there is no <code>ORDER BY</code> and conditions in <code>WHERE</code>. This rule is disabled by default by a diagnostic option</li> </ul>"},{"location":"diagnostics/SelectTopWithoutOrderBy/#Examples","title":"Examples","text":"<pre><code>SELECT TOP 1 // &lt; - No error, there is a condition\n   Reference.Link\nOF\n   Directory.Contractors AS Directory\nWHERE\n   Reference.Ref. IN (\n       SELECT TOP 10 // &lt; - Error, no sorting\n           Link\n       OF\n           Reference, Contractors)\n\nUNION ALL\n\nSELECT TOP 10 // &lt; - Error, no sorting (and cannot be)\n   Reference.Link\nOF\n   Directory.Contractors AS Directory\n\nUNION ALL\n\nSELECT TOP 1 // &lt; - Always error, even 1\n   Reference.Link\nOF\n   Directory.Contractors AS Directory\n\nSORT BY\n   Link\n</code></pre>"},{"location":"diagnostics/SelectTopWithoutOrderBy/#Sources","title":"Sources","text":"<ul> <li>Standard: Ordering Query Results (RU)</li> </ul>"},{"location":"diagnostics/SelectTopWithoutOrderBy/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/SelectTopWithoutOrderBy/#Diagnostic-ignorance-in-code_1","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:SelectTopWithoutOrderBy-off\n// BSLLS:SelectTopWithoutOrderBy-on\n</code></pre>"},{"location":"diagnostics/SelectTopWithoutOrderBy/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"SelectTopWithoutOrderBy\": {\n\"skipSelectTopOne\": true\n}\n</code></pre>"},{"location":"diagnostics/SelfAssign/","title":"Variable is assigned to itself (SelfAssign)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>10</code> <code>suspicious</code>"},{"location":"diagnostics/SelfAssign/#Description","title":"Description","text":"<p>It is meaningless to assign a variable to itself and usually points to an error.</p>"},{"location":"diagnostics/SelfAssign/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/SelfAssign/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:SelfAssign-off\n// BSLLS:SelfAssign-on\n</code></pre>"},{"location":"diagnostics/SelfAssign/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"SelfAssign\": false\n</code></pre>"},{"location":"diagnostics/SelfInsertion/","title":"Insert a collection into itself (SelfInsertion)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>10</code> <code>standard</code><code>unpredictable</code><code>performance</code>"},{"location":"diagnostics/SelfInsertion/#Description","title":"Description","text":"<p>Inserting a collection into itself results in circular references.</p>"},{"location":"diagnostics/SelfInsertion/#Sources","title":"Sources","text":"<ul> <li>Search for circular links (RU)</li> </ul>"},{"location":"diagnostics/SelfInsertion/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/SelfInsertion/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:SelfInsertion-off\n// BSLLS:SelfInsertion-on\n</code></pre>"},{"location":"diagnostics/SelfInsertion/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"SelfInsertion\": false\n</code></pre>"},{"location":"diagnostics/SemicolonPresence/","title":"Statement should end with semicolon symbol \";\" (SemicolonPresence)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Minor</code> <code>Yes</code> <code>1</code> <code>standard</code><code>badpractice</code>"},{"location":"diagnostics/SemicolonPresence/#Description","title":"Description","text":"<p>In the texts of program procedures and functions, operators should be separated by a semicolon (\";\"). The end of the line is not a sign of the end of the statement. Despite the fact that in some cases the platform allows you to skip the semicolon, you must always indicate this character, clearly indicating the completion of the statement.</p> <p>NOTE: The keywords <code>Procedure</code>, <code>EndProcedure</code>, <code>Function</code>, <code>EndFunction</code> are not operators, but operator brackets, therefore, DO NOT end with a semicolon (this can lead to module execution errors).</p>"},{"location":"diagnostics/SemicolonPresence/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/SemicolonPresence/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:SemicolonPresence-off\n// BSLLS:SemicolonPresence-on\n</code></pre>"},{"location":"diagnostics/SemicolonPresence/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"SemicolonPresence\": false\n</code></pre>"},{"location":"diagnostics/ServerSideExportFormMethod/","title":"Server-side export form method (ServerSideExportFormMethod)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Blocker</code> <code>Yes</code> <code>5</code> <code>error</code><code>unpredictable</code><code>suspicious</code>"},{"location":"diagnostics/ServerSideExportFormMethod/#Description","title":"Description","text":"<p>In a form module, you can declare export methods that are available in the client context (usually, these are form notification event handlers). For export methods of the form, only the compilation directive <code>AtClient</code> can be specified, since for the rest there is no practical sense: accessing form methods from outside is available only after calling the method <code>GetForm</code>, which is available only on the client.</p> <p>Specifying a different compilation directive for the export method or its absence is considered an error.</p> <p>In some versions of the 1C:Enterprise platform, there was an error that allowed using export server-side methods of forms, but it is unacceptable to design a solution using undocumented platform capabilities.</p>"},{"location":"diagnostics/ServerSideExportFormMethod/#Examples","title":"Examples","text":"<p>Incorrect use of export methods on a form</p> <pre><code>Procedure One() Export\n  // procedure without directive is available on the server\nEndProcedure\n\n&amp;AtServerNoContext\nProcedure AtServerNoContext() Export\nEndProcedure\n\n&amp;AtServer\nProcedure AtServer() Export\nEndProcedure\n</code></pre>"},{"location":"diagnostics/ServerSideExportFormMethod/#Sources","title":"Sources","text":"<ul> <li>Development of the interface for applied solutions on the \"1C:Enterprise\" platform (RU). Ch 3.5. Execution of the form module on the client and on the server</li> </ul>"},{"location":"diagnostics/ServerSideExportFormMethod/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/ServerSideExportFormMethod/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:ServerSideExportFormMethod-off\n// BSLLS:ServerSideExportFormMethod-on\n</code></pre>"},{"location":"diagnostics/ServerSideExportFormMethod/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"ServerSideExportFormMethod\": false\n</code></pre>"},{"location":"diagnostics/SetPermissionsForNewObjects/","title":"The check box \u00abSet permissions for new objects\u00bb should only be selected for the FullAccess role (SetPermissionsForNewObjects)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Vulnerability</code> <code>BSL</code> <code>Critical</code> <code>Yes</code> <code>1</code> <code>standard</code><code>badpractice</code><code>design</code>"},{"location":"diagnostics/SetPermissionsForNewObjects/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>namesFullAccessRole</code> <code>String</code> <code>Name of the role with full rights</code> <code>FullAccess,\u041f\u043e\u043b\u043d\u044b\u0435\u041f\u0440\u0430\u0432\u0430</code>"},{"location":"diagnostics/SetPermissionsForNewObjects/#Description","title":"Description","text":"<p>When adding a new role, the \"Set permissions for new objects\" attribute may be set incorrectly, which will lead to the accumulation of rights in this role for all objects added after it and extra rights for users with this role.</p>"},{"location":"diagnostics/SetPermissionsForNewObjects/#Examples","title":"Examples","text":""},{"location":"diagnostics/SetPermissionsForNewObjects/#Sources","title":"Sources","text":"<ul> <li>Standard: Setting rights for new objects and object fields (RU)</li> </ul>"},{"location":"diagnostics/SetPermissionsForNewObjects/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/SetPermissionsForNewObjects/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:SetPermissionsForNewObjects-off\n// BSLLS:SetPermissionsForNewObjects-on\n</code></pre>"},{"location":"diagnostics/SetPermissionsForNewObjects/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"SetPermissionsForNewObjects\": {\n\"namesFullAccessRole\": \"FullAccess,\u041f\u043e\u043b\u043d\u044b\u0435\u041f\u0440\u0430\u0432\u0430\"\n}\n</code></pre>"},{"location":"diagnostics/SetPrivilegedMode/","title":"Using privileged mode (SetPrivilegedMode)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Security Hotspot</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>1</code> <code>suspicious</code>"},{"location":"diagnostics/SetPrivilegedMode/#Description","title":"Description","text":"<p>Diagnostic finds Privileged mode setup code. For external code, such as code from external reports/data processors, this action may not be safe.</p> <p>The found sections of the code must be analyzed, a manual audit of the code must be performed for its correctness and safety.</p> <p>\u041f\u0440\u0430\u0432\u0438\u043b\u043e \u043d\u0430\u0445\u043e\u0434\u0438\u0442 \u0432\u044b\u0437\u043e\u0432\u044b \u043c\u0435\u0442\u043e\u0434\u0430 The diagnostic finds calls to the <code>SetPrivilegedMode</code> method call to <code>SetPrivilegedMode(False)</code> is ignored</p> <p>Any export procedures and functions that perform any actions on the server with the privileged mode set unconditionally beforehand are potentially dangerous, as this disables checking the access rights of the current user. The export procedures and functions of the client API of the 1C:Enterprise server require special attention.</p> <p>For example, wrong: <pre><code>Procedure ChangeData(...) Export\n\nSetPrivilegedMode(True); // Disable permission check\n// Change data in privileged mode\n...\nEndProcedure\n</code></pre> Correct: <pre><code>Procedure ChangeData(...) Export\n\n// Changing data\n// (at the same time, if the user does not have enough rights to perform an operation on the data, an exception will be raised)\n...\nEndProcedure\n</code></pre> The exception is when the action performed by the procedure must be allowed (or the return value of the function must be available) to absolutely all categories of users.</p> <p>If you still need to use privileged mode within a method, you must use manual access control using the <code>VerifyAccessRights</code> method.</p> <p>An example of pre-checking before performing actions in privileged mode: <pre><code>Procedure ChangeData(...) Export\n\nVerifyAccessRights(...); // If the user has insufficient rights, an exception will be thrown\nSetPrivilegedMode(True); // Disable permission check\n\n// Change data in privileged mode\n...\nEndProcedure\n</code></pre></p>"},{"location":"diagnostics/SetPrivilegedMode/#Examples","title":"Examples","text":"<pre><code>    SetPrivilegedMode(True); // error\n\n    Value = True;\n    SetPrivilegedMode(Value); // error\n\n    SetPrivilegedMode(False); // no error\n</code></pre>"},{"location":"diagnostics/SetPrivilegedMode/#Sources","title":"Sources","text":"<ul> <li>Standard: Using Privileged Mode (RU)</li> <li>Standard: Server API Security (RU)</li> <li>Standard: Restriction on the execution of \"external\" code (RU)</li> </ul>"},{"location":"diagnostics/SetPrivilegedMode/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/SetPrivilegedMode/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:SetPrivilegedMode-off\n// BSLLS:SetPrivilegedMode-on\n</code></pre>"},{"location":"diagnostics/SetPrivilegedMode/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"SetPrivilegedMode\": false\n</code></pre>"},{"location":"diagnostics/SeveralCompilerDirectives/","title":"Erroneous indication of several compilation directives (SeveralCompilerDirectives)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code><code>OS</code> <code>Critical</code> <code>Yes</code> <code>5</code> <code>unpredictable</code><code>error</code>"},{"location":"diagnostics/SeveralCompilerDirectives/#Description","title":"Description","text":"<p>It is an error to specify multiple compilation directives to a module method or variable. In addition, specifying several different directives leads to ambiguities: will the code compile? And if so, in what context?</p>"},{"location":"diagnostics/SeveralCompilerDirectives/#Examples","title":"Examples","text":"<p>Incorrect:</p> <pre><code>&amp;AtServer\n&amp;AtClient\nVar MyVariable;\n\n&amp;AtServer\n&amp;AtClient\nProcedure MyProcedure()\n\nEndProcedure\n</code></pre>"},{"location":"diagnostics/SeveralCompilerDirectives/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/SeveralCompilerDirectives/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:SeveralCompilerDirectives-off\n// BSLLS:SeveralCompilerDirectives-on\n</code></pre>"},{"location":"diagnostics/SeveralCompilerDirectives/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"SeveralCompilerDirectives\": false\n</code></pre>"},{"location":"diagnostics/SpaceAtStartComment/","title":"Space at the beginning of the comment (SpaceAtStartComment)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Info</code> <code>Yes</code> <code>1</code> <code>standard</code>"},{"location":"diagnostics/SpaceAtStartComment/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>commentsAnnotation</code> <code>String</code> <code>Skip comments-annotations staring with given substrings. List, values separated by comma</code> <code>//@,//(c),//\u00a9</code> <code>useStrictValidation</code> <code>Boolean</code> <code>Use strict validation against double comments</code>//// Comment`` <code>true</code>"},{"location":"diagnostics/SpaceAtStartComment/#Description","title":"Description","text":"<p>Between comment symbols \"//\" and comment text has to be a space.</p> <p>Exception from the rule is comments-annotations, comments starting with special symbols sequence.</p>"},{"location":"diagnostics/SpaceAtStartComment/#Sources","title":"Sources","text":"<ul> <li>Source: Standard: Modules (RU)</li> </ul>"},{"location":"diagnostics/SpaceAtStartComment/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/SpaceAtStartComment/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:SpaceAtStartComment-off\n// BSLLS:SpaceAtStartComment-on\n</code></pre>"},{"location":"diagnostics/SpaceAtStartComment/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"SpaceAtStartComment\": {\n\"commentsAnnotation\": \"//@,//(c),//\u00a9\",\n\"useStrictValidation\": true\n}\n</code></pre>"},{"location":"diagnostics/StyleElementConstructors/","title":"Style element constructor (StyleElementConstructors)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Minor</code> <code>Yes</code> <code>5</code> <code>standard</code><code>badpractice</code>"},{"location":"diagnostics/StyleElementConstructors/#Description","title":"Description","text":"<p>You should use style elements to change the appearance, rather than setting specific values directly in the controls. This is required in order for similar controls to look the same in all forms where they occur.</p> <p>Types of style elements:</p> <ul> <li><code>Color</code> - RGB value is set</li> <li><code>Font</code> - type, size and style are set</li> <li><code>Border</code> - the type and width of the borders are set</li> </ul>"},{"location":"diagnostics/StyleElementConstructors/#Examples","title":"Examples","text":""},{"location":"diagnostics/StyleElementConstructors/#Sources","title":"Sources","text":"<p>System of standards * Source: Standard: Style Elements (RU)</p>"},{"location":"diagnostics/StyleElementConstructors/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/StyleElementConstructors/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:StyleElementConstructors-off\n// BSLLS:StyleElementConstructors-on\n</code></pre>"},{"location":"diagnostics/StyleElementConstructors/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"StyleElementConstructors\": false\n</code></pre>"},{"location":"diagnostics/TempFilesDir/","title":"TempFilesDir() method call (TempFilesDir)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>5</code> <code>standard</code><code>badpractice</code>"},{"location":"diagnostics/TempFilesDir/#Description","title":"Description","text":"<p>When you use GetTemporaryFileName(), 1\u0421:Enterprise retains control over these files and by default deletes them as soon as a working process (if a file is created on the server side) or client application (if a file is created on the client side) is restarted.</p> <p>If a temporary file name is generated otherwise, and the application code fails (or is for any other reason unable) to delete a temporary file, it is not controlled by the platform and is saved in the file system for an indefinite time. Lost temporary files accumulated in the system can pose a serious problem, specifically for infobases with a great number of active users (for example, in the service mode).</p>"},{"location":"diagnostics/TempFilesDir/#Examples","title":"Examples","text":"<p>Incorrect:</p> <pre><code>Catalog = TempFilesDir();\nFileName = String(New UUID) + \".xml\";\nTempFile = Catalog + FileName;\nData.Write(TempFile);\n</code></pre> <p>Correct:</p> <pre><code>TempFile = GetTempFileName(\"xml\");\nData.Write(TempFile);\n</code></pre> <p>To create a temporary directory, it is recommended to use the one obtained by the GetTempFileName method (with the exception of the web client).</p> <p>Incorrect:</p> <pre><code>ArchFile = New ZipFileReader(FileName);\nArchCatalog = TempFilesDir()+\"main_zip\\\";\nCreateDirectory(ArchCatalog);\nArchFile.ExtractAll(ArchCatalog);\n</code></pre> <p>Correct:</p> <pre><code>ArchFile = New ZipFileReader(FileName);\nArchCatalog = GetTempFileName() + \"\\main_zip\\\";\nCreateDirectory(ArchCatalog);\nArchFile.ExtractAll(ArchCatalog);\n</code></pre>"},{"location":"diagnostics/TempFilesDir/#Sources","title":"Sources","text":"<ul> <li>Source: Standard: Temporary Files and Directories</li> </ul>"},{"location":"diagnostics/TempFilesDir/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/TempFilesDir/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:TempFilesDir-off\n// BSLLS:TempFilesDir-on\n</code></pre>"},{"location":"diagnostics/TempFilesDir/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"TempFilesDir\": false\n</code></pre>"},{"location":"diagnostics/TernaryOperatorUsage/","title":"Ternary operator usage (TernaryOperatorUsage)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Minor</code> <code>No</code> <code>3</code> <code>brainoverload</code>"},{"location":"diagnostics/TernaryOperatorUsage/#Description","title":"Description","text":"<p>Instead of the ternary operator, use the \"If-else\" construct.</p>"},{"location":"diagnostics/TernaryOperatorUsage/#Examples","title":"Examples","text":"<p>Bad:</p> <pre><code>Result = ?(X%15 &lt;&gt; 0, ?(X%5 &lt;&gt; 0, ?(X%3 &lt;&gt; 0, x, \"Fizz\"), \"Buzz\"), \"FizzBuzz\"); \n</code></pre> <p>Good:</p> <pre><code>If x% 15 = 0 Then\n    Result = \"FizzBuzz\";\nElseIf, if x% 3 = 0 Then\n    Result = \"Fizz\";\nElseIf, if x% 5 = 0 Then\n    Result = \"Buzz\";\nElse\n    Result = x;\nEndIf;\n</code></pre> <p>Bad:</p> <p><pre><code>If ?(P.Emp_emptype = Null, 0, P.Emp_emptype) = 0 Then\n      Status = \"Done\";\nEndIf;\n</code></pre> Good:</p> <pre><code>If P.Emp_emptype = Null OR P.Emp_emptype = 0 Then\n      Status = \"Done\";\nEnd If;\n</code></pre>"},{"location":"diagnostics/TernaryOperatorUsage/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/TernaryOperatorUsage/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:TernaryOperatorUsage-off\n// BSLLS:TernaryOperatorUsage-on\n</code></pre>"},{"location":"diagnostics/TernaryOperatorUsage/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"TernaryOperatorUsage\": false\n</code></pre>"},{"location":"diagnostics/ThisObjectAssign/","title":"ThisObject assign (ThisObjectAssign)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Blocker</code> <code>Yes</code> <code>1</code> <code>error</code>"},{"location":"diagnostics/ThisObjectAssign/#Description","title":"Description","text":"<p>In managed form modules and common modules, there should not be a variable named \"ThisObject\".</p> <p>Often this error appears when updating the platform version: the \"ThisObject\" property of managed forms and common modules appeared in version 8.3.3 which could previously be used as a variable name.</p>"},{"location":"diagnostics/ThisObjectAssign/#Examples","title":"Examples","text":"<p>Incorrect: <pre><code>ThisObject = FormAttributeToValue(\"Object\");\n</code></pre></p>"},{"location":"diagnostics/ThisObjectAssign/#Sources","title":"Sources","text":""},{"location":"diagnostics/ThisObjectAssign/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/ThisObjectAssign/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:ThisObjectAssign-off\n// BSLLS:ThisObjectAssign-on\n</code></pre>"},{"location":"diagnostics/ThisObjectAssign/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"ThisObjectAssign\": false\n</code></pre>"},{"location":"diagnostics/TimeoutsInExternalResources/","title":"Timeouts working with external resources (TimeoutsInExternalResources)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code><code>OS</code> <code>Critical</code> <code>Yes</code> <code>5</code> <code>unpredictable</code><code>standard</code>"},{"location":"diagnostics/TimeoutsInExternalResources/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>analyzeInternetMailProfileZeroTimeout</code> <code>Boolean</code> <code>Analyze the timeout for \"InternetMailProfile\"</code> <code>true</code>"},{"location":"diagnostics/TimeoutsInExternalResources/#Description","title":"Description","text":"<p>When working with external resources using the WSDefinitions, WSProxy, HTTPConnection, FTPConnection there should be a time out - the time limit for the operation to be completed. Otherwise, as a result of endless waiting, the program will freeze or some of the functionality of the program will become unavailable. For the InternetMailProfile the platform sets the default timeout value to 30 seconds, but despite this, it is worth explicitly specifying the timeout value when using it.</p> <p>Setting a timeout protects against external factors:</p> <ul> <li>unstable Internet connection, when the connection is interrupted regularly, and the system cannot receive a complete response from the server to which the connection is made;</li> <li>when anti-virus programs are enabled or if the firewall settings are incorrect;</li> <li>incorrect proxy-server settings;</li> <li>unreliable operation of the web server due to increased load or incorrect operation of scripts.</li> </ul>"},{"location":"diagnostics/TimeoutsInExternalResources/#Examples","title":"Examples","text":"<p>Incorrect:</p> <pre><code>HTTPConnection = New HTTPConnection(\"zabbix.localhost\", 80);\n</code></pre> <p>or</p> <pre><code>FTPConnection = New FTPConnection(Server, Port, Login, Password, Proxy, PassiveMode);\n</code></pre> <p>Correct:</p> <pre><code>HTTPConnection = New HTTPConnection(\"zabbix.localhost\", 80,,,, 1);\n</code></pre> <p>or</p> <pre><code>ConnectiomTimeout = 180;\nHTTPConnection = New HTTPConnection(\"zabbix.localhost\", 80,,,, ConnectiomTimeout);\n</code></pre>"},{"location":"diagnostics/TimeoutsInExternalResources/#Sources","title":"Sources","text":"<ul> <li>Timeouts when working with external resources (RU)</li> <li>InternetMail Profilehas a default timeout (RU)</li> </ul>"},{"location":"diagnostics/TimeoutsInExternalResources/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/TimeoutsInExternalResources/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:TimeoutsInExternalResources-off\n// BSLLS:TimeoutsInExternalResources-on\n</code></pre>"},{"location":"diagnostics/TimeoutsInExternalResources/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"TimeoutsInExternalResources\": {\n\"analyzeInternetMailProfileZeroTimeout\": true\n}\n</code></pre>"},{"location":"diagnostics/TooManyReturns/","title":"Methods should not have too many return statements (TooManyReturns)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Minor</code> <code>No</code> <code>20</code> <code>brainoverload</code>"},{"location":"diagnostics/TooManyReturns/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>maxReturnsCount</code> <code>Integer</code> <code>Maximum allowed return statements per method</code> <code>3</code>"},{"location":"diagnostics/TooManyReturns/#Description","title":"Description","text":"<p>A large number of returns in a method (procedure or function) increases its complexity and reduces performance and perception.</p>"},{"location":"diagnostics/TooManyReturns/#Examples","title":"Examples","text":"<p>Bad method example</p> <pre><code>Function Example(Condition)\n     If Condition = 1 Then\n         Return \"Check passed\";\n     ElsIf Condition = 2 Then\n         ExecuteSomething();\n         Return \"Check not passed\";\n     ElsIf Condition &gt; 7 Then\n         \u0415\u0441\u043b\u0438 Validate(Contidtion) Then\n             Return \"Check passed\";\n         Else\n             Return \"Check not passed\";\n         EndIf;\n     EndIf;\n     Return \"\";\nEndFunction\n</code></pre>"},{"location":"diagnostics/TooManyReturns/#Sources","title":"Sources","text":"<ul> <li>Why Many Return Statements Are a Bad Idea in OOP</li> <li>JAVA: Methods should not have too many return statements</li> <li>Why fast return is so important?</li> </ul>"},{"location":"diagnostics/TooManyReturns/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/TooManyReturns/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:TooManyReturns-off\n// BSLLS:TooManyReturns-on\n</code></pre>"},{"location":"diagnostics/TooManyReturns/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"TooManyReturns\": {\n\"maxReturnsCount\": 3\n}\n</code></pre>"},{"location":"diagnostics/TryNumber/","title":"Cast to number of try catch block (TryNumber)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>2</code> <code>standard</code>"},{"location":"diagnostics/TryNumber/#Description","title":"Description","text":"<p>It is incorrect to use exceptions to cast a value to a type. For such operations, it is necessary to use the capabilities of the TypeDescription object.</p>"},{"location":"diagnostics/TryNumber/#Examples","title":"Examples","text":"<p>Incorrect:</p> <pre><code>Try\n NumberDaysAllowance = Number(Value);\nRaise\n NumberDaysAllowance = 0; // default value\nEndTry;\n</code></pre> <p>Correct:</p> <pre><code>TypeDescription = New TypeDescription(\"Number\");\nNumberDaysAllowance = TypeDescription.CastValue(Value);\n</code></pre>"},{"location":"diagnostics/TryNumber/#Sources","title":"Sources","text":"<ul> <li>Catching Exceptions in Code (RU)</li> </ul>"},{"location":"diagnostics/TryNumber/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/TryNumber/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:TryNumber-off\n// BSLLS:TryNumber-on\n</code></pre>"},{"location":"diagnostics/TryNumber/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"TryNumber\": false\n</code></pre>"},{"location":"diagnostics/Typo/","title":"Typo (Typo)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Info</code> <code>Yes</code> <code>1</code> <code>badpractice</code>"},{"location":"diagnostics/Typo/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>minWordLength</code> <code>Integer</code> <code>Minimum length for checked words</code> <code>3</code> <code>userWordsToIgnore</code> <code>String</code> <code>Dictionary for excluding words (comma separated)</code> ``"},{"location":"diagnostics/Typo/#Description","title":"Description","text":"<p>Spell checking is done with LanguageTool. The strings are split into camelCase chunks and checked against a built-in dictionary.</p>"},{"location":"diagnostics/Typo/#Sources","title":"Sources","text":"<ul> <li>Useful information: Russian for all</li> <li>LanguageTool page</li> </ul>"},{"location":"diagnostics/Typo/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/Typo/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:Typo-off\n// BSLLS:Typo-on\n</code></pre>"},{"location":"diagnostics/Typo/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"Typo\": {\n\"minWordLength\": 3,\n\"userWordsToIgnore\": \"\"\n}\n</code></pre>"},{"location":"diagnostics/UnaryPlusInConcatenation/","title":"Unary Plus sign in string concatenation (UnaryPlusInConcatenation)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code><code>OS</code> <code>Blocker</code> <code>Yes</code> <code>1</code> <code>suspicious</code><code>brainoverload</code>"},{"location":"diagnostics/UnaryPlusInConcatenation/#Description","title":"Description","text":"<p>When concatenating strings, a developer may mistakenly write code String + + String2, i.e. the second plus, the platform recognizes as unary and tries to cast to a number, which in most cases will lead to a runtime exception</p>"},{"location":"diagnostics/UnaryPlusInConcatenation/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/UnaryPlusInConcatenation/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:UnaryPlusInConcatenation-off\n// BSLLS:UnaryPlusInConcatenation-on\n</code></pre>"},{"location":"diagnostics/UnaryPlusInConcatenation/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"UnaryPlusInConcatenation\": false\n</code></pre>"},{"location":"diagnostics/UnionAll/","title":"Using keyword \"UNION\" in queries (UnionAll)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Minor</code> <code>Yes</code> <code>5</code> <code>standard</code><code>sql</code><code>performance</code>"},{"location":"diagnostics/UnionAll/#Description","title":"Description","text":"<p>In most cases, when you need to combine the results of two or more queries into a single result set, employ UNION ALL clause instead of UNION. The recommendation is based on the algorithm of the UNION clause, which searches for and removes duplicates from the united result even when duplicates are impossible by the query design.</p> <p>Employ UNION only when removing duplicates from the result is required.</p>"},{"location":"diagnostics/UnionAll/#Examples","title":"Examples","text":"<p>Incorrect: <pre><code>SELECT\nGoodsReceipt.Ref\nFROM\nDocument.GoodsReceipt AS GoodsReceipt\n\nUNION\n\nSELECT\nGoodsSale.Ref\nFROM\nDocument.GoodsSale AS GoodsSale\n</code></pre></p> <p>Correct:</p> <pre><code>SELECT\nGoodsReceipt.Ref\nFROM\nDocument.GoodsReceipt AS GoodsReceipt\n\nUNION ALL\n\nSELECT\nGoodsSale.Ref\nFROM\nDocument.GoodsSale AS GoodsSale\n</code></pre>"},{"location":"diagnostics/UnionAll/#Sources","title":"Sources","text":"<ul> <li>Link: Development Standart: Using UNION and UNION ALL words in queries (RU)</li> </ul>"},{"location":"diagnostics/UnionAll/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/UnionAll/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:UnionAll-off\n// BSLLS:UnionAll-on\n</code></pre>"},{"location":"diagnostics/UnionAll/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"UnionAll\": false\n</code></pre>"},{"location":"diagnostics/UnknownPreprocessorSymbol/","title":"Unknown preprocessor symbol (UnknownPreprocessorSymbol)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code><code>OS</code> <code>Critical</code> <code>Yes</code> <code>5</code> <code>standard</code><code>error</code>"},{"location":"diagnostics/UnknownPreprocessorSymbol/#Description","title":"Description","text":"<p>The use of unknown preprocessor symbols is unacceptable, this can lead to various errors, including logical ones, when, for some reason, the platform will miss an error by simply ignoring the written code.</p>"},{"location":"diagnostics/UnknownPreprocessorSymbol/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/UnknownPreprocessorSymbol/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:UnknownPreprocessorSymbol-off\n// BSLLS:UnknownPreprocessorSymbol-on\n</code></pre>"},{"location":"diagnostics/UnknownPreprocessorSymbol/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"UnknownPreprocessorSymbol\": false\n</code></pre>"},{"location":"diagnostics/UnreachableCode/","title":"Unreachable Code (UnreachableCode)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code><code>OS</code> <code>Minor</code> <code>Yes</code> <code>10</code> <code>design</code><code>suspicious</code>"},{"location":"diagnostics/UnreachableCode/#Description","title":"Description","text":"<p>Code located after operators \"Return\", \"GoTo\", \"Raise\", \"Break\", \"Continue\" never will be executed.</p> <p>Errors of unreachable code can be caused by developer carelessness when editing another's code.</p>"},{"location":"diagnostics/UnreachableCode/#Examples","title":"Examples","text":"<pre><code>Procedure Example()\n    Return;\n    // Code below operator Return will never be executed\n    For each Line from Lines Do\n        If Condition2 Then\n            Method();\n        EndIf;\n    EndDo;\nEndProcedure\n</code></pre> <pre><code>Function Example(Parameter1, Parameter2)\n    If Error Then\n        Raise \"Error occurred\";\n        // After rise exception the code bellow will be ignored\n        Parameter1 = Parameter2;\n    EndIf; \n    Return Parameter1;\nEndFunction\n</code></pre>"},{"location":"diagnostics/UnreachableCode/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/UnreachableCode/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:UnreachableCode-off\n// BSLLS:UnreachableCode-on\n</code></pre>"},{"location":"diagnostics/UnreachableCode/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"UnreachableCode\": false\n</code></pre>"},{"location":"diagnostics/UnsafeSafeModeMethodCall/","title":"Unsafe SafeMode method call (UnsafeSafeModeMethodCall)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Blocker</code> <code>Yes</code> <code>1</code> <code>deprecated</code><code>error</code>"},{"location":"diagnostics/UnsafeSafeModeMethodCall/#Description","title":"Description","text":"<p>In \"1C: Enterprise 8.3\" the global context method SafeMode() returns the type String, if safe mode was set with the name of the security profile.</p> <p>Using the SafeMode() method, in which the result is implicitly converted to a Boolean type is unsafe, must be corrected for the code with an explicit comparison of the result with the value False. Thus, with the installed security profile, the code will be executed in the same way as in the safe mode.</p>"},{"location":"diagnostics/UnsafeSafeModeMethodCall/#Examples","title":"Examples","text":"<p>Incorrect:</p> <pre><code>If SafeMode() Then\n     // some logic in safe mode...\nEndIf;\n\nIf No SafeMode() Then\n     // some logic in unsafe mode...\nEndIf;\n</code></pre> <p>Correct:</p> <pre><code>If SafeMode() &lt;&gt; False Then\n   // some code\nEndIf;\nEndIf\n</code></pre>"},{"location":"diagnostics/UnsafeSafeModeMethodCall/#Sources","title":"Sources","text":"<ul> <li>Source: SafeMode method (RU)</li> </ul>"},{"location":"diagnostics/UnsafeSafeModeMethodCall/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/UnsafeSafeModeMethodCall/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:UnsafeSafeModeMethodCall-off\n// BSLLS:UnsafeSafeModeMethodCall-on\n</code></pre>"},{"location":"diagnostics/UnsafeSafeModeMethodCall/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"UnsafeSafeModeMethodCall\": false\n</code></pre>"},{"location":"diagnostics/UnusedLocalMethod/","title":"Unused local method (UnusedLocalMethod)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>1</code> <code>standard</code><code>suspicious</code><code>unused</code>"},{"location":"diagnostics/UnusedLocalMethod/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>attachableMethodPrefixes</code> <code>String</code> <code>Method prefixes (comma separated)</code> <code>\u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u044b\u0439_,attachable_</code>"},{"location":"diagnostics/UnusedLocalMethod/#Description","title":"Description","text":"<p>Modules should not have unused procedures and functions. Diagnostics can skip <code>attachable methods</code> that have prefixes specified in the diagnostic parameter.</p>"},{"location":"diagnostics/UnusedLocalMethod/#Sources","title":"Sources","text":"<ul> <li>Source: Standard: Modules (RU)</li> </ul>"},{"location":"diagnostics/UnusedLocalMethod/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/UnusedLocalMethod/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:UnusedLocalMethod-off\n// BSLLS:UnusedLocalMethod-on\n</code></pre>"},{"location":"diagnostics/UnusedLocalMethod/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"UnusedLocalMethod\": {\n\"attachableMethodPrefixes\": \"\u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u044b\u0439_,attachable_\"\n}\n</code></pre>"},{"location":"diagnostics/UnusedLocalVariable/","title":"Unused local variable (UnusedLocalVariable)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>1</code> <code>brainoverload</code><code>badpractice</code><code>unused</code>"},{"location":"diagnostics/UnusedLocalVariable/#Description","title":"Description","text":"<p>Unused local variables should be removed</p> <p>If a local variable is declared but not used, it is dead code and should be removed. Doing so will improve maintainability because developers will not wonder what the variable is used for.</p>"},{"location":"diagnostics/UnusedLocalVariable/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/UnusedLocalVariable/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:UnusedLocalVariable-off\n// BSLLS:UnusedLocalVariable-on\n</code></pre>"},{"location":"diagnostics/UnusedLocalVariable/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"UnusedLocalVariable\": false\n</code></pre>"},{"location":"diagnostics/UnusedParameters/","title":"Unused parameter (UnusedParameters)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>OS</code> <code>Major</code> <code>Yes</code> <code>5</code> <code>design</code><code>unused</code>"},{"location":"diagnostics/UnusedParameters/#Description","title":"Description","text":"<p>Methods shouldn't contain unused parameters.</p>"},{"location":"diagnostics/UnusedParameters/#Examples","title":"Examples","text":"<pre><code>Function AddTwoNumbers(Val FirstValue, Val SecondValue, Val UnusedParameter)\n\n    Return FirstValue + SecondValue;\n\nEndFunction\n</code></pre>"},{"location":"diagnostics/UnusedParameters/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/UnusedParameters/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:UnusedParameters-off\n// BSLLS:UnusedParameters-on\n</code></pre>"},{"location":"diagnostics/UnusedParameters/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"UnusedParameters\": false\n</code></pre>"},{"location":"diagnostics/UsageWriteLogEvent/","title":"Incorrect use of the method \"WriteLogEvent\" (UsageWriteLogEvent)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Info</code> <code>Yes</code> <code>1</code> <code>standard</code><code>badpractice</code>"},{"location":"diagnostics/UsageWriteLogEvent/#Description","title":"Description","text":"<p>It is important to specify the parameters correctly when writing to the Log event.</p> <p>You can't hide exceptions. \u041f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u043d\u0443\u0436\u043d\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u044c \u0432 \u0436\u0443\u0440\u043d\u0430\u043b \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0441 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u044b\u043c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043c \u043e\u0448\u0438\u0431\u043a\u0438. To do this, add to the event comment the result <code>DetailErrorDescription(ErrorInfo())</code></p> <p>Do not skip the 2nd parameter Log level. If you do not specify it, by default 1C will apply the Information error level, and this record may be lost in the stream of records.</p> <p>The 5th parameter - a comment to the event of writing to the logging log - must not be omitted either.</p>"},{"location":"diagnostics/UsageWriteLogEvent/#Examples","title":"Examples","text":"<p>Examples of Invalid Code <pre><code>    WriteLogEvent(\"Event\");// error\n    WriteLogEvent(\"Event\", EventLogLevel.Error);// error\n    WriteLogEvent(\"Event\", EventLogLevel.Error, , );// error\n    WriteLogEvent(\"Event\", , , , DetailErrorDescription(ErrorInfo()));\n\n    WriteLogEvent(\"Event\", EventLogLevel.Error, , , );// error\n\n    Try\n      ServerCode();\n    Except\n      WriteLogEvent(\"Event\", EventLogLevel.Error, , ,\n        ErrorDescription()); // error\n      WriteLogEvent(\"Event\", EventLogLevel.Error, , ,\n        \"Commentary 1\"); // error\n    EndTry;\n</code></pre></p> <p>Correct code <pre><code>    Try\n      ServerCode();\n    Except\n\n      ErrorText = DetailErrorDescription(ErrorInfo());\n      WriteLogEvent(NStr(\"en = 'Performing an operation'\"), EventLogLevel.Error, , ,\n         ErrorText);\n    EndTry;\n\n    Try\n      ServerCode();\n    Except\n\n      ErrorText = DetailErrorDescription(ErrorInfo());\n      WriteLogEvent(NStr(\"en = 'Performing an operation'\"), EventLogLevel.Error, , ,\n         ErrorText);\n\n      Raise;\n    EndTry;\n</code></pre></p>"},{"location":"diagnostics/UsageWriteLogEvent/#Sources","title":"Sources","text":"<ul> <li>Using the event log (RU)</li> <li>Catching Exceptions in Code (RU)</li> </ul>"},{"location":"diagnostics/UsageWriteLogEvent/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/UsageWriteLogEvent/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:UsageWriteLogEvent-off\n// BSLLS:UsageWriteLogEvent-on\n</code></pre>"},{"location":"diagnostics/UsageWriteLogEvent/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"UsageWriteLogEvent\": false\n</code></pre>"},{"location":"diagnostics/UseLessForEach/","title":"Useless collection iteration (UseLessForEach)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code><code>OS</code> <code>Critical</code> <code>Yes</code> <code>2</code> <code>clumsy</code>"},{"location":"diagnostics/UseLessForEach/#Description","title":"Description","text":"<p>The absence of an iterator in the loop body indicates either a useless iteration of the collection or an error in the loop body.</p>"},{"location":"diagnostics/UseLessForEach/#Examples","title":"Examples","text":"<p>Incorrect:</p> <pre><code>For Each Iterator From Collection Loop\n\n    ProcessElement(Collection);\n\nEndLoop;\n</code></pre> <p>Correct</p> <pre><code>For Each Iterator From Collection Loop\n\n    ProcessElement(Iterator);\n\nEndLoop;\n</code></pre> <pre><code>ProcessCollection(Collection);\n</code></pre>"},{"location":"diagnostics/UseLessForEach/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/UseLessForEach/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:UseLessForEach-off\n// BSLLS:UseLessForEach-on\n</code></pre>"},{"location":"diagnostics/UseLessForEach/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"UseLessForEach\": false\n</code></pre>"},{"location":"diagnostics/UseSystemInformation/","title":"Use of system information (UseSystemInformation)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Security Hotspot</code> <code>BSL</code><code>OS</code> <code>Critical</code> <code>No</code> <code>5</code> <code>suspicious</code>"},{"location":"diagnostics/UseSystemInformation/#Description","title":"Description","text":"<p><code>SystemInformation</code> provides data about the computer and configuration in 1C, which can be used for malicious purposes.</p>"},{"location":"diagnostics/UseSystemInformation/#Examples","title":"Examples","text":""},{"location":"diagnostics/UseSystemInformation/#Sources","title":"Sources","text":""},{"location":"diagnostics/UseSystemInformation/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/UseSystemInformation/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:UseSystemInformation-off\n// BSLLS:UseSystemInformation-on\n</code></pre>"},{"location":"diagnostics/UseSystemInformation/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"UseSystemInformation\": false\n</code></pre>"},{"location":"diagnostics/UsingCancelParameter/","title":"Using parameter \"Cancel\" (UsingCancelParameter)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Major</code> <code>Yes</code> <code>10</code> <code>standard</code><code>badpractice</code>"},{"location":"diagnostics/UsingCancelParameter/#Description","title":"Description","text":"<p>In event handlers of object's modules, record sets, forms and etc. using parameter \"Cancel\" (for example BeforeWrite and etc.) it should not be assigned value \"false\". This is due to the fact, that in code of event handlers the parameter \"Cancel\" can be set in several consecutive checks (or in several subscriptions on the same event). In this case, by the time the next check is performed, the Cancel parameter may already contain the True value, and you can erroneously reset it back to False. In addition, with configuration improvements, the number of these checks may increase.</p>"},{"location":"diagnostics/UsingCancelParameter/#Examples","title":"Examples","text":""},{"location":"diagnostics/UsingCancelParameter/#Incorrect","title":"Incorrect","text":"<pre><code>Procedure BeforeWrite(Cancel)\n  ...\n  Cancel = CheckName();\n  ...\nEndProcedure\n</code></pre>"},{"location":"diagnostics/UsingCancelParameter/#Correct","title":"Correct","text":"<pre><code>Procedure BeforeWrite(Cancel)\n  ...\n  If CheckName() Then\n   Cancel = True;\n  EndIf;\n  ...\nEndProcedure\n</code></pre> <p>or</p> <pre><code>Cancel = Cancel or CheckName();\n</code></pre>"},{"location":"diagnostics/UsingCancelParameter/#Sources","title":"Sources","text":"<ul> <li>Standart: Working with the \"Cancel\" option in event handlers (RU)</li> </ul>"},{"location":"diagnostics/UsingCancelParameter/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/UsingCancelParameter/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:UsingCancelParameter-off\n// BSLLS:UsingCancelParameter-on\n</code></pre>"},{"location":"diagnostics/UsingCancelParameter/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"UsingCancelParameter\": false\n</code></pre>"},{"location":"diagnostics/UsingExternalCodeTools/","title":"Using external code tools (UsingExternalCodeTools)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Security Hotspot</code> <code>BSL</code><code>OS</code> <code>Critical</code> <code>Yes</code> <code>15</code> <code>standard</code><code>design</code>"},{"location":"diagnostics/UsingExternalCodeTools/#Description","title":"Description","text":"<p>For application solutions it is forbidden to execute in unsafe mode any code on the 1C:Enterprise server that is not part of the application solution (configuration) itself. The restriction does not apply to the code that has passed the audit, and to the code executed on the client.</p> <p>Examples of invalid execution of \"external\" code in unsafe mode:</p> <ul> <li>external reports and processings (print forms, etc.)</li> <li>configuration extensions</li> </ul>"},{"location":"diagnostics/UsingExternalCodeTools/#Restrictions","title":"Restrictions","text":"<p>At the moment, the server context is not analyzed, so diagnostic works both at client and server contexts</p>"},{"location":"diagnostics/UsingExternalCodeTools/#Examples","title":"Examples","text":""},{"location":"diagnostics/UsingExternalCodeTools/#Sources","title":"Sources","text":"<ul> <li>Restriction on the execution of \"external\" code (RU)</li> </ul>"},{"location":"diagnostics/UsingExternalCodeTools/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/UsingExternalCodeTools/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:UsingExternalCodeTools-off\n// BSLLS:UsingExternalCodeTools-on\n</code></pre>"},{"location":"diagnostics/UsingExternalCodeTools/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"UsingExternalCodeTools\": false\n</code></pre>"},{"location":"diagnostics/UsingFindElementByString/","title":"Using FindByName and FindByCode (UsingFindElementByString)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>2</code> <code>standard</code><code>badpractice</code><code>performance</code>"},{"location":"diagnostics/UsingFindElementByString/#Description","title":"Description","text":"<p>It is forbidden to use the search methods for elements \"FindByName\" or \"FindByCode\".</p>"},{"location":"diagnostics/UsingFindElementByString/#Examples","title":"Examples","text":"<pre><code>Position = Catalogs.Positions.FindByName(\"Senior Accountant\");\n</code></pre> <p>or</p> <pre><code>Position = Catalogs.Positions.FindByCode(\"00-0000001\");\n</code></pre> <p>Acceptable use: <pre><code>Catalogs.Currencies.FindByCode(CurrentData.CurrencyCodeDigital);\n</code></pre> <pre><code>Catalogs.BankClassifier.FindByCode(BankDetails.BIK);\n</code></pre></p>"},{"location":"diagnostics/UsingFindElementByString/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/UsingFindElementByString/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:UsingFindElementByString-off\n// BSLLS:UsingFindElementByString-on\n</code></pre>"},{"location":"diagnostics/UsingFindElementByString/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"UsingFindElementByString\": false\n</code></pre>"},{"location":"diagnostics/UsingGoto/","title":"\"goto\" statement should not be used (UsingGoto)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Critical</code> <code>Yes</code> <code>5</code> <code>standard</code><code>badpractice</code>"},{"location":"diagnostics/UsingGoto/#Description","title":"Description","text":"<p><code>goto</code> is an unstructured control flow statement. It makes code less readable and maintainable. Structured control flow statements such as <code>if</code>, <code>for</code>, <code>while</code>, <code>continue</code> or <code>break</code> should be used instead.</p>"},{"location":"diagnostics/UsingGoto/#Examples","title":"Examples","text":"<p>Bad:</p> <pre><code>I = 0;\n ~loop: Message(StrTemplate(\"i = %1\", i));\n i = i + 1;\n\n If i &lt; 10 Then\n\n     Goto ~Loop;\n\n EndIf;\n</code></pre> <p>Good:</p> <pre><code>For Counter = 0 To 10 Do\n\n   Message(StrTemplate(\"Counter = %1\", Counter))\n\nEndDo;\n</code></pre>"},{"location":"diagnostics/UsingGoto/#Sources","title":"Sources","text":"<ul> <li>Standard: Using Goto (RU)</li> </ul>"},{"location":"diagnostics/UsingGoto/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/UsingGoto/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:UsingGoto-off\n// BSLLS:UsingGoto-on\n</code></pre>"},{"location":"diagnostics/UsingGoto/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"UsingGoto\": false\n</code></pre>"},{"location":"diagnostics/UsingHardcodeNetworkAddress/","title":"Using hardcode ip addresses in code (UsingHardcodeNetworkAddress)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Vulnerability</code> <code>BSL</code><code>OS</code> <code>Critical</code> <code>Yes</code> <code>15</code> <code>standard</code>"},{"location":"diagnostics/UsingHardcodeNetworkAddress/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>searchWordsExclusion</code> <code>String</code> <code>Keywords to exclude from search</code> <code>\u0412\u0435\u0440\u0441\u0438|Version|\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435|RunApp|\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432|Namespace|\u0414\u0440\u0430\u0439\u0432\u0435\u0440|Driver</code> <code>searchPopularVersionExclusion</code> <code>String</code> <code>Pattern to exclude popular versions from search</code> <code>^(1|2|3|8\\.3|11)\\.</code>"},{"location":"diagnostics/UsingHardcodeNetworkAddress/#Description","title":"Description","text":"<p>It's forbidden to store in code:</p> <ul> <li>Network addresses (ip6, ip4)</li> </ul> <p>There are several ways to properly store such information:</p> <ul> <li>Store in Constants.</li> <li>Store in Information registers.</li> <li>Store in separate module, where this diagnostic is disabled (not recommended).</li> <li>Store in Catalog, Exchange plan node and etc.</li> </ul>"},{"location":"diagnostics/UsingHardcodeNetworkAddress/#Examples","title":"Examples","text":"<p>Incorrect: <pre><code>NetworkAddress = \"192.168.0.1\";\n</code></pre></p> <p>Correct: <pre><code>NetworkAddress = MyModuleReUse.ServerNetworkAddress();\n</code></pre></p>"},{"location":"diagnostics/UsingHardcodeNetworkAddress/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/UsingHardcodeNetworkAddress/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:UsingHardcodeNetworkAddress-off\n// BSLLS:UsingHardcodeNetworkAddress-on\n</code></pre>"},{"location":"diagnostics/UsingHardcodeNetworkAddress/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"UsingHardcodeNetworkAddress\": {\n\"searchWordsExclusion\": \"\u0412\u0435\u0440\u0441\u0438|Version|\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435|RunApp|\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432|Namespace|\u0414\u0440\u0430\u0439\u0432\u0435\u0440|Driver\",\n\"searchPopularVersionExclusion\": \"^(1|2|3|8\\\\.3|11)\\\\.\"\n}\n</code></pre>"},{"location":"diagnostics/UsingHardcodePath/","title":"Using hardcode file paths in code (UsingHardcodePath)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Critical</code> <code>Yes</code> <code>15</code> <code>standard</code>"},{"location":"diagnostics/UsingHardcodePath/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>searchWordsStdPathsUnix</code> <code>String</code> <code>Search keywords for standard Unix root folders</code> <code>bin|boot|dev|etc|home|lib|lost\\+found|misc|mnt|media|opt|proc|root|run|sbin|tmp|usr|var</code>"},{"location":"diagnostics/UsingHardcodePath/#Description","title":"Description","text":"<p>It's forbidden to store in code:</p> <ul> <li>Paths to files and folders (Windows, Unix)</li> </ul> <p>There are several ways to correctly store this information:</p> <ul> <li>Store in Constants.</li> <li>Store in Information registers.</li> <li>Store in separate module, where this diagnostic is disabled (not recommended).</li> <li>Store in Catalog, Exchange plan node and etc.</li> </ul>"},{"location":"diagnostics/UsingHardcodePath/#Nuances","title":"Nuances","text":"<p>When search for Windows / Unix  paths, also check for URL in a string. URL search keywords: * <code>http</code> * <code>https</code> * <code>ftp</code></p>"},{"location":"diagnostics/UsingHardcodePath/#Examples","title":"Examples","text":"<p>Incorrect:</p> <pre><code>EchangeFolder = \"c:/exchange/dataexchange\";\n</code></pre> <p>Correct:</p> <pre><code>ExchangeFolder = Constants.ExchangeFolder.Get();\n</code></pre> <p>or</p> <pre><code>ExchangeFolder = DataExchangeReuse.ExchangeFolder();\n</code></pre>"},{"location":"diagnostics/UsingHardcodePath/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/UsingHardcodePath/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:UsingHardcodePath-off\n// BSLLS:UsingHardcodePath-on\n</code></pre>"},{"location":"diagnostics/UsingHardcodePath/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"UsingHardcodePath\": {\n\"searchWordsStdPathsUnix\": \"bin|boot|dev|etc|home|lib|lost\\\\+found|misc|mnt|media|opt|proc|root|run|sbin|tmp|usr|var\"\n}\n</code></pre>"},{"location":"diagnostics/UsingHardcodeSecretInformation/","title":"Storing confidential information in code (UsingHardcodeSecretInformation)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Vulnerability</code> <code>BSL</code> <code>Critical</code> <code>Yes</code> <code>15</code> <code>standard</code>"},{"location":"diagnostics/UsingHardcodeSecretInformation/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>searchWords</code> <code>String</code> <code>Search keywords for confidential information in variables, structures, mappings.</code> <code>\u041f\u0430\u0440\u043e\u043b\u044c|Password</code>"},{"location":"diagnostics/UsingHardcodeSecretInformation/#Description","title":"Description","text":"<p>It is prohibited to store any confidential information in the code. The confidential information is:</p> <ul> <li>Passwords</li> <li>Personal access tokens/keys</li> </ul> <p>If the project uses SSL sub-system, then passwords should be stored in safe storage.</p>"},{"location":"diagnostics/UsingHardcodeSecretInformation/#Addition","title":"Addition","text":"<p>Strings with all symbols <code>*</code> are excluded from the check:</p> <pre><code>Password = \"**********\";\n</code></pre>"},{"location":"diagnostics/UsingHardcodeSecretInformation/#Examples","title":"Examples","text":"<p>Incorrect:</p> <pre><code>Password = \"12345\";\n</code></pre> <p>Correct:</p> <pre><code>Passwords = CommonModule.ReadDataFromSafeStorage(\"StoringIdentifier\", \"Password\");\nPassword = Passwords.Password;\n</code></pre>"},{"location":"diagnostics/UsingHardcodeSecretInformation/#Sources","title":"Sources","text":"<ul> <li>Standard: Store passwords safe (RU)</li> </ul>"},{"location":"diagnostics/UsingHardcodeSecretInformation/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/UsingHardcodeSecretInformation/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:UsingHardcodeSecretInformation-off\n// BSLLS:UsingHardcodeSecretInformation-on\n</code></pre>"},{"location":"diagnostics/UsingHardcodeSecretInformation/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"UsingHardcodeSecretInformation\": {\n\"searchWords\": \"\u041f\u0430\u0440\u043e\u043b\u044c|Password\"\n}\n</code></pre>"},{"location":"diagnostics/UsingLikeInQuery/","title":"Using 'LIKE' in query (UsingLikeInQuery)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Major</code> <code>No</code> <code>10</code> <code>sql</code><code>unpredictable</code>"},{"location":"diagnostics/UsingLikeInQuery/#Description","title":"Description","text":"<p>In most algorithms, it is possible to do without using the operator <code>LIKE</code>, and in the rest, you must use it carefully. The result in some situations can be very different from the expected, for example, when using different DBMS.</p>"},{"location":"diagnostics/UsingLikeInQuery/#Examples","title":"Examples","text":""},{"location":"diagnostics/UsingLikeInQuery/#Correct","title":"Correct","text":"<pre><code>Property LIKE \"123%\"\n</code></pre>"},{"location":"diagnostics/UsingLikeInQuery/#Incorrect","title":"Incorrect:","text":"<pre><code>Property LIKE Table.Template\n</code></pre>"},{"location":"diagnostics/UsingLikeInQuery/#Sources","title":"Sources","text":"<ul> <li>Standard. Features of use in operator requests LIKE (RU)</li> <li>Developers guide. Pattern-like string validation operator  (RU)</li> </ul>"},{"location":"diagnostics/UsingLikeInQuery/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/UsingLikeInQuery/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:UsingLikeInQuery-off\n// BSLLS:UsingLikeInQuery-on\n</code></pre>"},{"location":"diagnostics/UsingLikeInQuery/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"UsingLikeInQuery\": false\n</code></pre>"},{"location":"diagnostics/UsingModalWindows/","title":"Using modal windows (UsingModalWindows)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>15</code> <code>standard</code>"},{"location":"diagnostics/UsingModalWindows/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>forceModalityMode</code> <code>Boolean</code> <code>Ignore configurations modality mode</code> <code>false</code>"},{"location":"diagnostics/UsingModalWindows/#Description","title":"Description","text":"<p>Modal windows and pop-ups are considered bad taste. Users are accustomed to working \"in one window\". When developing configurations designed to work in the web client, it is forbidden to use modal windows and dialogs. Otherwise, the configuration will be inoperative in a number of web browsers, since modal windows are not part of the web development standard.</p>"},{"location":"diagnostics/UsingModalWindows/#Diagnostic-restrictions","title":"Diagnostic restrictions","text":"<p>Currently, only the use of global context methods is diagnosed.</p> <p>Method list:</p> Russian variant English variant \u0412\u041e\u041f\u0420\u041e\u0421 DOQUERYBOX \u041e\u0422\u041a\u0420\u042b\u0422\u042c\u0424\u041e\u0420\u041c\u0423\u041c\u041e\u0414\u0410\u041b\u042c\u041d\u041e OPENFORMMODAL \u041e\u0422\u041a\u0420\u042b\u0422\u042c\u0417\u041d\u0410\u0427\u0415\u041d\u0418\u0415 OPENVALUE \u041f\u0420\u0415\u0414\u0423\u041f\u0420\u0415\u0416\u0414\u0415\u041d\u0418\u0415 DOMESSAGEBOX \u0412\u0412\u0415\u0421\u0422\u0418\u0414\u0410\u0422\u0423 INPUTDATE \u0412\u0412\u0415\u0421\u0422\u0418\u0417\u041d\u0410\u0427\u0415\u041d\u0418\u0415 INPUTVALUE \u0412\u0412\u0415\u0421\u0422\u0418\u0421\u0422\u0420\u041e\u041a\u0423 INPUTSTRING \u0412\u0412\u0415\u0421\u0422\u0418\u0427\u0418\u0421\u041b\u041e INPUTNUMBER \u0423\u0421\u0422\u0410\u041d\u041e\u0412\u0418\u0422\u042c\u0412\u041d\u0415\u0428\u041d\u042e\u042e\u041a\u041e\u041c\u041f\u041e\u041d\u0415\u041d\u0422\u0423 INSTALLADDIN \u0423\u0421\u0422\u0410\u041d\u041e\u0412\u0418\u0422\u042c\u0420\u0410\u0421\u0428\u0418\u0420\u0415\u041d\u0418\u0415\u0420\u0410\u0411\u041e\u0422\u042b\u0421\u0424\u0410\u0419\u041b\u0410\u041c\u0418 INSTALLFILESYSTEMEXTENSION \u0423\u0421\u0422\u0410\u041d\u041e\u0412\u0418\u0422\u042c\u0420\u0410\u0421\u0428\u0418\u0420\u0415\u041d\u0418\u0415\u0420\u0410\u0411\u041e\u0422\u042b\u0421\u041a\u0420\u0418\u041f\u0422\u041e\u0413\u0420\u0410\u0424\u0418\u0415\u0419 INSTALLCRYPTOEXTENSION \u041f\u041e\u041c\u0415\u0421\u0422\u0418\u0422\u042c\u0424\u0410\u0419\u041b PUTFILE"},{"location":"diagnostics/UsingModalWindows/#Examples","title":"Examples","text":"<pre><code>// Incorrect\nDoMessageBox(NStr(\"ru = '\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442!'; en = 'Select a document!'\"), 10);\n\n// Correct\nShowMessageBox(, NStr(\"ru = '\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442!'; en = 'Select a document!'\"), 10);\n</code></pre>"},{"location":"diagnostics/UsingModalWindows/#Sources","title":"Sources","text":"<ul> <li>Limit on the use of modal windows and synchronous calls (RU)</li> <li>Useful information: Refusal to use modal windows (RU)</li> </ul>"},{"location":"diagnostics/UsingModalWindows/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/UsingModalWindows/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:UsingModalWindows-off\n// BSLLS:UsingModalWindows-on\n</code></pre>"},{"location":"diagnostics/UsingModalWindows/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"UsingModalWindows\": {\n\"forceModalityMode\": false\n}\n</code></pre>"},{"location":"diagnostics/UsingObjectNotAvailableUnix/","title":"Using unavailable in Unix objects (UsingObjectNotAvailableUnix)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Critical</code> <code>Yes</code> <code>30</code> <code>standard</code><code>lockinos</code>"},{"location":"diagnostics/UsingObjectNotAvailableUnix/#Description","title":"Description","text":"<p>On <code>Linux</code> OS <code>COM</code>, <code>OLE</code>, <code>ActiveDocument</code> are not available. For integration use other options, for example XML file exchange or web-services. For COM AddIns, it is recommended to change them to <code>NativeAPI</code> AddIn.</p> <p>Checked the use of unavailable in:</p> <ul> <li><code>COMObject</code></li> <li><code>Mail</code></li> </ul> <p>Checking the value of the condition is not satisfied.</p>"},{"location":"diagnostics/UsingObjectNotAvailableUnix/#Addition","title":"Addition","text":"<p>When found unavailable in Linux objects, the method is checked to include condition flow for platform type:</p> <ul> <li><code>Linux_x86</code></li> <li><code>Windows</code></li> <li><code>MacOs</code></li> </ul>"},{"location":"diagnostics/UsingObjectNotAvailableUnix/#Examples","title":"Examples","text":"<pre><code>Component = New COMObject(\"System.Text.UTF8Encoding\");\n</code></pre> <p>or</p> <p><pre><code>Mail = New Mail;\n</code></pre> Instead of this you can use <code>StartApplication()</code>.</p> <pre><code>SystemInformation = New SystemInformation();\nIf Not SystemInformation.PlatformType = PlatformType.Linux_x86 OR PlatformType.Linux_x86_64 Then\n    Mail = New Mail;\nEndIf;\n</code></pre>"},{"location":"diagnostics/UsingObjectNotAvailableUnix/#Sources","title":"Sources","text":"<ul> <li>Features of the development of cross-platform applied solutions (RU)</li> <li>Features of the client application running Linux (RU)</li> </ul>"},{"location":"diagnostics/UsingObjectNotAvailableUnix/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/UsingObjectNotAvailableUnix/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:UsingObjectNotAvailableUnix-off\n// BSLLS:UsingObjectNotAvailableUnix-on\n</code></pre>"},{"location":"diagnostics/UsingObjectNotAvailableUnix/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"UsingObjectNotAvailableUnix\": false\n</code></pre>"},{"location":"diagnostics/UsingServiceTag/","title":"Using service tags (UsingServiceTag)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Info</code> <code>Yes</code> <code>0</code> <code>badpractice</code>"},{"location":"diagnostics/UsingServiceTag/#Parameters","title":"Parameters","text":"Name Type Description Default value <code>serviceTags</code> <code>String</code> <code>Service tags</code> <code>todo|fixme|!!|mrg|@|\u043e\u0442\u043b\u0430\u0434\u043a\u0430|debug|\u0434\u043b\u044f\\s*\u043e\u0442\u043b\u0430\u0434\u043a\u0438|(\\{\\{|\\}\\})\u041a\u041e\u041d\u0421\u0422\u0420\u0423\u041a\u0422\u041e\u0420_|(\\{\\{|\\}\\})MRG|\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c\\s*\u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435\\s*\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430|Paste\\s*handler\\s*content|Insert\\s*handler\\s*code|Insert\\s*handler\\s*content|Insert\\s*handler\\s*contents</code>"},{"location":"diagnostics/UsingServiceTag/#Description","title":"Description","text":"<p>The diagnostic finds use of service tags in comments. Tags list:</p> <ul> <li>TODO</li> <li>FIXME</li> <li>!!</li> <li>@</li> <li>MRG</li> <li>\u041e\u0422\u041b\u0410\u0414\u041a\u0410</li> <li>\u0414\u041b\u042f \u041e\u0422\u041b\u0410\u0414\u041a\u0418</li> <li>\u041a\u041e\u041d\u0421\u0422\u0420\u0423\u041a\u0422\u041e\u0420_\u0417\u0410\u041f\u0420\u041e\u0421\u0410_\u0421_\u041e\u0411\u0420\u0410\u0411\u041e\u0422\u041a\u041e\u0419_\u0420\u0415\u0417\u0423\u041b\u042c\u0422\u0410\u0422\u0410</li> <li>\u041a\u041e\u041d\u0421\u0422\u0420\u0423\u041a\u0422\u041e\u0420_\u0414\u0412\u0418\u0416\u0415\u041d\u0418\u0419_\u0420\u0415\u0413\u0418\u0421\u0422\u0420\u041e\u0412</li> <li>\u041a\u041e\u041d\u0421\u0422\u0420\u0423\u041a\u0422\u041e\u0420_\u041f\u0415\u0427\u0410\u0422\u0418</li> <li>\u041a\u041e\u041d\u0421\u0422\u0420\u0423\u041a\u0422\u041e\u0420_\u0412\u0412\u041e\u0414\u0410_\u041d\u0410_\u041e\u0421\u041d\u041e\u0412\u0410\u041d\u0418\u0418</li> <li>\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430</li> <li>Insert handler code</li> <li>Insert handler contents</li> <li>Paste handler content</li> </ul> <p>Tags list can be extended via options.</p>"},{"location":"diagnostics/UsingServiceTag/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/UsingServiceTag/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:UsingServiceTag-off\n// BSLLS:UsingServiceTag-on\n</code></pre>"},{"location":"diagnostics/UsingServiceTag/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"UsingServiceTag\": {\n\"serviceTags\": \"todo|fixme|!!|mrg|@|\u043e\u0442\u043b\u0430\u0434\u043a\u0430|debug|\u0434\u043b\u044f\\\\s*\u043e\u0442\u043b\u0430\u0434\u043a\u0438|(\\\\{\\\\{|\\\\}\\\\})\u041a\u041e\u041d\u0421\u0422\u0420\u0423\u041a\u0422\u041e\u0420_|(\\\\{\\\\{|\\\\}\\\\})MRG|\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c\\\\s*\u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435\\\\s*\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430|Paste\\\\s*handler\\\\s*content|Insert\\\\s*handler\\\\s*code|Insert\\\\s*handler\\\\s*content|Insert\\\\s*handler\\\\s*contents\"\n}\n</code></pre>"},{"location":"diagnostics/UsingSynchronousCalls/","title":"Using synchronous calls (UsingSynchronousCalls)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>15</code> <code>standard</code>"},{"location":"diagnostics/UsingSynchronousCalls/#Description","title":"Description","text":"<p>When developing configurations designed to work in the web client, it is forbidden to use modal forms and dialogs and synchronous calls. Otherwise, the configuration will be inoperative in a number of web browsers, since modal windows are not part of the web development standard, and asynchronous tools are required to ensure user interaction.</p>"},{"location":"diagnostics/UsingSynchronousCalls/#Diagnostic-restrictions","title":"Diagnostic restrictions","text":"<p>Currently, only the use of global context methods is diagnosed.</p> <p>Method list:</p> Russian variant English variant \u0412\u041e\u041f\u0420\u041e\u0421 DOQUERYBOX \u041e\u0422\u041a\u0420\u042b\u0422\u042c\u0424\u041e\u0420\u041c\u0423\u041c\u041e\u0414\u0410\u041b\u042c\u041d\u041e OPENFORMMODAL \u041e\u0422\u041a\u0420\u042b\u0422\u042c\u0417\u041d\u0410\u0427\u0415\u041d\u0418\u0415 OPENVALUE \u041f\u0420\u0415\u0414\u0423\u041f\u0420\u0415\u0416\u0414\u0415\u041d\u0418\u0415 DOMESSAGEBOX \u0412\u0412\u0415\u0421\u0422\u0418\u0414\u0410\u0422\u0423 INPUTDATE \u0412\u0412\u0415\u0421\u0422\u0418\u0417\u041d\u0410\u0427\u0415\u041d\u0418\u0415 INPUTVALUE \u0412\u0412\u0415\u0421\u0422\u0418\u0421\u0422\u0420\u041e\u041a\u0423 INPUTSTRING \u0412\u0412\u0415\u0421\u0422\u0418\u0427\u0418\u0421\u041b\u041e INPUTNUMBER \u0423\u0421\u0422\u0410\u041d\u041e\u0412\u0418\u0422\u042c\u0412\u041d\u0415\u0428\u041d\u042e\u042e\u041a\u041e\u041c\u041f\u041e\u041d\u0415\u041d\u0422\u0423 INSTALLADDIN \u0423\u0421\u0422\u0410\u041d\u041e\u0412\u0418\u0422\u042c\u0420\u0410\u0421\u0428\u0418\u0420\u0415\u041d\u0418\u0415\u0420\u0410\u0411\u041e\u0422\u042b\u0421\u0424\u0410\u0419\u041b\u0410\u041c\u0418 INSTALLFILESYSTEMEXTENSION \u0423\u0421\u0422\u0410\u041d\u041e\u0412\u0418\u0422\u042c\u0420\u0410\u0421\u0428\u0418\u0420\u0415\u041d\u0418\u0415\u0420\u0410\u0411\u041e\u0422\u042b\u0421\u041a\u0420\u0418\u041f\u0422\u041e\u0413\u0420\u0410\u0424\u0418\u0415\u0419 INSTALLCRYPTOEXTENSION \u041f\u041e\u0414\u041a\u041b\u042e\u0427\u0418\u0422\u042c\u0420\u0410\u0421\u0428\u0418\u0420\u0415\u041d\u0418\u0415\u0420\u0410\u0411\u041e\u0422\u042b\u0421\u041a\u0420\u0418\u041f\u0422\u041e\u0413\u0420\u0410\u0424\u0418\u0415\u0419 ATTACHCRYPTOEXTENSION \u041f\u041e\u0414\u041a\u041b\u042e\u0427\u0418\u0422\u042c\u0420\u0410\u0421\u0428\u0418\u0420\u0415\u041d\u0418\u0415\u0420\u0410\u0411\u041e\u0422\u042b\u0421\u0424\u0410\u0419\u041b\u0410\u041c\u0418 ATTACHFILESYSTEMEXTENSION \u041f\u041e\u041c\u0415\u0421\u0422\u0418\u0422\u042c\u0424\u0410\u0419\u041b PUTFILE \u041a\u041e\u041f\u0418\u0420\u041e\u0412\u0410\u0422\u042c\u0424\u0410\u0419\u041b FILECOPY \u041f\u0415\u0420\u0415\u041c\u0415\u0421\u0422\u0418\u0422\u042c\u0424\u0410\u0419\u041b MOVEFILE \u041d\u0410\u0419\u0422\u0418\u0424\u0410\u0419\u041b\u042b FINDFILES \u0423\u0414\u0410\u041b\u0418\u0422\u042c\u0424\u0410\u0419\u041b\u042b DELETEFILES \u0421\u041e\u0417\u0414\u0410\u0422\u042c\u041a\u0410\u0422\u0410\u041b\u041e\u0413 CREATEDIRECTORY \u041a\u0410\u0422\u0410\u041b\u041e\u0413\u0412\u0420\u0415\u041c\u0415\u041d\u041d\u042b\u0425\u0424\u0410\u0419\u041b\u041e\u0412 TEMPFILESDIR \u041a\u0410\u0422\u0410\u041b\u041e\u0413\u0414\u041e\u041a\u0423\u041c\u0415\u041d\u0422\u041e\u0412 DOCUMENTSDIR \u0420\u0410\u0411\u041e\u0427\u0418\u0419\u041a\u0410\u0422\u0410\u041b\u041e\u0413\u0414\u0410\u041d\u041d\u042b\u0425\u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f USERDATAWORKDIR \u041f\u041e\u041b\u0423\u0427\u0418\u0422\u042c\u0424\u0410\u0419\u041b\u042b GETFILES \u0417\u0410\u041f\u0420\u041e\u0421\u0418\u0422\u042c\u0420\u0410\u0417\u0420\u0415\u0428\u0415\u041d\u0418\u0415\u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042f REQUESTUSERPERMISSION \u0417\u0410\u041f\u0423\u0421\u0422\u0418\u0422\u042c\u041f\u0420\u0418\u041b\u041e\u0416\u0415\u041d\u0418\u0415 RUNAPP"},{"location":"diagnostics/UsingSynchronousCalls/#Sources","title":"Sources","text":"<ul> <li>Limit on the use of modal windows and synchronous calls (RU)</li> <li>Useful information: Refusal to use modal windows (RU)</li> <li>Correspondence of synchronous methods to asynchronous analogues (RU)</li> <li>Asynchronous calls to extensions and external components (RU)</li> </ul>"},{"location":"diagnostics/UsingSynchronousCalls/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/UsingSynchronousCalls/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:UsingSynchronousCalls-off\n// BSLLS:UsingSynchronousCalls-on\n</code></pre>"},{"location":"diagnostics/UsingSynchronousCalls/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"UsingSynchronousCalls\": false\n</code></pre>"},{"location":"diagnostics/UsingThisForm/","title":"Using deprecated property \"ThisForm\" (UsingThisForm)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code> <code>Minor</code> <code>Yes</code> <code>1</code> <code>standard</code><code>deprecated</code>"},{"location":"diagnostics/UsingThisForm/#Description","title":"Description","text":"<p>In the version of the platform 1C Enterprise 8.3.3, the property of the form <code>ThisForm</code> was deprecated. Instead, use the property <code>ThisObject</code></p>"},{"location":"diagnostics/UsingThisForm/#Sources","title":"Sources","text":"<ul> <li>Transfer of configurations to the 1C: Enterprise 8.3 platform without compatibility mode with version 8.2 (RU)</li> </ul>"},{"location":"diagnostics/UsingThisForm/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/UsingThisForm/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:UsingThisForm-off\n// BSLLS:UsingThisForm-on\n</code></pre>"},{"location":"diagnostics/UsingThisForm/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"UsingThisForm\": false\n</code></pre>"},{"location":"diagnostics/VirtualTableCallWithoutParameters/","title":"Virtual table call without parameters (VirtualTableCallWithoutParameters)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Major</code> <code>Yes</code> <code>5</code> <code>sql</code><code>standard</code><code>performance</code>"},{"location":"diagnostics/VirtualTableCallWithoutParameters/#Description","title":"Description","text":"<p>When using virtual tables in queries, you should specify all conditions related to it in the table parameters.</p> <p>It is not recommended to refer to virtual tables using conditions in the WHERE section, etc.</p> <p>Such a query will return the correct (in terms of functionality) result, but it will be much more difficult for the DBMS to choose the optimal plan for its execution. In some cases, this can lead to errors in the DBMS optimizer and a significant slowdown in query performance.</p>"},{"location":"diagnostics/VirtualTableCallWithoutParameters/#Examples","title":"Examples","text":"<p>For example, a query uses the <code>WHERE</code> section to filter virtual table data: <pre><code>Query.Text = \"SELECT\n| Good\n|FROM\n| AccumulationRegister.MyGoods.Turnovers()\n|WHERE\n| Warehouse = &amp;Warehouse\";\n</code></pre> When executing this query, first all records of the virtual table will be selected, then the part corresponding to the specified condition will be selected from them.</p> <p>It is recommended that you limit the number of selected records as early as possible. To do this, pass conditions to the parameters of the virtual table.</p> <pre><code>Query.Text = \"SELECT\n| Good\n|FROM\n| AccumulationRegister.MyGoods.Turnovers(, Warehouse = &amp;Warehouse)\";\n</code></pre>"},{"location":"diagnostics/VirtualTableCallWithoutParameters/#Sources","title":"Sources","text":"<ul> <li>Standard: Using virtual tables (RU)</li> <li>Standard: Effective use of the virtual table \u00abTurnovers\u00bb (RU)</li> <li>1C Recommendation: Using the Condition parameter when accessing a virtual table (RU) (RU)</li> </ul>"},{"location":"diagnostics/VirtualTableCallWithoutParameters/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/VirtualTableCallWithoutParameters/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:VirtualTableCallWithoutParameters-off\n// BSLLS:VirtualTableCallWithoutParameters-on\n</code></pre>"},{"location":"diagnostics/VirtualTableCallWithoutParameters/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"VirtualTableCallWithoutParameters\": false\n</code></pre>"},{"location":"diagnostics/WrongDataPathForFormElements/","title":"Form fields do not have a data path (WrongDataPathForFormElements)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Critical</code> <code>Yes</code> <code>5</code> <code>unpredictable</code>"},{"location":"diagnostics/WrongDataPathForFormElements/#Description","title":"Description","text":""},{"location":"diagnostics/WrongDataPathForFormElements/#Form-fields-do-not-have-a-data-path-WrongDataPathForFormElements_1","title":"Form fields do not have a data path (WrongDataPathForFormElements)","text":"Type Scope Severity Activatedby default Minutes to fix Tags <code>Error</code> <code>BSL</code> <code>Critical</code> <code>Yes</code> <code>5</code> <code>unpredictable</code>"},{"location":"diagnostics/WrongDataPathForFormElements/#Diagnostics-description","title":"Diagnostics description","text":"<p>When actively reworking a form or associated metadata, there may be elements on the form that do not have an associated data element. Problems can arise after deleting metadata or metadata attributes, or when changing the main form attribute. As a result, such a form field will not be displayed. Errors occur with forms when extended validation is enabled in the 1C Configurator. <pre><code>\u0421\u043f\u0440\u0430\u0432\u043e\u0447\u043d\u0438\u043a.\u041a\u043e\u043d\u0442\u0440\u0430\u0433\u0435\u043d\u0442\u044b.\u0424\u043e\u0440\u043c\u0430.\u0424\u043e\u0440\u043c\u0430\u042d\u043b\u0435\u043c\u0435\u043d\u0442\u0430.\u0424\u043e\u0440\u043c\u0430 \u041d\u0435\u0440\u0430\u0437\u0440\u0435\u0448\u0438\u043c\u044b\u0435 \u0441\u0441\u044b\u043b\u043a\u0438 \u043d\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0445 (12)\n</code></pre> In this case, in form files from XML unloading, the value of the \"Data path\" property begins with a \"~\" sign, for example, for the \"Description\" field: \"~Object.Description\".</p> <p>When you manually change the query of a dynamic list, the \"Data path\" property of its fields on the form is cleared. This leads to a breakdown of the connection between the form element (table column) and the dynamic list field, and it disappears from the table on the form.</p> <p>In form files, when unloaded to XML, the value of the \"Data path\" property starts with a \"~\" character, for example, for the \"Description\" field: <code>&lt;DataPath&gt; ~ List.Description &lt;/DataPath&gt;</code>.</p> <p>For command bar buttons associated with the \"Data\" property with a standard dynamic list field, for example, for a button with a filled \"Ref\" value in the \"CurrentData\" property: <code>&lt;DataPath&gt; ~ Items.List.CurrentData.Ref &lt;/DataPath&gt;</code>.</p>"},{"location":"diagnostics/WrongDataPathForFormElements/#Examples","title":"Examples","text":""},{"location":"diagnostics/WrongDataPathForFormElements/#Sources","title":"Sources","text":"<ul> <li>General requirements - Standards 1C (RU)</li> </ul>"},{"location":"diagnostics/WrongDataPathForFormElements/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/WrongDataPathForFormElements/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:WrongDataPathForFormElements-off\n// BSLLS:WrongDataPathForFormElements-on\n</code></pre>"},{"location":"diagnostics/WrongDataPathForFormElements/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"WrongDataPathForFormElements\": false\n</code></pre>"},{"location":"diagnostics/WrongHttpServiceHandler/","title":"Missing handler for http service (WrongHttpServiceHandler)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Critical</code> <code>Yes</code> <code>10</code> <code>suspicious</code><code>error</code>"},{"location":"diagnostics/WrongHttpServiceHandler/#Description","title":"Description","text":"<p>If there is no http-service method handler, then the call to the operation will return neither data, nor errors on the client side of the service, nor errors on the side of the service itself.</p> <p>Important: the http service method should only accept one parameter.</p> <p>The configurator notices violations only when the \"Check for the existence of assigned handlers\" flag is enabled.</p>"},{"location":"diagnostics/WrongHttpServiceHandler/#Examples","title":"Examples","text":"<p>Invalid handler method with empty body <pre><code>Function StorageGETRequest(Request)\n\nEndFunction\n</code></pre></p> <p>Correct handler method - only one parameter is specified and there is a method body <pre><code>Function StorageGETRequest(Request)\n    Return ModuleRequests.Get(Request);\nEndFunction\n</code></pre></p> <p>Invalid handler method with the wrong number of parameters <pre><code>Function StorageGETRequest(Request, Additional)\n    Return ModuleRequests.Get(Request);\nEndFunction\n</code></pre></p>"},{"location":"diagnostics/WrongHttpServiceHandler/#Sources","title":"Sources","text":"<ul> <li>Developers guide 8.3.20. Internet service mechanisms (RU)</li> <li>Configuration guidelines. Web services and HTTP services (RU)</li> </ul>"},{"location":"diagnostics/WrongHttpServiceHandler/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/WrongHttpServiceHandler/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:WrongHttpServiceHandler-off\n// BSLLS:WrongHttpServiceHandler-on\n</code></pre>"},{"location":"diagnostics/WrongHttpServiceHandler/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"WrongHttpServiceHandler\": false\n</code></pre>"},{"location":"diagnostics/WrongMetadataInQuery/","title":"\u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435 \u043a \u043d\u0435\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u0432 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 (WrongMetadataInQuery)","text":"\u0422\u0438\u043f \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442\u0441\u044f\u044f\u0437\u044b\u043a\u0438 \u0412\u0430\u0436\u043d\u043e\u0441\u0442\u044c \u0412\u043a\u043b\u044e\u0447\u0435\u043d\u0430\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0412\u0440\u0435\u043c\u044f \u043d\u0430\u0438\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 (\u043c\u0438\u043d) \u0422\u0435\u0433\u0438 <code>\u041e\u0448\u0438\u0431\u043a\u0430</code> <code>BSL</code><code>OS</code> <code>\u0411\u043b\u043e\u043a\u0438\u0440\u0443\u044e\u0449\u0438\u0439</code> <code>\u0414\u0430</code> <code>5</code> <code>suspicious</code><code>sql</code>"},{"location":"diagnostics/WrongMetadataInQuery/#\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435-\u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438","text":"<p>\u041f\u0440\u0438 \u0434\u043e\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u043a\u043e\u0434\u0430 1\u0421 \u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0438 \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0435\u0440\u0435\u0434\u043a\u043e \u043e\u0441\u0442\u0430\u044e\u0442\u0441\u044f \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0438\u0434\u0435\u0442 \u043e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435 \u043a \u0442\u0430\u0431\u043b\u0438\u0446\u0435 \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0438\u043b\u0438 \u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043b\u0438 \u0438\u043b\u0438 \u0443\u0434\u0430\u043b\u0438\u043b\u0438. \u0422\u0430\u043a\u0436\u0435 \u043e\u0448\u0438\u0431\u043e\u0447\u043d\u044b\u0435 \u0438\u043c\u0435\u043d\u0430 \u0442\u0430\u0431\u043b\u0438\u0446 \u043c\u043e\u0433\u0443\u0442 \u0432\u043e\u0437\u043d\u0438\u043a\u0430\u0442\u044c \u043f\u0440\u0438 \u0440\u0443\u0447\u043d\u043e\u043c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0431\u0435\u0437 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432. \u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0442\u043e\u0440 \u0438 EDT \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u044e\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043a\u043e\u0434\u0430 \u043d\u0430 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0438 \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0445, \u043d\u043e \u044d\u0442\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u044b.</p> <p>\u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u043d\u0443\u0436\u043d\u043e \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u044f \u043a \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u0432\u043d\u0443\u0442\u0440\u0438 \u0442\u0435\u043a\u0441\u0442\u043e\u0432 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432.</p> <p>\u041f\u0440\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0438 \u043f\u043e\u0434\u043e\u0431\u043d\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0431\u0443\u0434\u0435\u0442 \u0432\u043e\u0437\u043d\u0438\u043a\u0430\u0442\u044c \u043e\u0448\u0438\u0431\u043a\u0430 \u0438\u0441\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f.</p>"},{"location":"diagnostics/WrongMetadataInQuery/#\u041f\u0440\u0438\u043c\u0435\u0440\u044b","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b","text":"<p>\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u0442\u0430\u0431\u043b\u0438\u0446\u044b <pre><code>\u0412\u042b\u0411\u0420\u0410\u0422\u042c\n    \u0422\u0430\u0431\u043b\u0438\u0446\u0430.\u0420\u0435\u0441\u0443\u0440\u0441\u0427\u0438\u0441\u043b\u043e \u041a\u0410\u041a \u0420\u0435\u0441\u0443\u0440\u0441\u0427\u0438\u0441\u043b\u043e\n\u0418\u0417\n    \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0421\u0432\u0435\u0434\u0435\u043d\u0438\u0439.\u0423\u0441\u0442\u0430\u0440\u0435\u0432\u0448\u0435\u0435\u0418\u043c\u044f\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430 \u041a\u0410\u041a \u0422\u0430\u0431\u043b\u0438\u0446\u0430\n</code></pre> \u0438\u043b\u0438 \u043f\u0440\u0438\u043c\u0435\u0440 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0432\u043d\u0443\u0442\u0440\u0438 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f <pre><code>\u0412\u042b\u0411\u0420\u0410\u0422\u042c\n    \u0422\u0430\u0431\u043b\u0438\u0446\u0430.\u0420\u0435\u0441\u0443\u0440\u0441\u0427\u0438\u0441\u043b\u043e \u041a\u0410\u041a \u0420\u0435\u0441\u0443\u0440\u0441\u0427\u0438\u0441\u043b\u043e\n\u0418\u0417\n    \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0421\u0432\u0435\u0434\u0435\u043d\u0438\u0439.\u0420\u0435\u0433\u0438\u0441\u0442\u04401 \u041a\u0410\u041a \u0422\u0430\u0431\u043b\u0438\u0446\u0430\n    \u0412\u041d\u0423\u0422\u0420\u0415\u041d\u041d\u0415\u0415 \u0421\u041e\u0415\u0414\u0418\u041d\u0415\u041d\u0418\u0415 \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0421\u0432\u0435\u0434\u0435\u043d\u0438\u0439.\u0423\u0441\u0442\u0430\u0440\u0435\u0432\u0448\u0435\u0435\u0418\u043c\u044f\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430 \u041a\u0410\u041a \u0422\u0430\u0431\u043b\u0438\u0446\u0430\u0424\u0438\u043b\u044c\u0442\u0440\n    \u041f\u041e \u0422\u0430\u0431\u043b\u0438\u0446\u0430\u0424\u0438\u043b\u044c\u0442\u0440.\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 = \u0422\u0430\u0431\u043b\u0438\u0446\u0430.\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\n</code></pre></p>"},{"location":"diagnostics/WrongMetadataInQuery/#\u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0438","title":"\u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0438","text":"<ul> <li>\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0437\u0430\u043f\u0440\u043e\u0441\u0430\u043c\u0438 - \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 1\u0421</li> <li>\u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 - \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 1\u0421</li> </ul>"},{"location":"diagnostics/WrongMetadataInQuery/#\u0421\u043d\u0438\u043f\u043f\u0435\u0442\u044b","title":"\u0421\u043d\u0438\u043f\u043f\u0435\u0442\u044b","text":""},{"location":"diagnostics/WrongMetadataInQuery/#\u042d\u043a\u0440\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435-\u043a\u043e\u0434\u0430","title":"\u042d\u043a\u0440\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u0434\u0430","text":"<pre><code>// BSLLS:WrongMetadataInQuery-off\n// BSLLS:WrongMetadataInQuery-on\n</code></pre>"},{"location":"diagnostics/WrongMetadataInQuery/#\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440-\u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0433\u043e-\u0444\u0430\u0439\u043b\u0430","title":"\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430","text":"<pre><code>\"WrongMetadataInQuery\": false\n</code></pre>"},{"location":"diagnostics/WrongUseFunctionProceedWithCall/","title":"Wrong use of ProceedWithCall function (WrongUseFunctionProceedWithCall)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Blocker</code> <code>Yes</code> <code>1</code> <code>error</code><code>suspicious</code>"},{"location":"diagnostics/WrongUseFunctionProceedWithCall/#Description","title":"Description","text":"<p>Using the <code>ProceedWithCall</code> function outside of extension methods with the <code>&amp;Around</code> annotation will result in a run-time error.</p>"},{"location":"diagnostics/WrongUseFunctionProceedWithCall/#Examples","title":"Examples","text":"<pre><code>&amp;AtClient\nProcedure Test()\n\n    // copy-past from extension\n    ProceedWithCall(); // \u0421\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u043d\u0438\u0435 \u0437\u0434\u0435\u0441\u044c\n\nEndProcedure\n</code></pre>"},{"location":"diagnostics/WrongUseFunctionProceedWithCall/#Sources","title":"Sources","text":"<p>Source: Extensions. Functionality -&gt; Modules (RU)</p>"},{"location":"diagnostics/WrongUseFunctionProceedWithCall/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/WrongUseFunctionProceedWithCall/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:WrongUseFunctionProceedWithCall-off\n// BSLLS:WrongUseFunctionProceedWithCall-on\n</code></pre>"},{"location":"diagnostics/WrongUseFunctionProceedWithCall/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"WrongUseFunctionProceedWithCall\": false\n</code></pre>"},{"location":"diagnostics/WrongUseOfRollbackTransactionMethod/","title":"Not recommended using of RollbackTransaction method (WrongUseOfRollbackTransactionMethod)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Critical</code> <code>Yes</code> <code>1</code> <code>standard</code>"},{"location":"diagnostics/WrongUseOfRollbackTransactionMethod/#Description","title":"Description","text":"<p>You should call at first RollbackTransaction method in Exception block, and then execute other actions if required.</p>"},{"location":"diagnostics/WrongUseOfRollbackTransactionMethod/#Examples","title":"Examples","text":"<pre><code>BeginTransaction();\nAttempt\n    CommitTransaction();\nException\n    WriteLogEvent(NStr(\"en = 'OperationExecution'\"),\nEventLogLevel.Error,\n        ,\n        ,\n        DetailedErrorPresentation(InformationAboutError()));\n    RollbackTransaction();\n    CallException; // there is external transaction\nEndTry;\n</code></pre>"},{"location":"diagnostics/WrongUseOfRollbackTransactionMethod/#Sources","title":"Sources","text":"<p>Transactions: Rules of Use (RU)</p>"},{"location":"diagnostics/WrongUseOfRollbackTransactionMethod/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/WrongUseOfRollbackTransactionMethod/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:WrongUseOfRollbackTransactionMethod-off\n// BSLLS:WrongUseOfRollbackTransactionMethod-on\n</code></pre>"},{"location":"diagnostics/WrongUseOfRollbackTransactionMethod/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"WrongUseOfRollbackTransactionMethod\": false\n</code></pre>"},{"location":"diagnostics/WrongWebServiceHandler/","title":"Wrong handler for web service (WrongWebServiceHandler)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Error</code> <code>BSL</code> <code>Critical</code> <code>Yes</code> <code>10</code> <code>suspicious</code><code>error</code>"},{"location":"diagnostics/WrongWebServiceHandler/#Description","title":"Description","text":"<p>If there is no web-service operation handler, then the call to the operation will return neither data, nor errors on the client side of the service, nor errors on the side of the service itself.</p> <p>It is important to remember: the number of parameters of the web service operation method must match the number of parameters specified in the settings of the web service operation.</p> <p>The configurator notices violations only when the \"Check for the existence of assigned handlers\" flag is enabled.</p>"},{"location":"diagnostics/WrongWebServiceHandler/#Examples","title":"Examples","text":"<p>Invalid handler method with empty body <pre><code>Function FillCatalogs(MobileDeviceID, MessageExchange)\n\nEndFunction\n</code></pre></p> <p>Correct handler method - there is a method body and the correct set of parameters is specified <pre><code>Function FillCatalogs(MobileDeviceID, MessageExchange)\n    Return MobileOrders.FillCatalogs(MobileDeviceID, MessageExchange);\nEndFunction\n</code></pre></p> <p>Invalid handler method with the wrong number of parameters <pre><code>Function FillCatalogs(MobileDeviceID, MessageExchange, Additional)\nReturn MobileOrders.FillCatalogs(MobileDeviceID, MessageExchange);\nEndFunction\n</code></pre></p>"},{"location":"diagnostics/WrongWebServiceHandler/#Sources","title":"Sources","text":"<ul> <li>Developers guide 8.3.20. Internet service mechanisms (RU)</li> <li>Configuration guidelines. Web services and HTTP services (RU)</li> </ul>"},{"location":"diagnostics/WrongWebServiceHandler/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/WrongWebServiceHandler/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:WrongWebServiceHandler-off\n// BSLLS:WrongWebServiceHandler-on\n</code></pre>"},{"location":"diagnostics/WrongWebServiceHandler/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"WrongWebServiceHandler\": false\n</code></pre>"},{"location":"diagnostics/YoLetterUsage/","title":"Using Russian character \"yo\" (\"\u0451\") in code (YoLetterUsage)","text":"Type Scope Severity Activatedby default Minutesto fix Tags <code>Code smell</code> <code>BSL</code><code>OS</code> <code>Info</code> <code>Yes</code> <code>5</code> <code>standard</code>"},{"location":"diagnostics/YoLetterUsage/#Description","title":"Description","text":"<p>In code it is prohibited to use character \"yo\" (\"\u0451\"). Exception is interface texts, displayed to user in messages, forms and help, where it is applicable.</p>"},{"location":"diagnostics/YoLetterUsage/#Sources","title":"Sources","text":"<ul> <li>Standard: Modules texts(RU)</li> </ul>"},{"location":"diagnostics/YoLetterUsage/#Snippets","title":"Snippets","text":""},{"location":"diagnostics/YoLetterUsage/#Diagnostic-ignorance-in-code","title":"Diagnostic ignorance in code","text":"<pre><code>// BSLLS:YoLetterUsage-off\n// BSLLS:YoLetterUsage-on\n</code></pre>"},{"location":"diagnostics/YoLetterUsage/#Parameter-for-config","title":"Parameter for config","text":"<pre><code>\"YoLetterUsage\": false\n</code></pre>"},{"location":"features/","title":"Features","text":"<p>Additional features BSL Language Server</p> <ul> <li>Configuration</li> <li>Diagnostic ignorance</li> <li>Monitoring</li> </ul>"},{"location":"features/ConfigurationFile/","title":"BSL Language Server Configuration","text":"<p>BSL Language Server provides the ability to change the settings using a configuration file in json format. The created file must be specified using the key <code>--configuration</code> (or <code>-c</code>) when running BSL Language Server as a console application. If you use the editor / IDE with the BSL Language Server client plugin, place it in accordance with the documentation (this is usually the root of a project or workspace).</p> <p>If there is no configuration file, an attempt will be made to find the \".bsl-language-server.json\" file in \"%HOMEPATH%\"</p>"},{"location":"features/ConfigurationFile/#Settings","title":"Settings","text":"Name Type Description <code>language</code> <code>String</code> Set the language for displaying diagnosed comments. Supported languages: <code>ru</code> - for Russian (default) <code>en</code> - for English <code>codeLens</code> <code>JSON-Object</code> Contains the settings for displaying <code>lens</code> in advanced code editors/IDEs (for example, Visual Studio Code), which displays various information above a block of code. Object properties \u2937\u00a0\u00a0\u00a0<code>parameters</code> <code>JSON-Object</code> Collection of lens settings. Collection items are json-objects with the following structure: object key - string, is lens key object value - if is boolean, then interpreted as lens off-switch (<code>false</code>) or on-switch with default parameters (<code>true</code>), if is type <code>json-object</code>, collection of lens parameters. \u00a0\u00a0\u00a0\u2937\u00a0\u00a0\u00a0<code>cognitiveComplexity</code> <code>Boolean</code> or <code>JSON-Object</code> Enables displaying the value of the cognitive complexity of the method over its definition. The default is <code>true</code>. Lens options: <code>complexityThreshold</code> - lens response threshold. The default is - <code>-1</code>. \u00a0\u00a0\u00a0\u2937\u00a0\u00a0\u00a0<code>cyclomaticComplexity</code> <code>Boolean</code> or <code>JSON-Object</code> Enables displaying the value of the cyclomatic complexity of the method over its definition. The default is <code>true</code>. Lens options: <code>complexityThreshold</code> - lens response threshold. The default is - <code>-1</code>. <code>diagnostics</code> <code>JSON-Object</code> Contains diagnostic settings \u2937\u00a0\u00a0\u00a0<code>computeTrigger</code> <code>String</code> Event that will trigger the code analysis procedure to diagnose comments. Possible values: <code>onType</code> -when editing a file (online) on large files can significantly slow down editing  <code>onSave</code> - when saving a file (default) <code>never</code> - analysis will not be performed \u2937\u00a0\u00a0\u00a0<code>ordinaryAppSupport</code> <code>Boolean</code> Ordinary client support. Diagnostics will require taking into account the features of a ordinary application. Values: <code>true</code> - the configuration uses ordinary application (default) <code>false</code> - ignore ordinary application warnings \u2937\u00a0\u00a0\u00a0<code>skipSupport</code> <code>String</code> This parameter sets 1C configuration file skipping mode (for example files are not analyzed for issues) which are \"on support\" from vendor configuration. Possible values: <code>withSupport</code> - skip all modules set \"on support\" (all \"locks\" types) <code>withSupportLocked</code> - skip modules set \"on support\" with prohibited modification (\"yellow closed lock\") <code>never</code> - skip no modules as support mode is not analyzed (set by default)* \u2937\u00a0\u00a0\u00a0<code>mode</code> <code>String</code> Setting for controlling the diagnostic settings accounting mode. Possible options:  <code>OFF</code> - All diagnostics are considered to be turned off, regardless of their settings.  <code>ON</code> - All diagnostics enabled by default are considered enabled, the rest - depending on personal settings  <code>EXCEPT</code> - All diagnostics other than those specified are considered enabled.  <code>ONLY</code> - Only the specified diagnostics are considered enabled. * <code>ALL</code> - All diagnostics are considered enabled \u2937\u00a0\u00a0\u00a0<code>parameters</code> <code>JSON-Object</code> Parameter is a collection of diagnostics parameters. Collection items are json-objects with the following structure: object key - string, is diagnostic key object value - if is boolean, then interpreted as diagnostic off-switch (<code>false</code>) or on-switch with default parameters (<code>true</code>), if is type <code>json-object</code>, collection of diagnostic parameters.Key, if set to ON by default and all allowed parameters and examples are given on the diagnostic page. \u2937\u00a0\u00a0\u00a0<code>subsystemsFilter</code> <code>JSON-Object</code> Filter by configuration subsystems \u2937\u00a0\u00a0\u00a0<code>analyzeOnStart</code> <code>Boolean</code> Starting the analysis of the entire project at server startup. If enabled, after the context is built on the client, information about diagnostics in all project files will be sent. \u00a0\u00a0\u00a0\u2937\u00a0\u00a0\u00a0<code>include</code> <code>Array</code> <code>String</code> List of names of subsystems for which objects the analysis is performed, including child subsystems \u00a0\u00a0\u00a0\u2937\u00a0\u00a0\u00a0<code>exclude</code> <code>Array</code> <code>String</code> List of names of subsystems excluded from analysis, including child subsystems <code>documentLink</code> <code>JSON-Object</code> Contains documentation link settings \u2937\u00a0\u00a0\u00a0<code>showDiagnosticDescription</code> <code>Boolean</code> Show additional links to diagnostics documentation. By default, the parameter is off (set to <code>false</code>) <code>useDevSite</code> <code>Boolean</code> When you turn on the settings, the resulting documentation links will lead to the develop version of the site. By default, the parameter is off (set to <code>false</code>) <code>siteRoot</code> <code>String</code> The path to the root of the site with the documentation. By default, the parameter value is <code>\"https://1c-syntax.github.io/bsl-language-server\"</code> <code>traceLog</code> <code>String</code> To log all requests (incoming and outgoing) between BSL Language Server and Language Client from used editor/IDE, this parameter sets log file path. The path can set either absolute or relative (from project root), by default the value is not set.WARNING When starting BSL Language Server overwrites this file  Speed of interaction between client and server DRAMATICALLY REDUCED <code>configurationRoot</code> <code>String</code> This parameter is intended to indicate the root directory the 1C configuration files are located in the project directory. It can be useful if there are several configuration directories in the same project directory or when the structure of the project directory is so complex. By default, the parameter is empty and <code>BSL Language Server</code> determines the location of the configuration root directory independently <code>sendErrors</code> <code>String</code> Mode for sending error messages to BSL Language Server developers. More Monitoring.Possible values: <code>ask</code> - ask permission on every error (set by default).  <code>send</code> - always send error messages.* <code>never</code> - never send error messages. <p>You can use the following JSON schema to make it easier to compile and edit a configuration file:</p> <pre><code>https://1c-syntax.github.io/bsl-language-server/configuration/schema.json\n</code></pre>"},{"location":"features/ConfigurationFile/#Example","title":"Example","text":"<p>Setting example:</p> <ul> <li>Language of diagnostics messages - English;</li> <li>Changes the diagnostic setting for LineLength - Line Length limit, set the limit for the length of a string to 140 characters;</li> <li>Disable MethodSize - Method size restriction diagnostic.</li> <li>Enables the calculation of diagnostics in continuous mode (<code>computeTrigger = onType</code>)</li> <li>Diagnostics are calculated only for the objects of the \"StandardSubsystems\" subsystem, with the exception of \"ReportVariants\" and \"VersioningObjects\"</li> </ul> <pre><code>{\n\"$schema\": \"https://1c-syntax.github.io/bsl-language-server/configuration/schema.json\",\n\"language\": \"en\",\n\"diagnostics\": {\n\"computeTrigger\": \"onType\",\n\"parameters\": {\n\"LineLength\": {\n\"maxLineLength\": 140\n},\n\"MethodSize\": false\n},\n\"subsystemsFilter\": {\n\"include\": [\"StandardSubsystems\"],\n\"exclude\": [\"ReportVariants\", \"VersioningObjects\"]\n}\n}\n}\n</code></pre>"},{"location":"features/DiagnosticIgnorance/","title":"Escaping Code from Diagnostic","text":"<p>The static analyzer detects problems, errors, and flaws in the code in accordance with the rules (diagnostics) embedded in it. As elsewhere, there may be situations in the solution code where you need to deviate from the rules. These situations can occur for various reasons: both due to the architectural features of the solution, and as a result of the inability (for various reasons) to change the code to meet the requirements.</p> <p>Instead of manually mark a comment as irrelevant every time, BSL LS provides functionality that allows you to hide or screen individual sections of code from triggering diagnostics.</p>"},{"location":"features/DiagnosticIgnorance/#Description","title":"Description","text":"<p>To hide part of the code from the BSL LS analyzer, you must add a special comment to the code.  The escaping comment is formed as follows: <code>[Prefix][:DiagnosticKey]-[ActivationFlag]</code>. Now in more detail.</p> <ul> <li><code>Prefix</code> always is <code>// BSLLS</code></li> <li><code>DiagnosticKey</code> can be found in the list of diagnostics by description</li> <li><code>ActivationFlag</code> string parameter if diagnostic is On or Off. Supported Russian (<code>\u0432\u043a\u043b</code> and <code>\u0432\u044b\u043a\u043b</code>) and English (<code>on</code> and <code>off</code>).</li> </ul> <p>To disable ALL diagnostics for part of the code, you must omit the diagnostic key.</p>"},{"location":"features/DiagnosticIgnorance/#Examples-and-use-cases","title":"Examples and use cases","text":""},{"location":"features/DiagnosticIgnorance/#Disable-all-diagnostics-in-the-module","title":"Disable all diagnostics in the module","text":"<p>To disable all diagnostics in the module, i.e. essentially hide the module from the BSL LS analyzer, you need to insert a comment <code>// BSLLS-off</code> (or <code>// BSLLS-\u0432\u044b\u043a\u043b</code>) at the beginning of the module</p>"},{"location":"features/DiagnosticIgnorance/#Disable-specific-diagnostics-in-the-module","title":"Disable specific diagnostics in the module","text":"<p>For disable specific diagnostics in the module (for example, the cognitive complexity <code>CognitiveComplexity</code> and size limit of the method <code>MethodSize</code>), you must insert the comment <code>// BSLLS:CognitiveComplexity-off</code> and <code>// BSLLS:MethodSize-off</code> (or <code>// BSLLS:CognitiveComplexity-\u0432\u044b\u043a\u043b</code> and <code>// BSLLS:MethodSize-\u0432\u044b\u043a\u043b</code>)</p>"},{"location":"features/DiagnosticIgnorance/#Disable-all-diagnostics-for-code-block","title":"Disable all diagnostics for code block","text":"<p>If you want to disable diagnostics for a section of code, leaving the BSL LS option to analyze the remaining ones, you must <code>wrap</code> the hidden section of code</p> <pre><code>// BSLLS-off\nProcedure SkipByBSLLS()\n    // content will be ignored\nEndProcedure\n// BSLLS-on\n\nProcedure AnalyzeByBSLLS()\n    // content will be  analyzed\nEndProcedure\n</code></pre>"},{"location":"features/DiagnosticIgnorance/#Disable-specific-diagnostics-for-code-block","title":"Disable specific diagnostics for code block","text":"<p>If you need to disable specific diagnostics (for example, the cognitive complexity <code>CognitiveComplexity</code> and the limit on the size of the method <code>MethodSize</code>) for a section of code, you must <code>wrap</code> the hidden section of code for example</p> <pre><code>// BSLLS:MethodSize-off\nProcedure SkipedByMethodSizeMethod()\n    // Very long code block\nEndProcedure\n// BSLLS:MethodSize-on\n\n// BSLLS:CognitiveComplexity-off\nProcedure SkipedByCognitiveComplexityMethod()\n    // Very long and complexity code block\nEndProcedure\n// BSLLS:CognitiveComplexity-on\n</code></pre> <p>Embedding <code>wrappers</code>, is supported, i.e. it is possible to escape a block of code from several diagnostics, for example</p> <pre><code>// BSLLS:CognitiveComplexity-off\n// BSLLS:MethodSize-off\nProcedure SkipedByMethodSizeCognitiveComplexityMethod()\n    // Very long code block\nEndProcedure\n// BSLLS:MethodSize-on\n\nProcedure SkipedByCognitiveComplexity\u041f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u0430()\n   // Very complex and incomprehensible code block, but not long\nEndProcedure\n// BSLLS:CognitiveComplexity-on\n</code></pre>"},{"location":"features/DiagnosticIgnorance/#Disable-single-line-diagnostics","title":"Disable single line diagnostics","text":"<p>To escape a single line, you can use <code>wrapper</code> as in the example above, but it is more convenient to use <code>inline comment</code>, i.e. the comment located at the end of the line, example</p> <pre><code>Procedure SomeMethode()\n    if true then// BSLLS:CanonicalSpellingKeywords-off\n        // Analized content\n    EndIf;\nEndProcedure\n</code></pre>"},{"location":"features/Monitoring/","title":"Monitoring and reporting errors","text":"<p>BSL Language Server contains a mechanism for sending error data to Sentry.</p> <p>The public Sentry.io is used as the Sentry server at https://sentry.io/organizations/1c-syntax/projects/bsl-language-server</p> <p>Unfortunately, the peculiarities of configuring access to Sentry.io limit the ability to view data unauthorized users.</p>"},{"location":"features/Monitoring/#Scheme","title":"Scheme","text":"<p>In the configuration file of the BSL Language Server, you can configure the mode for sending error messages. The send mode can take one of three values:</p> <ul> <li>ask (default);</li> <li>send always;</li> <li>never send.</li> </ul> <p>If the configuration file is missing a setting or has a value of \"ask\", when an error occurs the connected language client (used by the IDE) is sent a question about further actions with an error with the following answer options:</p> <ul> <li>send this error but ask again;</li> <li>don't send this error but ask again.</li> <li>send this error and don't ask again;</li> <li>don't send this error and don't ask again;</li> </ul> <p>You can completely refuse to answer (for example, by clicking on the cross next to the notification with the question). Lack of response is perceived as \"don't send this error, but ask again\".</p> <p>The error message does not contain user or workstation identification information, except for the generated session UUID to bind errors that occur within one launching BSL Language Server.</p> <p>Attention!</p> <p>If you enable debug logging (by setting <code>logback</code> or using environment variables), the contents of the logs (the last 100 entries) will be attached to the event that is sent.</p> <p>Some messages sent between Language Client and BSL Language Server contain source code snippets or the entire text of the file. These fragments can also be attached to the sent message.</p> <p>Sending message example:</p> <p>??? event.json</p> <pre><code>```json\n{\n    \"event_id\": \"746e2e82f4c1499abcdd935bc4c26644\",\n    \"project\": 5790531,\n    \"release\": \"ae081de9d3c3496ddac1d176259365191966b0cd\",\n    \"dist\": null,\n    \"platform\": \"java\",\n    \"message\": \"Internal error: java.lang.RuntimeException: psss\",\n    \"datetime\": \"2022-07-14T11:07:57.875000Z\",\n    \"tags\": [\n        [\n            \"environment\",\n            \"production\"\n        ],\n        [\n            \"level\",\n            \"error\"\n        ],\n        [\n            \"logger\",\n            \"org.eclipse.lsp4j.jsonrpc.RemoteEndpoint\"\n        ],\n        [\n            \"runtime\",\n            \"AdoptOpenJDK 15.0.2\"\n        ],\n        [\n            \"runtime.name\",\n            \"AdoptOpenJDK\"\n        ],\n        [\n            \"release\",\n            \"ae081de9d3c3496ddac1d176259365191966b0cd\"\n        ],\n        [\n            \"user\",\n            \"id:49516eb9-2a0d-4a15-bd96-978b68d8d0df\"\n        ],\n        [\n            \"server.version\",\n            \"feature-sentry-ae081de-DIRTY\"\n        ]\n    ],\n    \"_metrics\": {\n        \"bytes.ingested.event\": 3289,\n        \"bytes.stored.event\": 9875\n    },\n    \"contexts\": {\n        \"runtime\": {\n            \"name\": \"AdoptOpenJDK\",\n            \"version\": \"15.0.2\",\n            \"type\": \"runtime\"\n        }\n    },\n    \"culprit\": \"java.util.concurrent.CompletableFuture in encodeThrowable\",\n    \"environment\": \"production\",\n    \"exception\": {\n        \"values\": [\n            {\n                \"type\": \"RuntimeException\",\n                \"value\": \"psss\",\n                \"module\": \"java.lang\",\n                \"stacktrace\": {\n                    \"frames\": [\n                        {\n                            \"function\": \"run\",\n                            \"module\": \"java.util.concurrent.ForkJoinWorkerThread\",\n                            \"in_app\": false\n                        },\n                        {\n                            \"function\": \"runWorker\",\n                            \"module\": \"java.util.concurrent.ForkJoinPool\",\n                            \"in_app\": false\n                        },\n                        {\n                            \"function\": \"scan\",\n                            \"module\": \"java.util.concurrent.ForkJoinPool\",\n                            \"in_app\": false\n                        },\n                        {\n                            \"function\": \"topLevelExec\",\n                            \"module\": \"java.util.concurrent.ForkJoinPool$WorkQueue\",\n                            \"in_app\": false\n                        },\n                        {\n                            \"function\": \"doExec\",\n                            \"module\": \"java.util.concurrent.ForkJoinTask\",\n                            \"in_app\": false\n                        },\n                        {\n                            \"function\": \"exec\",\n                            \"module\": \"java.util.concurrent.CompletableFuture$AsyncSupply\",\n                            \"in_app\": false\n                        },\n                        {\n                            \"function\": \"run\",\n                            \"module\": \"java.util.concurrent.CompletableFuture$AsyncSupply\",\n                            \"in_app\": false\n                        },\n                        {\n                            \"function\": \"lambda$prepareCallHierarchy$8\",\n                            \"module\": \"com.github._1c_syntax.bsl.languageserver.BSLTextDocumentService\",\n                            \"filename\": \"BSLTextDocumentService.java\",\n                            \"abs_path\": \"BSLTextDocumentService.java\",\n                            \"lineno\": 234,\n                            \"in_app\": true\n                        },\n                        {\n                            \"function\": \"prepareCallHierarchy\",\n                            \"module\": \"com.github._1c_syntax.bsl.languageserver.providers.CallHierarchyProvider\",\n                            \"filename\": \"CallHierarchyProvider.java\",\n                            \"abs_path\": \"CallHierarchyProvider.java\",\n                            \"lineno\": 62,\n                            \"in_app\": true\n                        }\n                    ]\n                },\n                \"thread_id\": 24\n            },\n            {\n                \"type\": \"CompletionException\",\n                \"value\": \"java.lang.RuntimeException: psss\",\n                \"module\": \"java.util.concurrent\",\n                \"stacktrace\": {\n                    \"frames\": [\n                        {\n                            \"function\": \"run\",\n                            \"module\": \"java.util.concurrent.ForkJoinWorkerThread\",\n                            \"in_app\": false\n                        },\n                        {\n                            \"function\": \"runWorker\",\n                            \"module\": \"java.util.concurrent.ForkJoinPool\",\n                            \"in_app\": false\n                        },\n                        {\n                            \"function\": \"scan\",\n                            \"module\": \"java.util.concurrent.ForkJoinPool\",\n                            \"in_app\": false\n                        },\n                        {\n                            \"function\": \"topLevelExec\",\n                            \"module\": \"java.util.concurrent.ForkJoinPool$WorkQueue\",\n                            \"in_app\": false\n                        },\n                        {\n                            \"function\": \"doExec\",\n                            \"module\": \"java.util.concurrent.ForkJoinTask\",\n                            \"in_app\": false\n                        },\n                        {\n                            \"function\": \"exec\",\n                            \"module\": \"java.util.concurrent.CompletableFuture$AsyncSupply\",\n                            \"in_app\": false\n                        },\n                        {\n                            \"function\": \"run\",\n                            \"module\": \"java.util.concurrent.CompletableFuture$AsyncSupply\",\n                            \"in_app\": false\n                        },\n                        {\n                            \"function\": \"completeThrowable\",\n                            \"module\": \"java.util.concurrent.CompletableFuture\",\n                            \"in_app\": false\n                        },\n                        {\n                            \"function\": \"encodeThrowable\",\n                            \"module\": \"java.util.concurrent.CompletableFuture\",\n                            \"in_app\": false\n                        }\n                    ]\n                },\n                \"thread_id\": 24\n            }\n        ]\n    },\n    \"extra\": {\n        \"thread_name\": \"ForkJoinPool.commonPool-worker-19\"\n    },\n    \"fingerprint\": [\n        \"{{ default }}\"\n    ],\n    \"grouping_config\": {\n        \"enhancements\": \"eJybzDRxY3J-bm5-npWRgaGlroGxrpHxBABcYgcZ\",\n        \"id\": \"newstyle:2019-10-29\"\n    },\n    \"hashes\": [\n        \"4a63b2a190b48dc2bbafb225c5140009\",\n        \"cfeccf65e86c6129d81e7fd1df568ce3\"\n    ],\n    \"ingest_path\": [\n        {\n            \"version\": \"22.6.0\",\n            \"public_key\": \"XE7QiyuNlja9PZ7I9qJlwQotzecWrUIN91BAO7Q5R38\"\n        }\n    ],\n    \"key_id\": \"1646438\",\n    \"level\": \"error\",\n    \"logentry\": {\n        \"formatted\": \"Internal error: java.lang.RuntimeException: psss\"\n    },\n    \"logger\": \"org.eclipse.lsp4j.jsonrpc.RemoteEndpoint\",\n    \"metadata\": {\n        \"display_title_with_tree_label\": false,\n        \"function\": \"encodeThrowable\",\n        \"type\": \"CompletionException\",\n        \"value\": \"java.lang.RuntimeException: psss\"\n    },\n    \"nodestore_insert\": 1657796884.036383,\n    \"received\": 1657796882.652077,\n    \"sdk\": {\n        \"name\": \"sentry.java.spring-boot\",\n        \"version\": \"6.2.1\",\n        \"packages\": [\n            {\n                \"name\": \"maven:io.sentry:sentry\",\n                \"version\": \"6.2.1\"\n            },\n            {\n                \"name\": \"maven:io.sentry:sentry-spring-boot-starter\",\n                \"version\": \"6.2.1\"\n            }\n        ]\n    },\n    \"timestamp\": 1657796877.875,\n    \"title\": \"CompletionException: java.lang.RuntimeException: psss\",\n    \"type\": \"error\",\n    \"user\": {\n        \"id\": \"49516eb9-2a0d-4a15-bd96-978b68d8d0df\"\n    },\n    \"version\": \"7\",\n    \"location\": null\n}\n```\n</code></pre>"},{"location":"reporters/","title":"Reporters","text":"<p>Used to get analysis results.</p>"},{"location":"reporters/#Implemented-reporters","title":"Implemented reporters","text":"<ul> <li>json - analysis results in proprietary JSON format, supported by SonarQube 1C (BSL) Community Plugin;</li> <li>generic - analysis results in Generic issue format for SonarQube;</li> <li>junit;</li> <li>tslint;</li> <li>sarif;</li> <li>console.</li> </ul>"},{"location":"reporters/console/","title":"Console reporter","text":"<p>Reporter option - <code>console</code></p>"},{"location":"reporters/console/#Description","title":"Description","text":"<p>Output the analize result in stdout and/or attached logger. Output result, returned <code>toString()</code> method of object AnalysisInfo</p>"},{"location":"reporters/console/#Sample-output","title":"Sample output","text":"<pre><code>Analysis date: 2019-01-28T15:32:06.856\n[FileInfo(path=C:\\src\\cf\\Catalogs\\MyCatalog\\Ext\\ManagerModule.bsl, diagnostics=[]), FileInfo(path=C:\\src\\cf\\Catalogs\\Goods\\Ext\\ObjectModule.bsl, diagnostics=[Diagnostic [\n  range = Range [\n    start = Position [\n      line = 55\n      character = 0\n    ]\n    end = Position [\n      line = 55\n      character = 140\n    ]\n  ]\n  severity = Information\n  code = \"LineLengthDiagnostic\"\n  source = \"bsl-language-server\"\n  message = \"Line length exceeded\"\n  relatedInformation = null\n]])]\n</code></pre>"},{"location":"reporters/generic/","title":"Generic Issue reporter","text":"<p>Reporter option - <code>generic</code></p>"},{"location":"reporters/generic/#Description","title":"Description","text":"<p>Output the analize result to file <code>bsl-generic-json.json</code> in the current workspace directory. See more Generic Issue.</p>"},{"location":"reporters/generic/#Sample-output","title":"Sample output","text":"<pre><code>{\n\"issues\": [\n{\n\"engineId\": \"bsl-language-server\",\n\"ruleId\": \"FunctionShouldHaveReturn\",\n\"severity\": \"CRITICAL\",\n\"type\": \"BUG\",\n\"primaryLocation\": {\n\"message\": \"Function should have \\\"Return\\\"\",\n\"filePath\": \"project/src/DataProcessors/Exchange/Ext/ObjectModule.bsl\",\n\"textRange\": {\n\"startLine\": 66,\n\"endLine\": 66,\n\"startColumn\": 9,\n\"endColumn\": 31\n}\n},\n\"effortMinutes\": 0\n}\n]\n}\n</code></pre>"},{"location":"reporters/json/","title":"JSON reporter","text":"<p>Reporter option - <code>json</code></p>"},{"location":"reporters/json/#Description","title":"Description","text":"<p>Output the analize result to file  <code>bsl-json.json</code> in the current workspace directory. Output the result of JSON serialization AnalysisInfo object</p>"},{"location":"reporters/json/#Scheme","title":"Scheme:","text":"<ul> <li>date - date of analysis.</li> <li>fileinfos - array of file information.</li> <li> <p>sourceDir - path to the source directory without the \"file: ///\" prefix.</p> </li> <li> </li> <li>path - path to the source file with \"file:///\" prefix.</li> <li>mdoRef - object reference description (empty value (\"\") is allowed). For example: \"Catalog.Organizations\"</li> <li>diagnostics - array of diagnostics information.</li> <li> <p>metrics - file metrics (optional).</p> </li> <li> </li> </ul>"},{"location":"reporters/json/#fileinfo","title":"fileinfo:","text":""},{"location":"reporters/json/#diagnostic","title":"diagnostic:","text":"<ul> <li>range - Location of the error in the file.</li> <li>severity - One of Error, Warning, Hint, Information</li> <li>code - Diagnostic code.</li> <li>source - Diagnostics repo.</li> <li>message - Diagnostics message.</li> <li>tags - Diagnostics tags. (empty value allowed (null))</li> <li>relatedInformation - Array of the location of similar errors in the file or some additional information. (empty value allowed (null)).</li> </ul>"},{"location":"reporters/json/#Sample-output","title":"Sample output","text":"<pre><code>{\n\"date\": \"2019-01-21 01:29:27\",\n\"fileinfos\": [\n{\n\"path\": \"file:///tmp/src/Module.bsl\",\n\"mdoRef\": \"\",\n\"diagnostics\": [\n{\n\"range\": {\n\"end\": {\n\"character\": 29,\n\"line\": 43\n},\n\"start\": {\n\"character\": 8,\n\"line\": 43\n}\n},\n\"severity\": \"Error\",\n\"code\": \"FunctionShouldHaveReturnDiagnostic\",\n\"source\": \"bsl-language-server\",\n\"message\": \"Function should have \\\"Return\\\"\",\n\"tags\": null,\n\"relatedInformation\": null\n}\n],\n\"metrics\": {\n\"procedures\": 1,\n\"functions\": 1,\n\"lines\": 10,\n\"ncloc\": 9,\n\"comments\": 1,\n\"statements\": 60,\n\"nclocData\": [\n1,\n2,\n3,\n4,\n5,\n6,\n7,\n8,\n10\n],\n\"covlocData\": [\n2,\n3,\n4,\n5,\n6,\n7,\n8\n],\n\"cognitiveComplexity\": 13,\n\"cyclomaticComplexity\": 17\n}\n}\n],\n\"sourceDir\": \"file:///tmp/src\"\n}\n</code></pre>"},{"location":"reporters/junit/","title":"JUnit reporter","text":"<p>Reporter option - <code>junit</code></p>"},{"location":"reporters/junit/#Description","title":"Description","text":"<p>Output the analize result to file <code>bsl-junit.xml</code> in the current workspace directory. The output format you can find at TSLint documentation, formatter junit.</p>"},{"location":"reporters/sarif/","title":"SARIF reporter","text":"<p>Reporter option - <code>sarif</code></p>"},{"location":"reporters/sarif/#Description","title":"Description","text":"<p>Output the analysis results into file <code>bsl-ls.sarif</code> in the current working directory. File format is specified by OASIS and available here: https://docs.oasis-open.org/sarif/sarif/v2.1.0/sarif-v2.1.0.html.</p>"},{"location":"reporters/sarif/#Sample-output","title":"Sample output","text":"<pre><code>{\n\"$schema\" : \"https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json\",\n\"version\" : \"2.1.0\",\n\"runs\" : [ {\n\"tool\" : {\n\"driver\" : {\n\"name\" : \"BSL Language Server\",\n\"organization\" : \"1c-syntax\",\n\"version\" : \"0.19.0\",\n\"informationUri\" : \"https://1c-syntax.github.io/bsl-language-server\",\n\"rules\" : [ {\n\"id\" : \"MissingSpace\",\n\"name\" : \"Missing spaces to the left or right of operators\",\n\"fullDescription\" : {\n\"text\" : \"# Missing spaces to the left or right of operators\",\n\"markdown\" : \"# Missing spaces to the left or right of operators\"\n},\n\"defaultConfiguration\" : {\n\"level\" : \"none\",\n\"parameters\" : {\n\"listForCheckLeftAndRight\" : \"+ - * / = % &lt; &gt; &lt;&gt; &lt;= &gt;=\",\n\"allowMultipleCommas\" : false,\n\"checkSpaceToRightOfUnary\" : false,\n\"listForCheckLeft\" : \"\",\n\"listForCheckRight\" : \", ;\"\n}\n},\n\"helpUri\" : \"https://1c-syntax.github.io/bsl-language-server/diagnostics/MissingSpace\",\n\"properties\" : {\n\"tags\" : [ \"BADPRACTICE\" ]\n}\n} ],\n\"language\" : \"en\"\n}\n},\n\"invocations\" : [ {\n\"ruleConfigurationOverrides\" : [ {\n\"configuration\" : {\n\"enabled\" : false\n},\n\"descriptor\" : {\n\"id\" : \"Typo\"\n}\n}, {\n\"configuration\" : {\n\"parameters\" : {\n\"test\" : 1\n}\n},\n\"descriptor\" : {\n\"id\" : \"some\"\n}\n}, {\n\"configuration\" : { },\n\"descriptor\" : {\n\"id\" : \"test\"\n}\n} ],\n\"executionSuccessful\" : true,\n\"processId\" : 14596,\n\"workingDirectory\" : {\n\"uri\" : \"file:///D:/git/1c-syntax/bsl-language-server/\"\n}\n} ],\n\"language\" : \"ru\",\n\"results\" : [ {\n\"ruleId\" : \"test\",\n\"level\" : \"error\",\n\"message\" : {\n\"text\" : \"message\"\n},\n\"analysisTarget\" : {\n\"uri\" : \"file:///D:/fake-uri.bsl\"\n},\n\"locations\" : [ {\n\"physicalLocation\" : {\n\"artifactLocation\" : {\n\"uri\" : \"file:///D:/fake-uri.bsl\"\n},\n\"region\" : {\n\"startLine\" : 1,\n\"startColumn\" : 2,\n\"endLine\" : 3,\n\"endColumn\" : 4\n}\n},\n\"message\" : {\n\"text\" : \"message\"\n}\n} ],\n\"relatedLocations\" : [ ]\n} ],\n\"defaultEncoding\" : \"UTF-8\",\n\"defaultSourceLanguage\" : \"BSL\"\n} ]\n}\n</code></pre>"},{"location":"reporters/tslint/","title":"TSLint reporter","text":"<p>Reporter option - <code>tslint</code></p>"},{"location":"reporters/tslint/#Description","title":"Description","text":"<p>Output the analysis results into file <code>bsl-tslint.json</code> in the current workspace directory. Output format is described in TSLint documentation, formatter  json</p>"}]}