// Тестовый модуль для проверки служебных тегов в комментариях
// TODO: удалить после внедрения БСП
Функция СкопироватьСтруктуру(ВходящаяСтруктура)
    
    Если ТипЗнч(ВходящаяСтруктура) <> Тип("Структура") Тогда
        Возврат Новый Структура;
    КонецЕсли;
    
    НоваяСтруктура = Новый Структура;
    Для Каждого КлючЗначение Из ВходящаяСтруктура Цикл
        НоваяСтруктура.Вставить(КлючЗначение.Ключ, КлючЗначение.Значение);
    КонецЦикла;
    
    // FIXME: Добавиить новое значение в структуру
    // НоваяСтруктура.Вставить("Тест", "TODO");
    Возврат НоваяСтруктура;
    
КонецФункции

// Просто описание функции
Функция ВернутьЗначение()
    // TODO: просто проверка?
    Возврат 1;
КонецФункции

// !!!_nik: Такой-то текст
Процедура ПроверочнаяПроцедура() // !!_nik: Такой-то текст
    
    // @nik
    ЧтоТо = Истина; // отладка
    
    // debug
    Если ЧтоТо Тогда // отладка
        
        // дляотладки
        
    КонецЕсли;
    
КонецПроцедуры

Процедура ПроверочнаяФункция()
    
    //{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
    // Данный фрагмент построен конструктором.
    // При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
    
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ
        |	Автомобили.Ссылка КАК Ссылка
        |ИЗ
        |	Справочник.Автомобили КАК Автомобили";
    
    РезультатЗапроса = Запрос.Выполнить();
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    
    Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
        // Вставить обработку выборки ВыборкаДетальныеЗаписи
    КонецЦикла;
    
    //}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
    
КонецПроцедуры

//{{MRG[  ]
//            ПредставлениеПодразделения = Подразделение.Наименование;
//}}MRG[  ]

// Просто описание функции
Функция ВернутьВтороеЗначение()
    // для отладки: просто проверка?
    Возврат 1;
КонецФункции

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
    // С таким комментарием генерирует 1С обработчики
    // Вставить содержимое обработчика.
КонецПроцедуры

Procedure Posting(Cancel, PostingMode)
    // Вариант на английском для модуля объекта
    // Insert handler code.
EndProcedure

&AtServer
Procedure Command1AtServer()
    // Вариант на английском для модуля формы
    // Insert handler contents.
EndProcedure

&AtClient
Procedure Command1(Command)
	Command1AtServer();
EndProcedure

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
    //Вставить содержимое обработчика.
	//ПараметрыФормы = Новый Структура("", );
	//ОткрытьФорму("Обработка.Обработка1.Форма", ПараметрыФормы, ПараметрыВыполненияКоманды.Источник, ПараметрыВыполненияКоманды.Уникальность, ПараметрыВыполненияКоманды.Окно, ПараметрыВыполненияКоманды.НавигационнаяСсылка);
КонецПроцедуры

&AtClient
Procedure CommandProcessing(CommandParameter, CommandExecuteParameters)
    //Paste handler content.
	//FormParameters = New Structure("", );
	//OpenForm("Document.Document1.ListForm", FormParameters, CommandExecuteParameters.Source, CommandExecuteParameters.Uniqueness, CommandExecuteParameters.Window, CommandExecuteParameters.URL);
EndProcedure

&AtClient
Procedure AfterWrite(WriteParameters)
    //Insert handler contents
EndProcedure