name: Make image

on:
    release:
        types: [published, edited]

jobs:
    build:
        strategy:
            fail-fast: true
            matrix:
               os: [windows-latest, ubuntu-latest, macOS-latest]
               include:
                    - os: windows-latest
                      displayName: Windows
                      prefix: win
                      app-image: bsl-language-server
                    - os: ubuntu-latest
                      displayName: Linux
                      prefix: nix
                      app-image: bsl-language-server
                    - os: macOS-latest
                      displayName: MacOS
                      prefix: mac
                      app-image: bsl-language-server.app
        runs-on: ${{ matrix.os }}
        name: (${{ matrix.displayName }}) create image app version

        steps:
            - name: Checkout source
              uses: actions/checkout@v2.3.4             
            - name: Set up JDK
              uses: actions/setup-java@v2
              with:
                java-version: 16
                distribution: 'adopt'
            - name: Build bootJar with Gradle
              run: ./gradlew check bootJar
            - name: Build jpackage app-image
              run: |
                    import os
                    import platform
                    import re
                    import ntpath
                    import shutil

                    pattern = r"bsl.+\.jar"
                    thisPlatform = platform.system();
                    isWindows = False
                    if thisPlatform == 'Windows':
                        isWindows = True
                        
                    if isWindows:
                        dirName = os.getcwd() + "\\build\\libs"
                    else:
                        dirName = os.getcwd() + "/build/libs"

                    def start():
                        fullname = get_bslls_jar(dirName)
                        if (fullname == None):
                            exit
                        
                        cmdArgs = ['jpackage']
                        cmdArgs.append('--name')
                        cmdArgs.append('bsl-language-server')
                        cmdArgs.append('--input')
                        cmdArgs.append('build/libs')
                        cmdArgs.append('--main-jar')
                        cmdArgs.append(fullname)
                        if isWindows:
                            cmdArgs.append('--win-console')
                        cmdArgs.append('--type')
                        cmdArgs.append('app-image')
                        cmdArgs.append('--java-options')
                        cmdArgs.append('-Xmx2g')

                        cmd = ' '.join(cmdArgs) 
                        os.system(cmd)
                          
                        shutil.make_archive("bsl-language-server_" + "${{ matrix.prefix }}", 'zip', './',"${{ matrix.app-image }}")

                    def get_bslls_jar(dir):
                        names = os.listdir(dir)
                        for name in names:
                            fullname = os.path.join(dir, name)
                            if os.path.isfile(fullname) and re.search(pattern, fullname) and fullname.find('exec.jar') != -1:
                                return ntpath.basename(fullname)
                        return None

                    start()
              shell: python
            - name: Upload artifact
              uses: actions/upload-artifact@v2.2.4
              with:
                name: bsl-language-server_${{ matrix.prefix }}.zip
                path: ./${{ matrix.app-image }}
            - name: Upload assets to release
              uses: AButler/upload-release-assets@v1.0
              with:
                  files: './bsl-language-server_${{ matrix.prefix }}.zip'
                  repo-token: ${{ secrets.GITHUB_TOKEN }}
            - name: Build with Gradle
              if: matrix.prefix == 'nix'
              run: ./gradlew build
            - name: Upload jar to release
              if: matrix.prefix == 'nix'
              uses: AButler/upload-release-assets@v1.0
              with:
                  files: './build/libs/*.jar'
                  repo-token: ${{ secrets.GITHUB_TOKEN }}
