Процедура Первые1БезСортировки()
    ТекстЗапроса =
    "ВЫБРАТЬ ПЕРВЫЕ 1                           // <-- Ошибка, но может исключаться параметром
    |   Справочник.Ссылка
    |ИЗ
    |   Справочник.Контрагенты КАК Справочник";
КонецПроцедуры

Процедура Первые1ССортировкой()
    ТекстЗапроса =
    "ВЫБРАТЬ ПЕРВЫЕ 1                           // <-- Нет ошибки
    |   Справочник.Ссылка
    |ИЗ
    |   Справочник.Контрагенты КАК Справочник
    |УПОРЯДОЧИТЬ ПО
    |   Справочник.Код";
КонецПроцедуры

Процедура Первые1БезСортировкиИСортировкаВДругомЗапросе()
    ТекстЗапроса =
    "ВЫБРАТЬ ПЕРВЫЕ 1                           // <-- Ошибка, но может исключаться параметром
    |   Справочник.Ссылка
    |ИЗ
    |   Справочник.Контрагенты КАК Справочник
    |;
    |///////////////////////////////////////////////
    |ВЫБРАТЬ
    |   Справочник.Ссылка
    |ИЗ
    |   Справочник.Пользователи КАК Справочник
    |УПОРЯДОЧИТЬ ПО
    |   Справочник.Код";
КонецПроцедуры

Процедура Первые10БезСортировки()
    ТекстЗапроса =
    "ВЫБРАТЬ ПЕРВЫЕ 10                           // <-- Ошибка
    |   Справочник.Ссылка
    |ИЗ
    |   Справочник.Контрагенты КАК Справочник";
КонецПроцедуры

Процедура Первые10ССортировкой()
    ТекстЗапроса =
    "ВЫБРАТЬ ПЕРВЫЕ 10                          // <-- Нет ошибки
    |   Справочник.Ссылка
    |ИЗ
    |   Справочник.Контрагенты КАК Справочник
    |УПОРЯДОЧИТЬ ПО
    |   Справочник.Код";
КонецПроцедуры

Процедура Первые10БезСортировкиИСортировкаВДругомЗапросе()
    ТекстЗапроса =
    "ВЫБРАТЬ ПЕРВЫЕ 10                          // <-- Ошибка
    |   Справочник.Ссылка
    |ИЗ
    |   Справочник.Контрагенты КАК Справочник
    |;
    |///////////////////////////////////////////////
    |ВЫБРАТЬ
    |   Справочник.Ссылка
    |ИЗ
    |   Справочник.Пользователи КАК Справочник
    |УПОРЯДОЧИТЬ ПО
    |   Справочник.Код";
КонецПроцедуры

Процедура Первые10СВПараметрахБезСортировки()
    ТекстЗапроса =
    "ВЫБРАТЬ
    |   Справочник.Ссылка
    |ИЗ
    |   Справочник.Контрагенты КАК Справочник
    |ГДЕ
    |   Справочник.Ссылка В (
    |       ВЫБРАТЬ ПЕРВЫЕ 10                   // <-- Ошибка
    |           Ссылка
    |       ИЗ
    |           Справочник.Контрагенты)";
КонецПроцедуры

Процедура Первые1СВПараметрахБезСортировки()
    ТекстЗапроса =
    "ВЫБРАТЬ
    |   Справочник.Ссылка
    |ИЗ
    |   Справочник.Контрагенты КАК Справочник
    |ГДЕ
    |   Справочник.Ссылка В (
    |       ВЫБРАТЬ ПЕРВЫЕ 1                    // <-- Ошибка, но может исключаться параметром
    |           Ссылка
    |       ИЗ
    |           Справочник.Контрагенты)";
КонецПроцедуры

Процедура Первые10ВоВложенномБезСортировки()
    ТекстЗапроса =
    "ВЫБРАТЬ ПЕРВЫЕ 5
    |	Справочник.Ссылка КАК Ссылка
    |ИЗ
    |	(ВЫБРАТЬ ПЕРВЫЕ 10                      // <-- Ошибка
    |		Контрагенты.Ссылка КАК Ссылка
    |	ИЗ
    |		Справочник.Контрагенты КАК Контрагенты) КАК Справочник
    |
    |УПОРЯДОЧИТЬ ПО
    |	Ссылка";
КонецПроцедуры

Процедура Первые1ВоВложенномБезСортировки()
    ТекстЗапроса =
    "ВЫБРАТЬ ПЕРВЫЕ 5
    |	Справочник.Ссылка КАК Ссылка
    |ИЗ
    |	(ВЫБРАТЬ ПЕРВЫЕ 1                       // <-- Ошибка, но может исключаться параметром
    |		Контрагенты.Ссылка КАК Ссылка
    |	ИЗ
    |		Справочник.Контрагенты КАК Контрагенты) КАК Справочник
    |
    |УПОРЯДОЧИТЬ ПО
    |	Ссылка";
КонецПроцедуры

Процедура Первые10СВПараметрахБезСортировкиССортировкойВоВнешнем()
    ТекстЗапроса =
    "ВЫБРАТЬ
    |   Справочник.Ссылка
    |ИЗ
    |   Справочник.Контрагенты КАК Справочник
    |ГДЕ
    |   Справочник.Ссылка В (
    |       ВЫБРАТЬ ПЕРВЫЕ 10                   // <-- Ошибка
    |           Ссылка
    |       ИЗ
    |           Справочник.Контрагенты)
    |УПОРЯДОЧИТЬ ПО
    |   Справочник.Код";
КонецПроцедуры

Процедура Первые10ВОбъединенииСУпорядочить()
    ТекстЗапроса =
    "ВЫБРАТЬ
    |   Справочник.Ссылка
    |ИЗ
    |   Справочник.Контрагенты КАК Справочник
    |ГДЕ
    |   Справочник.Ссылка В (
    |       ВЫБРАТЬ ПЕРВЫЕ 10                   // <-- Ошибка
    |           Ссылка
    |       ИЗ
    |           Справочник.Контрагенты)
    |
    |ОБЪЕДИНИТЬ ВСЕ
    |
    |ВЫБРАТЬ ПЕРВЫЕ 10                          // <-- Ошибка
    |   Справочник.Ссылка
    |ИЗ
    |   Справочник.Контрагенты КАК Справочник
    |
    |ОБЪЕДИНИТЬ ВСЕ
    |
    |ВЫБРАТЬ ПЕРВЫЕ 1                          // <-- Всегда ошибка, даже 1
    |   Справочник.Ссылка
    |ИЗ
    |   Справочник.Контрагенты КАК Справочник
    |УПОРЯДОЧИТЬ ПО
    |   Ссылка";
КонецПроцедуры

Процедура Первые10ВОбъединенииСУпорядочить()
    ТекстЗапроса =
    "ВЫБРАТЬ ПЕРВЫЕ 1                               // <-- Нет ошибки
    |   ПодЗапрос.Ссылка
    |ИЗ
    |   (ВЫБРАТЬ
    |       Справочник.Ссылка
    |   ИЗ
    |       Справочник.Контрагенты КАК Справочник
    |   ГДЕ
    |       Справочник.Ссылка В (
    |           ВЫБРАТЬ ПЕРВЫЕ 10                   // <-- Ошибка
    |               Ссылка
    |           ИЗ
    |               Справочник.Контрагенты)
    |
    |   ОБЪЕДИНИТЬ ВСЕ
    |
    |   ВЫБРАТЬ ПЕРВЫЕ 10                          // <-- Ошибка
    |       Справочник.Ссылка
    |   ИЗ
    |       Справочник.Контрагенты КАК Справочник) КАК ПодЗапрос
    |
    |УПОРЯДОЧИТЬ ПО
    |   Ссылка";
КонецПроцедуры

Процедура Первые1БезСортировкиСГде()
    ТекстЗапроса =
    "ВЫБРАТЬ ПЕРВЫЕ 1                           // <-- Нет ошибки
    |   Справочник.Ссылка
    |ИЗ
    |   Справочник.Контрагенты КАК Справочник
    |ГДЕ
    |   Справочник.Код = 1";
КонецПроцедуры

Процедура ЗапросСПодстановкойЗапросаВОбъединение()
    ТекстЗапроса =
    "ВЫБРАТЬ
    |   ОстаткиНоменклатуры.Номенклатура КАК Номенклатура
    |ПОМЕСТИТЬ ВТ_ОстаткиНоменклатуры
    |ИЗ
    |   (ВЫБРАТЬ
    |       ОстаткиНаКонецПериода.Номенклатура КАК Номенклатура
    |   ИЗ
    |       РегистрНакопления.ТоварыОрганизаций.Остатки() КАК ОстаткиНаКонецПериода
    |
    |   ОБЪЕДИНИТЬ ВСЕ
    |
    |//%ТекстОстаткиПоМесяцам%) КАК ОстаткиНоменклатуры";
КонецПроцедуры

