Процедура Тест1()
    Значение = 1; // ошибка
    Значение = 2;

    МояПеременная = СтрЗаменить(КакаятоПеременная); // ошибка
    МояПеременная = СтрЗаменить(КакаятоДругаяПеременная);
КонецПроцедуры

Процедура Тест2()
    ТекстЗапроса = "Первый"; // ошибка
    ТекстЗапроса = "Второй";
    Запрос = Новый Запрос(ТекстЗапроса);
КонецПроцедуры

Процедура Тест3()
    ТекстЗапроса = "Первый"; // нет ошибки
    Если Условие Тогда
      ТекстЗапроса = "Второй";
    КонецЕсли;
    Запрос = Новый Запрос(ТекстЗапроса);
КонецПроцедуры

Процедура Тест4()
    ТекстЗапроса = "Первый"; // ошибка
    Если Условие Тогда
      ТекстЗапроса = "Второй";
      Запрос = Новый Запрос(ТекстЗапроса);
    КонецЕсли;
КонецПроцедуры

Процедура Тест5()
    ТекстЗапроса = "Первый"; // ошибка
    Если Условие Тогда
        ТекстЗапроса = "Второй";
        Если Условие Тогда
           Запрос = Новый Запрос(ТекстЗапроса);
        КонецЕсли;
    КонецЕсли;
КонецПроцедуры

Процедура Тест6()
   Если Условие Тогда
       ТекстЗапроса = "Первый"; // не ошибка
   Иначе
       ТекстЗапроса = "Второй";
   КонецЕсли;
   Запрос = Новый Запрос(ТекстЗапроса);
КонецПроцедуры

Процедура Тест7()
   Если Условие Тогда
       ТекстЗапроса = "Первый"; // не ошибка
   Иначе
       ТекстЗапроса = "Второй"; // ошибка
       ТекстЗапроса = "Третий";
   КонецЕсли;
   Запрос = Новый Запрос(ТекстЗапроса);
КонецПроцедуры

Процедура Тест8()
    //Значение8 = 1; // TODO не ошибка ?
    //Значение8 = Значение8; // значение8 не меняется и может быть использовано позже
КонецПроцедуры

Процедура Тест9()
  Попытка
    ТекстЗапроса = "Первый"; // не ошибка
  Исключение
    ТекстЗапроса = "Второй";
  КонецПопытки;
  Запрос = Новый Запрос(ТекстЗапроса);
КонецПроцедуры

Процедура Тест10()
  ТекстЗапроса = "Первый"; // ошибка
  ТекстЗапроса = "Второй";
  Если Условие Тогда
      Запрос = Новый Запрос(ТекстЗапроса);
  КонецЕсли;
КонецПроцедуры

Процедура Тест11()
  ТекстЗапроса = "Первый"; //не ошибка
  Если Условие Тогда
      ТекстЗапроса = "Второй";// не ошибка
      Запрос = Новый Запрос(ТекстЗапроса);
  КонецЕсли;
  Запрос = Новый Запрос(ТекстЗапроса);
КонецПроцедуры

Процедура Тест12()
  ТекстЗапроса = "Первый"; //не ошибка
  Если Условие Тогда
      ТекстЗапроса = "Второй";// не ошибка
      Если Условие2 Тогда
          ТекстЗапроса = "Третий";// не ошибка
          Запрос = Новый Запрос(ТекстЗапроса);
      КонецЕсли;
      //Запрос = Новый Запрос(ТекстЗапроса);
  КонецЕсли;
  Запрос = Новый Запрос(ТекстЗапроса);
КонецПроцедуры

Процедура Тест13()
  ТекстЗапроса = "Первый"; // не ошибка
  Если Условие Тогда
      ТекстЗапроса = "Второй";
  КонецЕсли;
КонецПроцедуры

//Или другой пример правильного кода (изменение происходит только при определённых условиях):
Процедура ПерезаписьВУсловии()
    ЛокальнаяПеременная = ВызовМоейФункции(); // не ошибка
    Если Условие Тогда
        ЛокальнаяПеременная = 42;
    ИначеЕсли ДругоеУсловие Тогда
        ЛокальнаяПеременная = ВызовФункции();
    Иначе
        ЛокальнаяПеременная = 0;
    КонецЕсли;
КонецПроцедуры

Процедура Тест14()
    ДобавляемыйНомер = 1;
    Пока Условие() Цикл
      ДобавляемыйНомер = ДобавляемыйНомер + 1; // не ошибка
    КонецЦикла;
КонецПроцедуры

Функция ВыраженияНаОднойСтроке()
    //Комментарий = 10;Комментарий = 20; //TODO ошибка (важно, что нет пробела после 10;)

    Возврат Неопределено;
КонецФункции

Функция РезультатВыполненияПриПеренаправлении(Знач ЗадачаСсылка)
    // в этом методе нет ошибок
    Комментарий = "Текст";
    //Комментарий = СокрЛП(ЗадачаСсылка.РезультатВыполнения);
    Комментарий = ?(ПустаяСтрока(Комментарий), "", Комментарий + Символы.ПС);

    ТекстОповещения = "Текст";
    ТекстОповещения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОповещения, Формат);

    ТекстЗапроса = "Текст";
    ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Текст", ДругойТекстЗапроса);

    Возврат Неопределено;
КонецФункции

Процедура Тест15()
    // в этом методе нет ошибок - код может быть где угодно
    ВидПрава = ВидыПрав.Добавить(); // нет ошибок

    // TODO ВидПрава = ВидыПрав.Добавить();

    НовыйПереход = ТаблицаПереходовНоваяСтрока("Начало", "СтраницаНавигацииНачало"); // нет ошибок
    // TODO НовыйПереход = ТаблицаПереходовНоваяСтрока("НастройкаВыгрузки", "СтраницаНавигацииПродолжение");
КонецПроцедуры

Процедура Тест15()
    // в этом методе нет ошибок
    КоличествоОбработанных = ПорцияЭлементовДанных.Количество();
    НачатьТранзакцию();
    Попытка
        Блокировка.Заблокировать();
        ЗафиксироватьТранзакцию();
    Исключение
        ОтменитьТранзакцию();
        КоличествоОбработанных = 0; // не ошибка
    КонецПопытки;
    ПорцияЭлементовДанных = Неопределено;

    ТребуетсяПрерватьОбработкуЭлементов(ПараметрыОбновления, КоличествоОбработанных);
КонецПроцедуры

Процедура УстановитьПометкуУдаленияДляОбъектов(Результат, Знач УдаляемыеСсылки, Знач ПараметрыВыполнения)
    Блокировка = Новый БлокировкаДанных;

    НачатьТранзакцию();
    Попытка
        //ЭтоОшибкаБлокировки = Истина; // TODO не ошибка?
        Блокировка.Заблокировать();

        ЭтоОшибкаБлокировки = Ложь;
        ЗафиксироватьТранзакцию();
    Исключение
        ОтменитьТранзакцию();
        Если ЭтоОшибкаБлокировки Тогда
        КонецЕсли;
    КонецПопытки;
КонецПроцедуры

Процедура ОперативнаяПамятьДоступнаяКлиентскомуПриложению()
    // TODO в этом методе нет ошибок
    //ДоступныйОбъем = 0;
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Тогда
    //ДоступныйОбъем = 1;
#ИначеЕсли ТонкийКлиент Тогда
    //ДоступныйОбъем = 2;
#Иначе
    ДоступныйОбъем = 0;
#КонецЕсли
    Возврат ДоступныйОбъем;
КонецПроцедуры
