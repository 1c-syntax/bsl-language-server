Процедура Тест() // Все комментарии про allowOneliner=false
    СтруктураВложений.Вставить(                     // <-- Ошибка, т.к. есть вложенный конструктов и метод
     ПрисоединенныйФайл.Наименование,
     Новый Картинка(ПолучитьИзВременногоХранилища(  // <-- 2 ошибки, т.к. есть вложенный метод м в конструкторе и в методе
      ПрисоединенныеФайлы.ПолучитьДанныеФайла(ПрисоединенныйФайл.Ссылка).СсылкаНаДвоичныеДанныеФайла)));

    Сообщить(СуммаСтрокой("7"), СуммаСтрокой(СуммаНДС(Перечисление.Сумма)));  // <-- не ошибка, все в одной строке

    Сообщить(СуммаСтрокой("77"),                            // <-- ошибка для Сообщить, т.к есть вложенный метод в параметрах
        СуммаСтрокой(СуммаНДС(Перечисление.ВтораяСумма)));  // <-- не ошибка для СуммаСтрокой, т.к. в одной строке
    А = Новый Массив;
    Сообщить();
    Объект.Метод().Метод2(Объект2.Метод2()); // <-- не ошибка, все в одной строке
    Объект.Метод(Объект2.Метод2()).Метод21( // <-- ошибка для Метод21, т.к. есть вложенный метод
        Объект2.Метод22());

    Структура = Новый Структура("Параметр1, Параметр2", Новый Массив(), Новый СписокЗначений()); // <-- не ошибка, все в одной строке
    Структура = Новый Структура("Параметр1, Параметр2",                             // <-- ошибка, есть вложенный конструктор с инициализацией
                Новый Структура(), Новый Структура("Параметр3", Новый Массив()));   // <-- ошибок нет

    Структура = Новый Структура("Параметр1, Параметр2",                             // <-- ошибок нет, т.к. конструктор без инициализации
                Новый Структура, Новый Массив);

КонецПроцедуры

&НаКлиенте
Процедура ПолучателиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	Если Поле <> Элементы.ПолучателиСостояниеСообщенияSMS Тогда
		Возврат;
	КонецЕсли;

	Отбор = Новый Структура;
	Отбор.Вставить("МассоваяРассылка", Объект.Ссылка);
	Отбор.Вставить("КакСвязаться", Элемент.ТекущиеДанные.КакСвязаться);

	КлючЗаписи = Новый(
	Тип("РегистрСведенийКлючЗаписи.ОчередьРассылок"),
	ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Отбор));

	ПараметрыФормыЗаписи = Новый Структура;
	ПараметрыФормыЗаписи.Вставить("Ключ", КлючЗаписи);

	ОткрытьФорму("РегистрСведений.ОчередьРассылок.ФормаЗаписи", ПараметрыФормыЗаписи);

КонецПроцедуры
Процедура Тест2()
    СсылкаНаОбъект = РегистрыСведений.СоответствиеСсылокИдентификаторам.ПолучитьСсылкуНаОбъект(
        Новый УникальныйИдентификатор(ИдентификаторОбъекта)
	);

    СсылкаНаОбъект = РегистрыСведений.СоответствиеСсылокИдентификаторам.ПолучитьСсылкуНаОбъект(
    	    Новый УникальныйИдентификатор(ИдентификаторОбъекта,
    	    Истина)
    );

    ЗаписьЖурналаРегистрации(
        НСтр("ru = 'WMS.InDeliverySetEndReceiving'", ОбщегоНазначения.КодОсновногоЯзыка()),
        УровеньЖурналаРегистрации.Ошибка,
        ,
        ,
        ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
    );
КонецПроцедуры

Процедура Тест3()
    Значение = Метод(ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка"), // нет ошибки
        ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка"));

    Значение2 = Метод(ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка"),
            ДругаяФункция("Справочник.Организации.ПустаяСсылка"));                    // ошибка

    Значение = Метод(ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка"), // Нет ошибки
            NStr("ru = 'Сообщение'"));

    PerformCalculations.RecalculateAccruals(                                          // Нет ошибки
        PredefinedValue("ChartOfCalculationTypes.MainAccruals.Salary"),
        PredefinedValue("ChartOfCalculationTypes.MainAccruals.Bonus"));

    PerformCalculations.RecalculateAccruals(Метод2(Параметр),                         // ошибка
        PredefinedValue("ChartOfCalculationTypes.MainAccruals.Salary"));

    Метод2(PredefinedValue(                                                           // Нет ошибки
        NStr("ru = 'ChartOfCalculationTypes.MainAccruals.Salary'"));
КонецПроцедуры